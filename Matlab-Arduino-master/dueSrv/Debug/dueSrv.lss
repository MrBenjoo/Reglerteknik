
dueSrv.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005b5c  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085b5c  00085b5c  00015b5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000b1c  20070000  00085b64  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000f0  20070b1c  00086680  00020b1c  2**2
                  ALLOC
  4 .stack        00002004  20070c0c  00086770  00020b1c  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020b1c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b45  2**0
                  CONTENTS, READONLY
  7 .debug_info   00016afb  00000000  00000000  00020b9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000033bf  00000000  00000000  00037699  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000042df  00000000  00000000  0003aa58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000009f0  00000000  00000000  0003ed37  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000008e0  00000000  00000000  0003f727  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00019e76  00000000  00000000  00040007  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00010c7d  00000000  00000000  00059e7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000638fe  00000000  00000000  0006aafa  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f90  00000000  00000000  000ce3f8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	10 2c 07 20 ed 0d 08 00 e9 0d 08 00 e9 0d 08 00     .,. ............
   80010:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 00 00 00 00     ................
	...
   8002c:	e9 0d 08 00 e9 0d 08 00 00 00 00 00 e9 0d 08 00     ................
   8003c:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   8004c:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   8005c:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 00 00 00 00     ................
   8006c:	5d 0c 08 00 71 0c 08 00 85 0c 08 00 99 0c 08 00     ]...q...........
	...
   80084:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   80094:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   800a4:	00 00 00 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   800b4:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   800c4:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   800d4:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................
   800e4:	e9 0d 08 00 e9 0d 08 00 e9 0d 08 00 e9 0d 08 00     ................

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070b1c 	.word	0x20070b1c
   80110:	00000000 	.word	0x00000000
   80114:	00085b64 	.word	0x00085b64

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00085b64 	.word	0x00085b64
   80154:	20070b20 	.word	0x20070b20
   80158:	00085b64 	.word	0x00085b64
   8015c:	00000000 	.word	0x00000000

00080160 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80160:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   80162:	2401      	movs	r4, #1
   80164:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   80166:	2400      	movs	r4, #0
   80168:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   8016a:	f240 2502 	movw	r5, #514	; 0x202
   8016e:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   80172:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   80176:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8017a:	6845      	ldr	r5, [r0, #4]
	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   8017c:	0052      	lsls	r2, r2, #1
   8017e:	fbb1 f2f2 	udiv	r2, r1, r2
   80182:	3a01      	subs	r2, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80184:	0212      	lsls	r2, r2, #8
   80186:	b292      	uxth	r2, r2
   80188:	432b      	orrs	r3, r5
   8018a:	431a      	orrs	r2, r3
   8018c:	6042      	str	r2, [r0, #4]
	return 0;
}
   8018e:	4620      	mov	r0, r4
   80190:	bc30      	pop	{r4, r5}
   80192:	4770      	bx	lr

00080194 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   80194:	6843      	ldr	r3, [r0, #4]
   80196:	f023 0310 	bic.w	r3, r3, #16
   8019a:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   8019c:	6843      	ldr	r3, [r0, #4]
   8019e:	4319      	orrs	r1, r3
   801a0:	6041      	str	r1, [r0, #4]
   801a2:	4770      	bx	lr

000801a4 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   801a4:	6843      	ldr	r3, [r0, #4]
   801a6:	01d2      	lsls	r2, r2, #7
   801a8:	b2d2      	uxtb	r2, r2
   801aa:	4319      	orrs	r1, r3
   801ac:	430a      	orrs	r2, r1
   801ae:	6042      	str	r2, [r0, #4]
   801b0:	4770      	bx	lr

000801b2 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   801b2:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801b4:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   801b6:	0609      	lsls	r1, r1, #24
   801b8:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801bc:	4321      	orrs	r1, r4
   801be:	430a      	orrs	r2, r1
   801c0:	0719      	lsls	r1, r3, #28
   801c2:	f001 5140 	and.w	r1, r1, #805306368	; 0x30000000
   801c6:	4311      	orrs	r1, r2
   801c8:	6041      	str	r1, [r0, #4]
}
   801ca:	bc10      	pop	{r4}
   801cc:	4770      	bx	lr

000801ce <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   801ce:	2302      	movs	r3, #2
   801d0:	6003      	str	r3, [r0, #0]
   801d2:	4770      	bx	lr

000801d4 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   801d4:	2301      	movs	r3, #1
   801d6:	fa03 f101 	lsl.w	r1, r3, r1
   801da:	6101      	str	r1, [r0, #16]
   801dc:	4770      	bx	lr

000801de <adc_enable_all_channel>:
 * \param p_adc Pointer to an ADC instance.
 */
void adc_enable_all_channel(Adc *p_adc)
{
#if SAM3S || SAM4S || SAM3N || SAM3XA
	p_adc->ADC_CHER = 0xFFFF;
   801de:	f64f 73ff 	movw	r3, #65535	; 0xffff
   801e2:	6103      	str	r3, [r0, #16]
   801e4:	4770      	bx	lr
	...

000801e8 <pin_mapper>:
					PIO_PA22_IDX,PIO_PA6_IDX,PIO_PA4_IDX,PIO_PA3_IDX,PIO_PA2_IDX,PIO_PB17_IDX,
					PIO_PB18_IDX,PIO_PB19_IDX,PIO_PB20_IDX};
					
uint8_t pin_mapper(uint8_t pin){
	return pin_table[pin];
}
   801e8:	4b01      	ldr	r3, [pc, #4]	; (801f0 <pin_mapper+0x8>)
   801ea:	5c18      	ldrb	r0, [r3, r0]
   801ec:	4770      	bx	lr
   801ee:	bf00      	nop
   801f0:	2007012c 	.word	0x2007012c

000801f4 <map_value>:
/*
* Mapping values from one range to another, be warned this function will 
* probably run dead slow on the arduino due. Its not intended to be used
* where speed is essential.  
*/
uint32_t map_value(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max){
   801f4:	b410      	push	{r4}
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
   801f6:	1a40      	subs	r0, r0, r1
   801f8:	9c01      	ldr	r4, [sp, #4]
   801fa:	1ae4      	subs	r4, r4, r3
   801fc:	fb04 f000 	mul.w	r0, r4, r0
   80200:	1a52      	subs	r2, r2, r1
   80202:	fbb0 f0f2 	udiv	r0, r0, r2
   80206:	4418      	add	r0, r3
   80208:	bc10      	pop	{r4}
   8020a:	4770      	bx	lr

0008020c <pwm_set_duty>:
		pwm_set_duty(0);
	}
}


void pwm_set_duty(uint32_t duty_cycle){
   8020c:	b508      	push	{r3, lr}
	/*Set duty cycle*/
	pwm_channel_update_duty(PWM,&pwm_channel_instance,duty_cycle);
   8020e:	4602      	mov	r2, r0
   80210:	4902      	ldr	r1, [pc, #8]	; (8021c <pwm_set_duty+0x10>)
   80212:	4803      	ldr	r0, [pc, #12]	; (80220 <pwm_set_duty+0x14>)
   80214:	4b03      	ldr	r3, [pc, #12]	; (80224 <pwm_set_duty+0x18>)
   80216:	4798      	blx	r3
   80218:	bd08      	pop	{r3, pc}
   8021a:	bf00      	nop
   8021c:	20070b38 	.word	0x20070b38
   80220:	40094000 	.word	0x40094000
   80224:	00080851 	.word	0x00080851

00080228 <pwm_setup>:
void pwm_setup(){
   80228:	b530      	push	{r4, r5, lr}
   8022a:	b085      	sub	sp, #20
	if (pmc_enable_periph_clk(ID_PWM) == 0) {
   8022c:	2024      	movs	r0, #36	; 0x24
   8022e:	4b17      	ldr	r3, [pc, #92]	; (8028c <pwm_setup+0x64>)
   80230:	4798      	blx	r3
   80232:	b108      	cbz	r0, 80238 <pwm_setup+0x10>
}
   80234:	b005      	add	sp, #20
   80236:	bd30      	pop	{r4, r5, pc}
		pwm_channel_disable(PWM, PWM_CHANNEL_0);
   80238:	4d15      	ldr	r5, [pc, #84]	; (80290 <pwm_setup+0x68>)
   8023a:	2100      	movs	r1, #0
   8023c:	4628      	mov	r0, r5
   8023e:	4b15      	ldr	r3, [pc, #84]	; (80294 <pwm_setup+0x6c>)
   80240:	4798      	blx	r3
		pwm_clock_t clock_setting = {
   80242:	4b15      	ldr	r3, [pc, #84]	; (80298 <pwm_setup+0x70>)
   80244:	9301      	str	r3, [sp, #4]
   80246:	2400      	movs	r4, #0
   80248:	9402      	str	r4, [sp, #8]
   8024a:	4b14      	ldr	r3, [pc, #80]	; (8029c <pwm_setup+0x74>)
   8024c:	9303      	str	r3, [sp, #12]
		pwm_init(PWM, &clock_setting);
   8024e:	a901      	add	r1, sp, #4
   80250:	4628      	mov	r0, r5
   80252:	4b13      	ldr	r3, [pc, #76]	; (802a0 <pwm_setup+0x78>)
   80254:	4798      	blx	r3
		pwm_channel_instance.alignment = PWM_ALIGN_LEFT;
   80256:	4913      	ldr	r1, [pc, #76]	; (802a4 <pwm_setup+0x7c>)
   80258:	810c      	strh	r4, [r1, #8]
		pwm_channel_instance.polarity = PWM_POLARITY;
   8025a:	728c      	strb	r4, [r1, #10]
		pwm_channel_instance.ul_prescaler = PWM_CMR_CPRE_CLKA;
   8025c:	230b      	movs	r3, #11
   8025e:	604b      	str	r3, [r1, #4]
		pwm_channel_instance.ul_period = PWM_RESOLUTION;
   80260:	23ff      	movs	r3, #255	; 0xff
   80262:	610b      	str	r3, [r1, #16]
		pwm_channel_instance.ul_duty = 0;
   80264:	60cc      	str	r4, [r1, #12]
		pwm_channel_instance.channel = PWM_CHANNEL_0;
   80266:	600c      	str	r4, [r1, #0]
		pwm_channel_init(PWM, &pwm_channel_instance);
   80268:	4628      	mov	r0, r5
   8026a:	4b0f      	ldr	r3, [pc, #60]	; (802a8 <pwm_setup+0x80>)
   8026c:	4798      	blx	r3
		pio_set_peripheral(PWM_PIO, PWM_PERIPHERAL, PWM_PIN);
   8026e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   80272:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80276:	480d      	ldr	r0, [pc, #52]	; (802ac <pwm_setup+0x84>)
   80278:	4b0d      	ldr	r3, [pc, #52]	; (802b0 <pwm_setup+0x88>)
   8027a:	4798      	blx	r3
		pwm_channel_enable(PWM, PWM_CHANNEL_0);	
   8027c:	4621      	mov	r1, r4
   8027e:	4628      	mov	r0, r5
   80280:	4b0c      	ldr	r3, [pc, #48]	; (802b4 <pwm_setup+0x8c>)
   80282:	4798      	blx	r3
		pwm_set_duty(0);
   80284:	4620      	mov	r0, r4
   80286:	4b0c      	ldr	r3, [pc, #48]	; (802b8 <pwm_setup+0x90>)
   80288:	4798      	blx	r3
}
   8028a:	e7d3      	b.n	80234 <pwm_setup+0xc>
   8028c:	00080d95 	.word	0x00080d95
   80290:	40094000 	.word	0x40094000
   80294:	00080877 	.word	0x00080877
   80298:	0003e418 	.word	0x0003e418
   8029c:	0501bd00 	.word	0x0501bd00
   802a0:	00080709 	.word	0x00080709
   802a4:	20070b38 	.word	0x20070b38
   802a8:	0008074d 	.word	0x0008074d
   802ac:	400e1000 	.word	0x400e1000
   802b0:	00080a01 	.word	0x00080a01
   802b4:	0008086d 	.word	0x0008086d
   802b8:	0008020d 	.word	0x0008020d

000802bc <dac_setup>:
 */ 
 #include <asf.h>
 #include "io_control/dac.h"
 #include "common/pin_mapper.h"

 void dac_setup() {
   802bc:	b538      	push	{r3, r4, r5, lr}
	 pmc_enable_periph_clk(ID_DACC);
   802be:	2026      	movs	r0, #38	; 0x26
   802c0:	4b0c      	ldr	r3, [pc, #48]	; (802f4 <dac_setup+0x38>)
   802c2:	4798      	blx	r3
	 dacc_reset(DACC);
   802c4:	4c0c      	ldr	r4, [pc, #48]	; (802f8 <dac_setup+0x3c>)
   802c6:	4620      	mov	r0, r4
   802c8:	4b0c      	ldr	r3, [pc, #48]	; (802fc <dac_setup+0x40>)
   802ca:	4798      	blx	r3
	 dacc_set_transfer_mode(DACC, 0);
   802cc:	2100      	movs	r1, #0
   802ce:	4620      	mov	r0, r4
   802d0:	4b0b      	ldr	r3, [pc, #44]	; (80300 <dac_setup+0x44>)
   802d2:	4798      	blx	r3
	 dacc_set_timing(DACC,1,1,0);			//1 is shortest refresh period, 1 max. speed, 0 startup time
   802d4:	2300      	movs	r3, #0
   802d6:	2201      	movs	r2, #1
   802d8:	4611      	mov	r1, r2
   802da:	4620      	mov	r0, r4
   802dc:	4d09      	ldr	r5, [pc, #36]	; (80304 <dac_setup+0x48>)
   802de:	47a8      	blx	r5
	 
	 dacc_set_channel_selection(DACC,0);	//Channel DAC0
   802e0:	2100      	movs	r1, #0
   802e2:	4620      	mov	r0, r4
   802e4:	4b08      	ldr	r3, [pc, #32]	; (80308 <dac_setup+0x4c>)
   802e6:	4798      	blx	r3
	 dacc_enable_channel(DACC, 0);			//enable DAC0
   802e8:	2100      	movs	r1, #0
   802ea:	4620      	mov	r0, r4
   802ec:	4b07      	ldr	r3, [pc, #28]	; (8030c <dac_setup+0x50>)
   802ee:	4798      	blx	r3
   802f0:	bd38      	pop	{r3, r4, r5, pc}
   802f2:	bf00      	nop
   802f4:	00080d95 	.word	0x00080d95
   802f8:	400c8000 	.word	0x400c8000
   802fc:	00080639 	.word	0x00080639
   80300:	0008063f 	.word	0x0008063f
   80304:	00080673 	.word	0x00080673
   80308:	0008065b 	.word	0x0008065b
   8030c:	000806a1 	.word	0x000806a1

00080310 <dac_write>:
 }

 void dac_write(uint32_t value){
   80310:	b510      	push	{r4, lr}
   80312:	b082      	sub	sp, #8
	uint32_t dac_val;
	dac_val = map_value(value,0,255,0,4095);
   80314:	f640 73ff 	movw	r3, #4095	; 0xfff
   80318:	9300      	str	r3, [sp, #0]
   8031a:	2300      	movs	r3, #0
   8031c:	22ff      	movs	r2, #255	; 0xff
   8031e:	4619      	mov	r1, r3
   80320:	4c03      	ldr	r4, [pc, #12]	; (80330 <dac_write+0x20>)
   80322:	47a0      	blx	r4
	dacc_write_conversion_data(DACC,dac_val);
   80324:	4601      	mov	r1, r0
   80326:	4803      	ldr	r0, [pc, #12]	; (80334 <dac_write+0x24>)
   80328:	4b03      	ldr	r3, [pc, #12]	; (80338 <dac_write+0x28>)
   8032a:	4798      	blx	r3
   8032c:	b002      	add	sp, #8
   8032e:	bd10      	pop	{r4, pc}
   80330:	000801f5 	.word	0x000801f5
   80334:	400c8000 	.word	0x400c8000
   80338:	00080657 	.word	0x00080657

0008033c <uart_config>:
void uart_config(uint32_t baud)
{
	/* reset and disable receiver & transmitter */
	UART_CR = UART_CR_RSTRX | UART_CR_RSTTX	| UART_CR_RXDIS | UART_CR_TXDIS;
	/* configure baud rate */
	UART_BRGR = (MCK >> 4) / baud;
   8033c:	4b0c      	ldr	r3, [pc, #48]	; (80370 <uart_config+0x34>)
   8033e:	fbb3 f0f0 	udiv	r0, r3, r0
   80342:	4b0c      	ldr	r3, [pc, #48]	; (80374 <uart_config+0x38>)
   80344:	6018      	str	r0, [r3, #0]
	/* configure mode */
	UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;
   80346:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8034a:	3b1c      	subs	r3, #28
   8034c:	601a      	str	r2, [r3, #0]
	/* enable receiver and transmitter */
	UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   8034e:	2250      	movs	r2, #80	; 0x50
   80350:	3b04      	subs	r3, #4
   80352:	601a      	str	r2, [r3, #0]
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   80354:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
   80358:	f44f 7280 	mov.w	r2, #256	; 0x100
   8035c:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   8035e:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   80360:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   80362:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   80366:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   80368:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   8036c:	671a      	str	r2, [r3, #112]	; 0x70
   8036e:	4770      	bx	lr
   80370:	00501bd0 	.word	0x00501bd0
   80374:	400e0820 	.word	0x400e0820

00080378 <uart_transmitter_ready>:
 * Transmitter Ready?
 * Return 1 if "Transmitter Ready" flag is set, otherwise 0.
 */
int uart_transmitter_ready(void)
{
	return (UART_SR & UART_SR_TXRDY);
   80378:	4b02      	ldr	r3, [pc, #8]	; (80384 <uart_transmitter_ready+0xc>)
   8037a:	6818      	ldr	r0, [r3, #0]
}
   8037c:	f000 0002 	and.w	r0, r0, #2
   80380:	4770      	bx	lr
   80382:	bf00      	nop
   80384:	400e0814 	.word	0x400e0814

00080388 <uart_receiver_ready>:
 * Receiver Ready?
 * Return 1 if "Receiver Ready" flag is set, otherwise 0.
 */
int uart_receiver_ready(void)
{
	return (UART_SR & UART_SR_RXRDY);
   80388:	4b02      	ldr	r3, [pc, #8]	; (80394 <uart_receiver_ready+0xc>)
   8038a:	6818      	ldr	r0, [r3, #0]
}
   8038c:	f000 0001 	and.w	r0, r0, #1
   80390:	4770      	bx	lr
   80392:	bf00      	nop
   80394:	400e0814 	.word	0x400e0814

00080398 <uart_send_char>:
 * Send character
 * Write character to Transmit Holding Register.
 */
void uart_send_char(uint8_t chr)
{
	UART_THR = chr;
   80398:	4b01      	ldr	r3, [pc, #4]	; (803a0 <uart_send_char+0x8>)
   8039a:	6018      	str	r0, [r3, #0]
   8039c:	4770      	bx	lr
   8039e:	bf00      	nop
   803a0:	400e081c 	.word	0x400e081c

000803a4 <uart_receive_char>:
 */
char uart_receive_char(void)
{
	char chr = UART_RHR;
	return chr;
   803a4:	4b01      	ldr	r3, [pc, #4]	; (803ac <uart_receive_char+0x8>)
   803a6:	7818      	ldrb	r0, [r3, #0]
   803a8:	4770      	bx	lr
   803aa:	bf00      	nop
   803ac:	400e0818 	.word	0x400e0818

000803b0 <io_pin_dir>:
#include "common/pin_mapper.h"
#include "io_control/analog_output.h"
#include "io_control/adc.h"
#include "io_control/dac.h"

void io_pin_dir(uint8_t pin,int8_t dir){
   803b0:	b510      	push	{r4, lr}
   803b2:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803b4:	4b0f      	ldr	r3, [pc, #60]	; (803f4 <io_pin_dir+0x44>)
   803b6:	4798      	blx	r3
	ioport_set_pin_dir(mapp_pin,dir);
   803b8:	b2e4      	uxtb	r4, r4
	return pin >> 5;
   803ba:	0943      	lsrs	r3, r0, #5
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   803bc:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   803c0:	f203 7307 	addw	r3, r3, #1799	; 0x707
   803c4:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
   803c6:	2c01      	cmp	r4, #1
   803c8:	d00d      	beq.n	803e6 <io_pin_dir+0x36>
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
   803ca:	b924      	cbnz	r4, 803d6 <io_pin_dir+0x26>
	return 1U << (pin & 0x1F);
   803cc:	f000 011f 	and.w	r1, r0, #31
   803d0:	2201      	movs	r2, #1
   803d2:	408a      	lsls	r2, r1
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   803d4:	615a      	str	r2, [r3, #20]
	return 1U << (pin & 0x1F);
   803d6:	f000 001f 	and.w	r0, r0, #31
   803da:	2201      	movs	r2, #1
   803dc:	fa02 f000 	lsl.w	r0, r2, r0
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e0:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
   803e4:	bd10      	pop	{r4, pc}
	return 1U << (pin & 0x1F);
   803e6:	f000 011f 	and.w	r1, r0, #31
   803ea:	2201      	movs	r2, #1
   803ec:	408a      	lsls	r2, r1
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803ee:	611a      	str	r2, [r3, #16]
   803f0:	e7f1      	b.n	803d6 <io_pin_dir+0x26>
   803f2:	bf00      	nop
   803f4:	000801e9 	.word	0x000801e9

000803f8 <io_pin_level>:
}

void io_pin_level(int8_t pin,int8_t level){
   803f8:	b510      	push	{r4, lr}
   803fa:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   803fc:	b2c0      	uxtb	r0, r0
   803fe:	4b0b      	ldr	r3, [pc, #44]	; (8042c <io_pin_level+0x34>)
   80400:	4798      	blx	r3
	return pin >> 5;
   80402:	0943      	lsrs	r3, r0, #5
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80404:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80408:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8040c:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   8040e:	b934      	cbnz	r4, 8041e <io_pin_level+0x26>
	return 1U << (pin & 0x1F);
   80410:	f000 001f 	and.w	r0, r0, #31
   80414:	2201      	movs	r2, #1
   80416:	fa02 f000 	lsl.w	r0, r2, r0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8041a:	6358      	str	r0, [r3, #52]	; 0x34
   8041c:	bd10      	pop	{r4, pc}
	return 1U << (pin & 0x1F);
   8041e:	f000 001f 	and.w	r0, r0, #31
   80422:	2201      	movs	r2, #1
   80424:	fa02 f000 	lsl.w	r0, r2, r0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80428:	6318      	str	r0, [r3, #48]	; 0x30
   8042a:	bd10      	pop	{r4, pc}
   8042c:	000801e9 	.word	0x000801e9

00080430 <io_pin_status>:
	ioport_set_pin_level(mapp_pin,level);
}

int8_t io_pin_status(int8_t pin){
   80430:	b508      	push	{r3, lr}
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80432:	b2c0      	uxtb	r0, r0
   80434:	4b09      	ldr	r3, [pc, #36]	; (8045c <io_pin_status+0x2c>)
   80436:	4798      	blx	r3
	return pin >> 5;
   80438:	0943      	lsrs	r3, r0, #5
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8043a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8043e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80442:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80444:	6bda      	ldr	r2, [r3, #60]	; 0x3c
	return 1U << (pin & 0x1F);
   80446:	f000 001f 	and.w	r0, r0, #31
   8044a:	2301      	movs	r3, #1
   8044c:	fa03 f000 	lsl.w	r0, r3, r0
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80450:	4210      	tst	r0, r2
	return ioport_get_pin_level(mapp_pin);
}
   80452:	bf14      	ite	ne
   80454:	4618      	movne	r0, r3
   80456:	2000      	moveq	r0, #0
   80458:	bd08      	pop	{r3, pc}
   8045a:	bf00      	nop
   8045c:	000801e9 	.word	0x000801e9

00080460 <io_pwm_duty>:

void io_pwm_duty(uint8_t duty){
   80460:	b508      	push	{r3, lr}
	pwm_set_duty(duty);
   80462:	4b01      	ldr	r3, [pc, #4]	; (80468 <io_pwm_duty+0x8>)
   80464:	4798      	blx	r3
   80466:	bd08      	pop	{r3, pc}
   80468:	0008020d 	.word	0x0008020d

0008046c <io_adc_value>:
}

uint16_t io_adc_value(uint32_t channel){
   8046c:	b508      	push	{r3, lr}
	return read_adc_value(channel);
   8046e:	4b01      	ldr	r3, [pc, #4]	; (80474 <io_adc_value+0x8>)
   80470:	4798      	blx	r3
}
   80472:	bd08      	pop	{r3, pc}
   80474:	000808fd 	.word	0x000808fd

00080478 <send_char_term>:

void send_char_term(uint8_t chr){
   80478:	b538      	push	{r3, r4, r5, lr}
   8047a:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   8047c:	4c07      	ldr	r4, [pc, #28]	; (8049c <send_char_term+0x24>)
   8047e:	47a0      	blx	r4
   80480:	2800      	cmp	r0, #0
   80482:	d0fc      	beq.n	8047e <send_char_term+0x6>
	uart_send_char(chr);
   80484:	4628      	mov	r0, r5
   80486:	4b06      	ldr	r3, [pc, #24]	; (804a0 <send_char_term+0x28>)
   80488:	4798      	blx	r3
	/*Line terminator*/
	while (!uart_transmitter_ready());
   8048a:	4c04      	ldr	r4, [pc, #16]	; (8049c <send_char_term+0x24>)
   8048c:	47a0      	blx	r4
   8048e:	2800      	cmp	r0, #0
   80490:	d0fc      	beq.n	8048c <send_char_term+0x14>
	uart_send_char(10);
   80492:	200a      	movs	r0, #10
   80494:	4b02      	ldr	r3, [pc, #8]	; (804a0 <send_char_term+0x28>)
   80496:	4798      	blx	r3
   80498:	bd38      	pop	{r3, r4, r5, pc}
   8049a:	bf00      	nop
   8049c:	00080379 	.word	0x00080379
   804a0:	00080399 	.word	0x00080399

000804a4 <send_char_no_term>:
}

void send_char_no_term(uint8_t chr){
   804a4:	b538      	push	{r3, r4, r5, lr}
   804a6:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   804a8:	4c03      	ldr	r4, [pc, #12]	; (804b8 <send_char_no_term+0x14>)
   804aa:	47a0      	blx	r4
   804ac:	2800      	cmp	r0, #0
   804ae:	d0fc      	beq.n	804aa <send_char_no_term+0x6>
	uart_send_char(chr);
   804b0:	4628      	mov	r0, r5
   804b2:	4b02      	ldr	r3, [pc, #8]	; (804bc <send_char_no_term+0x18>)
   804b4:	4798      	blx	r3
   804b6:	bd38      	pop	{r3, r4, r5, pc}
   804b8:	00080379 	.word	0x00080379
   804bc:	00080399 	.word	0x00080399

000804c0 <read_char>:
}

uint8_t read_char(void){
   804c0:	b508      	push	{r3, lr}
	/*Read char if receiver is ready*/
	if (uart_receiver_ready())
   804c2:	4b04      	ldr	r3, [pc, #16]	; (804d4 <read_char+0x14>)
   804c4:	4798      	blx	r3
   804c6:	b908      	cbnz	r0, 804cc <read_char+0xc>
	{
		return uart_receive_char();
	}
	/*failed to read char*/
	return 0;
   804c8:	2000      	movs	r0, #0
}
   804ca:	bd08      	pop	{r3, pc}
		return uart_receive_char();
   804cc:	4b02      	ldr	r3, [pc, #8]	; (804d8 <read_char+0x18>)
   804ce:	4798      	blx	r3
   804d0:	bd08      	pop	{r3, pc}
   804d2:	bf00      	nop
   804d4:	00080389 	.word	0x00080389
   804d8:	000803a5 	.word	0x000803a5

000804dc <read_when_ready>:

uint8_t read_when_ready(void){
   804dc:	b510      	push	{r4, lr}
	while (!uart_receiver_ready());
   804de:	4c03      	ldr	r4, [pc, #12]	; (804ec <read_when_ready+0x10>)
   804e0:	47a0      	blx	r4
   804e2:	2800      	cmp	r0, #0
   804e4:	d0fc      	beq.n	804e0 <read_when_ready+0x4>
	return read_char();
   804e6:	4b02      	ldr	r3, [pc, #8]	; (804f0 <read_when_ready+0x14>)
   804e8:	4798      	blx	r3
}
   804ea:	bd10      	pop	{r4, pc}
   804ec:	00080389 	.word	0x00080389
   804f0:	000804c1 	.word	0x000804c1

000804f4 <send_number>:

void send_number(uint16_t nbr){
   804f4:	b530      	push	{r4, r5, lr}
   804f6:	b085      	sub	sp, #20
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
   804f8:	4602      	mov	r2, r0
   804fa:	4909      	ldr	r1, [pc, #36]	; (80520 <send_number+0x2c>)
   804fc:	a801      	add	r0, sp, #4
   804fe:	4b09      	ldr	r3, [pc, #36]	; (80524 <send_number+0x30>)
   80500:	4798      	blx	r3
	
	while (string[i] != '\0')
   80502:	f89d 0004 	ldrb.w	r0, [sp, #4]
   80506:	b130      	cbz	r0, 80516 <send_number+0x22>
   80508:	ac01      	add	r4, sp, #4
	{
		send_char_no_term(string[i]);
   8050a:	4d07      	ldr	r5, [pc, #28]	; (80528 <send_number+0x34>)
   8050c:	47a8      	blx	r5
	while (string[i] != '\0')
   8050e:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   80512:	2800      	cmp	r0, #0
   80514:	d1fa      	bne.n	8050c <send_number+0x18>
		i++;
	}
	
	send_char_term(13); //Carriage Return and terminator;
   80516:	200d      	movs	r0, #13
   80518:	4b04      	ldr	r3, [pc, #16]	; (8052c <send_number+0x38>)
   8051a:	4798      	blx	r3
}
   8051c:	b005      	add	sp, #20
   8051e:	bd30      	pop	{r4, r5, pc}
   80520:	00085880 	.word	0x00085880
   80524:	00081105 	.word	0x00081105
   80528:	000804a5 	.word	0x000804a5
   8052c:	00080479 	.word	0x00080479

00080530 <io_dac_value>:

void io_dac_value(uint8_t value){
   80530:	b508      	push	{r3, lr}
	dac_write(value);
   80532:	4b01      	ldr	r3, [pc, #4]	; (80538 <io_dac_value+0x8>)
   80534:	4798      	blx	r3
   80536:	bd08      	pop	{r3, pc}
   80538:	00080311 	.word	0x00080311

0008053c <start_coms>:
#include "io_control/io_uart.h"
#include "matlab_coms/matlab_functions.h"
#include "matlab_coms/matlab_state.h"


void start_coms(){
   8053c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t adc_val;
	pin = 0;
	val = 0;
	adc_val = 0;
	
	state next_state = STANDBY;
   8053e:	2400      	movs	r4, #0
			val = 0;
			next_state = STANDBY;
			break;
			
			case A_READ:
			pin = read_when_ready();
   80540:	4d33      	ldr	r5, [pc, #204]	; (80610 <start_coms+0xd4>)
			adc_val = io_adc_value(pin);
   80542:	4f34      	ldr	r7, [pc, #208]	; (80614 <start_coms+0xd8>)
			send_number(adc_val);
   80544:	4e34      	ldr	r6, [pc, #208]	; (80618 <start_coms+0xdc>)
   80546:	e020      	b.n	8058a <start_coms+0x4e>
			switch (read_char())
   80548:	4b34      	ldr	r3, [pc, #208]	; (8061c <start_coms+0xe0>)
   8054a:	4798      	blx	r3
   8054c:	2858      	cmp	r0, #88	; 0x58
   8054e:	d012      	beq.n	80576 <start_coms+0x3a>
   80550:	d806      	bhi.n	80560 <start_coms+0x24>
   80552:	2856      	cmp	r0, #86	; 0x56
   80554:	d00b      	beq.n	8056e <start_coms+0x32>
   80556:	d80c      	bhi.n	80572 <start_coms+0x36>
				next_state = HANDSHAKE;
   80558:	2805      	cmp	r0, #5
   8055a:	bf08      	it	eq
   8055c:	2401      	moveq	r4, #1
   8055e:	e014      	b.n	8058a <start_coms+0x4e>
			switch (read_char())
   80560:	285a      	cmp	r0, #90	; 0x5a
   80562:	d00c      	beq.n	8057e <start_coms+0x42>
   80564:	d309      	bcc.n	8057a <start_coms+0x3e>
				next_state = A_WRITE_DAC;
   80566:	285b      	cmp	r0, #91	; 0x5b
   80568:	bf08      	it	eq
   8056a:	2406      	moveq	r4, #6
   8056c:	e00d      	b.n	8058a <start_coms+0x4e>
				next_state = P_MODE;
   8056e:	2402      	movs	r4, #2
				break;
   80570:	e00b      	b.n	8058a <start_coms+0x4e>
				next_state = D_WRITE;
   80572:	2403      	movs	r4, #3
				break;
   80574:	e009      	b.n	8058a <start_coms+0x4e>
				next_state = D_READ;
   80576:	2404      	movs	r4, #4
				break;
   80578:	e007      	b.n	8058a <start_coms+0x4e>
				next_state = A_WRITE;
   8057a:	2405      	movs	r4, #5
				break;
   8057c:	e005      	b.n	8058a <start_coms+0x4e>
				next_state = A_READ;
   8057e:	2407      	movs	r4, #7
				break;
   80580:	e003      	b.n	8058a <start_coms+0x4e>
			send_char_term(ACK);
   80582:	2006      	movs	r0, #6
   80584:	4b26      	ldr	r3, [pc, #152]	; (80620 <start_coms+0xe4>)
   80586:	4798      	blx	r3
			next_state = STANDBY;
   80588:	2400      	movs	r4, #0
		switch(current_state){
   8058a:	2c07      	cmp	r4, #7
   8058c:	d8fd      	bhi.n	8058a <start_coms+0x4e>
   8058e:	a301      	add	r3, pc, #4	; (adr r3, 80594 <start_coms+0x58>)
   80590:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
   80594:	00080549 	.word	0x00080549
   80598:	00080583 	.word	0x00080583
   8059c:	000805b5 	.word	0x000805b5
   805a0:	000805cb 	.word	0x000805cb
   805a4:	000805e1 	.word	0x000805e1
   805a8:	000805f1 	.word	0x000805f1
   805ac:	000805fb 	.word	0x000805fb
   805b0:	00080605 	.word	0x00080605
			pin = read_when_ready();
   805b4:	47a8      	blx	r5
   805b6:	4604      	mov	r4, r0
			val = read_when_ready();
   805b8:	47a8      	blx	r5
			io_pin_dir(pin,(val-10));	//calculate value
   805ba:	f1a0 010a 	sub.w	r1, r0, #10
   805be:	b249      	sxtb	r1, r1
   805c0:	4620      	mov	r0, r4
   805c2:	4b18      	ldr	r3, [pc, #96]	; (80624 <start_coms+0xe8>)
   805c4:	4798      	blx	r3
			next_state = STANDBY;
   805c6:	2400      	movs	r4, #0
			break;
   805c8:	e7df      	b.n	8058a <start_coms+0x4e>
			pin = read_when_ready();
   805ca:	47a8      	blx	r5
   805cc:	4604      	mov	r4, r0
			val = read_when_ready();
   805ce:	47a8      	blx	r5
			io_pin_level(pin,(val-10));	//calculate value
   805d0:	f1a0 010a 	sub.w	r1, r0, #10
   805d4:	b249      	sxtb	r1, r1
   805d6:	b260      	sxtb	r0, r4
   805d8:	4b13      	ldr	r3, [pc, #76]	; (80628 <start_coms+0xec>)
   805da:	4798      	blx	r3
			next_state = STANDBY;
   805dc:	2400      	movs	r4, #0
			break;
   805de:	e7d4      	b.n	8058a <start_coms+0x4e>
			pin = read_when_ready();
   805e0:	47a8      	blx	r5
			val = io_pin_status(pin);
   805e2:	b240      	sxtb	r0, r0
   805e4:	4b11      	ldr	r3, [pc, #68]	; (8062c <start_coms+0xf0>)
   805e6:	4798      	blx	r3
			send_number(val);
   805e8:	b2c0      	uxtb	r0, r0
   805ea:	47b0      	blx	r6
			next_state = STANDBY;
   805ec:	2400      	movs	r4, #0
			break;
   805ee:	e7cc      	b.n	8058a <start_coms+0x4e>
			val = read_when_ready();
   805f0:	47a8      	blx	r5
			io_pwm_duty(val);
   805f2:	4b0f      	ldr	r3, [pc, #60]	; (80630 <start_coms+0xf4>)
   805f4:	4798      	blx	r3
			next_state = STANDBY;
   805f6:	2400      	movs	r4, #0
			break;
   805f8:	e7c7      	b.n	8058a <start_coms+0x4e>
			val = read_when_ready();
   805fa:	47a8      	blx	r5
			io_dac_value(val);
   805fc:	4b0d      	ldr	r3, [pc, #52]	; (80634 <start_coms+0xf8>)
   805fe:	4798      	blx	r3
			next_state = STANDBY;
   80600:	2400      	movs	r4, #0
			break;
   80602:	e7c2      	b.n	8058a <start_coms+0x4e>
			pin = read_when_ready();
   80604:	47a8      	blx	r5
			adc_val = io_adc_value(pin);
   80606:	47b8      	blx	r7
			send_number(adc_val);
   80608:	47b0      	blx	r6
			pin = 0;
			adc_val = 0;
			next_state = STANDBY;
   8060a:	2400      	movs	r4, #0
			break;
   8060c:	e7bd      	b.n	8058a <start_coms+0x4e>
   8060e:	bf00      	nop
   80610:	000804dd 	.word	0x000804dd
   80614:	0008046d 	.word	0x0008046d
   80618:	000804f5 	.word	0x000804f5
   8061c:	000804c1 	.word	0x000804c1
   80620:	00080479 	.word	0x00080479
   80624:	000803b1 	.word	0x000803b1
   80628:	000803f9 	.word	0x000803f9
   8062c:	00080431 	.word	0x00080431
   80630:	00080461 	.word	0x00080461
   80634:	00080531 	.word	0x00080531

00080638 <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   80638:	2301      	movs	r3, #1
   8063a:	6003      	str	r3, [r0, #0]
   8063c:	4770      	bx	lr

0008063e <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   8063e:	b929      	cbnz	r1, 8064c <dacc_set_transfer_mode+0xe>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   80640:	6843      	ldr	r3, [r0, #4]
   80642:	f023 0310 	bic.w	r3, r3, #16
   80646:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80648:	2000      	movs	r0, #0
   8064a:	4770      	bx	lr
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   8064c:	6843      	ldr	r3, [r0, #4]
   8064e:	f043 0310 	orr.w	r3, r3, #16
   80652:	6043      	str	r3, [r0, #4]
   80654:	e7f8      	b.n	80648 <dacc_set_transfer_mode+0xa>

00080656 <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   80656:	6201      	str	r1, [r0, #32]
   80658:	4770      	bx	lr

0008065a <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   8065a:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   8065c:	2901      	cmp	r1, #1
   8065e:	d901      	bls.n	80664 <dacc_set_channel_selection+0xa>
		return DACC_RC_INVALID_PARAM;
   80660:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   80662:	4770      	bx	lr
	mr &= ~(DACC_MR_TAG);
   80664:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   80668:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   8066c:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   8066e:	2000      	movs	r0, #0
   80670:	4770      	bx	lr

00080672 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80672:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   80674:	6844      	ldr	r4, [r0, #4]
   80676:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   8067a:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   8067e:	0209      	lsls	r1, r1, #8
   80680:	b289      	uxth	r1, r1
   80682:	4321      	orrs	r1, r4
	if (ul_maxs) {
   80684:	b94a      	cbnz	r2, 8069a <dacc_set_timing+0x28>
		mr |= DACC_MR_MAXS;
	} else {
		mr &= ~DACC_MR_MAXS;
   80686:	f421 1100 	bic.w	r1, r1, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   8068a:	061b      	lsls	r3, r3, #24
   8068c:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   80690:	430b      	orrs	r3, r1
	p_dacc->DACC_MR = mr;
   80692:	6043      	str	r3, [r0, #4]
	return DACC_RC_OK;
}
   80694:	2000      	movs	r0, #0
   80696:	bc10      	pop	{r4}
   80698:	4770      	bx	lr
		mr |= DACC_MR_MAXS;
   8069a:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
   8069e:	e7f4      	b.n	8068a <dacc_set_timing+0x18>

000806a0 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   806a0:	2901      	cmp	r1, #1
   806a2:	d901      	bls.n	806a8 <dacc_enable_channel+0x8>
		return DACC_RC_INVALID_PARAM;
   806a4:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   806a6:	4770      	bx	lr
	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   806a8:	2301      	movs	r3, #1
   806aa:	fa03 f101 	lsl.w	r1, r3, r1
   806ae:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   806b0:	2000      	movs	r0, #0
   806b2:	4770      	bx	lr

000806b4 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   806b4:	b4f0      	push	{r4, r5, r6, r7}
   806b6:	b08c      	sub	sp, #48	; 0x30
   806b8:	4607      	mov	r7, r0
   806ba:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   806bc:	ac01      	add	r4, sp, #4
   806be:	4d11      	ldr	r5, [pc, #68]	; (80704 <pwm_clocks_generate+0x50>)
   806c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   806c2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   806c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   806c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   806c8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   806cc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   806d0:	aa01      	add	r2, sp, #4
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   806d2:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   806d4:	f852 0b04 	ldr.w	r0, [r2], #4
   806d8:	fbb6 f0f0 	udiv	r0, r6, r0
   806dc:	fbb0 f0f7 	udiv	r0, r0, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   806e0:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
   806e4:	d907      	bls.n	806f6 <pwm_clocks_generate+0x42>
			break;
		}
		ul_pre++;
   806e6:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   806e8:	2b0b      	cmp	r3, #11
   806ea:	d1f3      	bne.n	806d4 <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
   806ec:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
   806f0:	b00c      	add	sp, #48	; 0x30
   806f2:	bcf0      	pop	{r4, r5, r6, r7}
   806f4:	4770      	bx	lr
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   806f6:	2b0a      	cmp	r3, #10
		return ul_div | (ul_pre << 8);
   806f8:	bf94      	ite	ls
   806fa:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
		return PWM_INVALID_ARGUMENT;
   806fe:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
   80702:	e7f5      	b.n	806f0 <pwm_clocks_generate+0x3c>
   80704:	00085884 	.word	0x00085884

00080708 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   80708:	b570      	push	{r4, r5, r6, lr}
   8070a:	4606      	mov	r6, r0
   8070c:	460d      	mov	r5, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   8070e:	680c      	ldr	r4, [r1, #0]
   80710:	b144      	cbz	r4, 80724 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   80712:	6889      	ldr	r1, [r1, #8]
   80714:	4620      	mov	r0, r4
   80716:	4b0c      	ldr	r3, [pc, #48]	; (80748 <pwm_init+0x40>)
   80718:	4798      	blx	r3
   8071a:	4604      	mov	r4, r0
		if (result == PWM_INVALID_ARGUMENT) {
   8071c:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80720:	4298      	cmp	r0, r3
   80722:	d00c      	beq.n	8073e <pwm_init+0x36>

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   80724:	6868      	ldr	r0, [r5, #4]
   80726:	b140      	cbz	r0, 8073a <pwm_init+0x32>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   80728:	68a9      	ldr	r1, [r5, #8]
   8072a:	4b07      	ldr	r3, [pc, #28]	; (80748 <pwm_init+0x40>)
   8072c:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   8072e:	f64f 73ff 	movw	r3, #65535	; 0xffff
   80732:	4298      	cmp	r0, r3
   80734:	d005      	beq.n	80742 <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
   80736:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   8073a:	6034      	str	r4, [r6, #0]
#endif
	return 0;
   8073c:	2400      	movs	r4, #0
}
   8073e:	4620      	mov	r0, r4
   80740:	bd70      	pop	{r4, r5, r6, pc}
			return result;
   80742:	4604      	mov	r4, r0
   80744:	e7fb      	b.n	8073e <pwm_init+0x36>
   80746:	bf00      	nop
   80748:	000806b5 	.word	0x000806b5

0008074c <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   8074c:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   8074e:	680a      	ldr	r2, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80750:	684b      	ldr	r3, [r1, #4]
   80752:	f003 030f 	and.w	r3, r3, #15
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
   80756:	8a8c      	ldrh	r4, [r1, #20]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80758:	4323      	orrs	r3, r4
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
   8075a:	890c      	ldrh	r4, [r1, #8]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   8075c:	4323      	orrs	r3, r4
			(p_channel->polarity << 9) |
   8075e:	7a8c      	ldrb	r4, [r1, #10]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80760:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
			(p_channel->b_deadtime_generator << 16) |
   80764:	7d8c      	ldrb	r4, [r1, #22]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80766:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   8076a:	7dcc      	ldrb	r4, [r1, #23]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   8076c:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   80770:	7e0c      	ldrb	r4, [r1, #24]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80772:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
   80776:	eb00 1442 	add.w	r4, r0, r2, lsl #5
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   8077a:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   8077e:	68cb      	ldr	r3, [r1, #12]
   80780:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80784:	690b      	ldr	r3, [r1, #16]
   80786:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   8078a:	7d8b      	ldrb	r3, [r1, #22]
   8078c:	b13b      	cbz	r3, 8079e <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   8078e:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   80790:	8b4b      	ldrh	r3, [r1, #26]
   80792:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   80796:	eb00 1442 	add.w	r4, r0, r2, lsl #5
   8079a:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   8079e:	6c85      	ldr	r5, [r0, #72]	; 0x48
   807a0:	f04f 1301 	mov.w	r3, #65537	; 0x10001
   807a4:	4093      	lsls	r3, r2
   807a6:	43db      	mvns	r3, r3
   807a8:	401d      	ands	r5, r3
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   807aa:	7fcc      	ldrb	r4, [r1, #31]
   807ac:	fa04 f602 	lsl.w	r6, r4, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   807b0:	7f8c      	ldrb	r4, [r1, #30]
   807b2:	4094      	lsls	r4, r2
   807b4:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   807b8:	432c      	orrs	r4, r5
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   807ba:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   807bc:	6c44      	ldr	r4, [r0, #68]	; 0x44
   807be:	4023      	ands	r3, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   807c0:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
   807c4:	fa04 f502 	lsl.w	r5, r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   807c8:	f891 4020 	ldrb.w	r4, [r1, #32]
   807cc:	4094      	lsls	r4, r2
   807ce:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   807d2:	4323      	orrs	r3, r4
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   807d4:	6443      	str	r3, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   807d6:	2301      	movs	r3, #1
   807d8:	4093      	lsls	r3, r2
	if (p_channel->b_sync_ch) {
   807da:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   807de:	b334      	cbz	r4, 8082e <pwm_channel_init+0xe2>
		p_pwm->PWM_SCM |= channel;
   807e0:	6a04      	ldr	r4, [r0, #32]
   807e2:	431c      	orrs	r4, r3
   807e4:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   807e6:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   807ea:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   807ec:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807ee:	bf0c      	ite	eq
   807f0:	431c      	orreq	r4, r3
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   807f2:	439c      	bicne	r4, r3
   807f4:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   807f6:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   807fa:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   807fc:	6e84      	ldr	r4, [r0, #104]	; 0x68
   807fe:	bf0c      	ite	eq
   80800:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   80804:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
   80808:	6683      	str	r3, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   8080a:	2a03      	cmp	r2, #3
   8080c:	d914      	bls.n	80838 <pwm_channel_init+0xec>
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
   8080e:	3a04      	subs	r2, #4
		ch_num *= 8;
   80810:	00d2      	lsls	r2, r2, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
   80812:	6f04      	ldr	r4, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
   80814:	23ff      	movs	r3, #255	; 0xff
   80816:	4093      	lsls	r3, r2
   80818:	ea24 0403 	bic.w	r4, r4, r3
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   8081c:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
   80820:	fa03 f202 	lsl.w	r2, r3, r2
   80824:	4322      	orrs	r2, r4
		p_pwm->PWM_FPE2 = fault_enable_reg;
   80826:	6702      	str	r2, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   80828:	2000      	movs	r0, #0
   8082a:	bc70      	pop	{r4, r5, r6}
   8082c:	4770      	bx	lr
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   8082e:	6a04      	ldr	r4, [r0, #32]
   80830:	ea24 0403 	bic.w	r4, r4, r3
   80834:	6204      	str	r4, [r0, #32]
   80836:	e7d6      	b.n	807e6 <pwm_channel_init+0x9a>
		ch_num *= 8;
   80838:	00d5      	lsls	r5, r2, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
   8083a:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
		fault_enable_reg &= ~(0xFF << ch_num);
   8083c:	24ff      	movs	r4, #255	; 0xff
   8083e:	40ac      	lsls	r4, r5
   80840:	ea23 0304 	bic.w	r3, r3, r4
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   80844:	f891 2023 	ldrb.w	r2, [r1, #35]	; 0x23
   80848:	40aa      	lsls	r2, r5
   8084a:	431a      	orrs	r2, r3
		p_pwm->PWM_FPE1 = fault_enable_reg;
   8084c:	66c2      	str	r2, [r0, #108]	; 0x6c
   8084e:	e7eb      	b.n	80828 <pwm_channel_init+0xdc>

00080850 <pwm_channel_update_duty>:
		uint32_t ul_duty)
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   80850:	690b      	ldr	r3, [r1, #16]
   80852:	4293      	cmp	r3, r2
   80854:	d202      	bcs.n	8085c <pwm_channel_update_duty+0xc>
		return PWM_INVALID_ARGUMENT;
   80856:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   8085a:	4770      	bx	lr
	uint32_t ch_num = p_channel->channel;
   8085c:	680b      	ldr	r3, [r1, #0]
		p_channel->ul_duty = ul_duty;
   8085e:	60ca      	str	r2, [r1, #12]
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   80860:	eb00 1043 	add.w	r0, r0, r3, lsl #5
   80864:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
	return 0;
   80868:	2000      	movs	r0, #0
   8086a:	4770      	bx	lr

0008086c <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   8086c:	2301      	movs	r3, #1
   8086e:	fa03 f101 	lsl.w	r1, r3, r1
   80872:	6041      	str	r1, [r0, #4]
   80874:	4770      	bx	lr

00080876 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   80876:	2301      	movs	r3, #1
   80878:	fa03 f101 	lsl.w	r1, r3, r1
   8087c:	6081      	str	r1, [r0, #8]
   8087e:	4770      	bx	lr

00080880 <init_adc>:
 */ 
#include <adc.h>
#include <asf.h>
#include "io_control/adc.h"

void init_adc(){
   80880:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(ID_ADC);
   80882:	2025      	movs	r0, #37	; 0x25
   80884:	4b13      	ldr	r3, [pc, #76]	; (808d4 <init_adc+0x54>)
   80886:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz()/2, ADC_CLOCK, 8);
   80888:	4c13      	ldr	r4, [pc, #76]	; (808d8 <init_adc+0x58>)
   8088a:	2308      	movs	r3, #8
   8088c:	4a13      	ldr	r2, [pc, #76]	; (808dc <init_adc+0x5c>)
   8088e:	4914      	ldr	r1, [pc, #80]	; (808e0 <init_adc+0x60>)
   80890:	4620      	mov	r0, r4
   80892:	4d14      	ldr	r5, [pc, #80]	; (808e4 <init_adc+0x64>)
   80894:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   80896:	2301      	movs	r3, #1
   80898:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   8089c:	2100      	movs	r1, #0
   8089e:	4620      	mov	r0, r4
   808a0:	4d11      	ldr	r5, [pc, #68]	; (808e8 <init_adc+0x68>)
   808a2:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_10);
   808a4:	2110      	movs	r1, #16
   808a6:	4620      	mov	r0, r4
   808a8:	4b10      	ldr	r3, [pc, #64]	; (808ec <init_adc+0x6c>)
   808aa:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_7);	//A0
   808ac:	2107      	movs	r1, #7
   808ae:	4620      	mov	r0, r4
   808b0:	4d0f      	ldr	r5, [pc, #60]	; (808f0 <init_adc+0x70>)
   808b2:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_6);	//A1
   808b4:	2106      	movs	r1, #6
   808b6:	4620      	mov	r0, r4
   808b8:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_5);	//A2
   808ba:	2105      	movs	r1, #5
   808bc:	4620      	mov	r0, r4
   808be:	47a8      	blx	r5
	adc_enable_all_channel(ADC);
   808c0:	4620      	mov	r0, r4
   808c2:	4b0c      	ldr	r3, [pc, #48]	; (808f4 <init_adc+0x74>)
   808c4:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   808c6:	2200      	movs	r2, #0
   808c8:	4611      	mov	r1, r2
   808ca:	4620      	mov	r0, r4
   808cc:	4b0a      	ldr	r3, [pc, #40]	; (808f8 <init_adc+0x78>)
   808ce:	4798      	blx	r3
   808d0:	bd38      	pop	{r3, r4, r5, pc}
   808d2:	bf00      	nop
   808d4:	00080d95 	.word	0x00080d95
   808d8:	400c0000 	.word	0x400c0000
   808dc:	000f4240 	.word	0x000f4240
   808e0:	0501bd00 	.word	0x0501bd00
   808e4:	00080161 	.word	0x00080161
   808e8:	000801b3 	.word	0x000801b3
   808ec:	00080195 	.word	0x00080195
   808f0:	000801d5 	.word	0x000801d5
   808f4:	000801df 	.word	0x000801df
   808f8:	000801a5 	.word	0x000801a5

000808fc <read_adc_value>:
}

uint16_t read_adc_value(uint32_t channel){
   808fc:	b538      	push	{r3, r4, r5, lr}
   808fe:	4604      	mov	r4, r0
	adc_start(ADC);
   80900:	4d04      	ldr	r5, [pc, #16]	; (80914 <read_adc_value+0x18>)
   80902:	4628      	mov	r0, r5
   80904:	4b04      	ldr	r3, [pc, #16]	; (80918 <read_adc_value+0x1c>)
   80906:	4798      	blx	r3
	return ADC->ADC_CDR[channel];
   80908:	3414      	adds	r4, #20
   8090a:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
   8090e:	b280      	uxth	r0, r0
   80910:	bd38      	pop	{r3, r4, r5, pc}
   80912:	bf00      	nop
   80914:	400c0000 	.word	0x400c0000
   80918:	000801cf 	.word	0x000801cf

0008091c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   8091c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8091e:	480e      	ldr	r0, [pc, #56]	; (80958 <sysclk_init+0x3c>)
   80920:	4b0e      	ldr	r3, [pc, #56]	; (8095c <sysclk_init+0x40>)
   80922:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   80924:	213e      	movs	r1, #62	; 0x3e
   80926:	2000      	movs	r0, #0
   80928:	4b0d      	ldr	r3, [pc, #52]	; (80960 <sysclk_init+0x44>)
   8092a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   8092c:	4c0d      	ldr	r4, [pc, #52]	; (80964 <sysclk_init+0x48>)
   8092e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80930:	2800      	cmp	r0, #0
   80932:	d0fc      	beq.n	8092e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   80934:	4b0c      	ldr	r3, [pc, #48]	; (80968 <sysclk_init+0x4c>)
   80936:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   80938:	4a0c      	ldr	r2, [pc, #48]	; (8096c <sysclk_init+0x50>)
   8093a:	4b0d      	ldr	r3, [pc, #52]	; (80970 <sysclk_init+0x54>)
   8093c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   8093e:	4c0d      	ldr	r4, [pc, #52]	; (80974 <sysclk_init+0x58>)
   80940:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80942:	2800      	cmp	r0, #0
   80944:	d0fc      	beq.n	80940 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80946:	2010      	movs	r0, #16
   80948:	4b0b      	ldr	r3, [pc, #44]	; (80978 <sysclk_init+0x5c>)
   8094a:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   8094c:	4b0b      	ldr	r3, [pc, #44]	; (8097c <sysclk_init+0x60>)
   8094e:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80950:	4801      	ldr	r0, [pc, #4]	; (80958 <sysclk_init+0x3c>)
   80952:	4b02      	ldr	r3, [pc, #8]	; (8095c <sysclk_init+0x40>)
   80954:	4798      	blx	r3
   80956:	bd10      	pop	{r4, pc}
   80958:	0501bd00 	.word	0x0501bd00
   8095c:	200700a5 	.word	0x200700a5
   80960:	00080d11 	.word	0x00080d11
   80964:	00080d65 	.word	0x00080d65
   80968:	00080d75 	.word	0x00080d75
   8096c:	200d3f01 	.word	0x200d3f01
   80970:	400e0600 	.word	0x400e0600
   80974:	00080d85 	.word	0x00080d85
   80978:	00080cad 	.word	0x00080cad
   8097c:	00080e85 	.word	0x00080e85

00080980 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80980:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80982:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80986:	4b16      	ldr	r3, [pc, #88]	; (809e0 <board_init+0x60>)
   80988:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8098a:	200b      	movs	r0, #11
   8098c:	4c15      	ldr	r4, [pc, #84]	; (809e4 <board_init+0x64>)
   8098e:	47a0      	blx	r4
   80990:	200c      	movs	r0, #12
   80992:	47a0      	blx	r4
   80994:	200d      	movs	r0, #13
   80996:	47a0      	blx	r4
   80998:	200e      	movs	r0, #14
   8099a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8099c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   809a0:	203b      	movs	r0, #59	; 0x3b
   809a2:	4c11      	ldr	r4, [pc, #68]	; (809e8 <board_init+0x68>)
   809a4:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   809a6:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   809aa:	2055      	movs	r0, #85	; 0x55
   809ac:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   809ae:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   809b2:	2056      	movs	r0, #86	; 0x56
   809b4:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   809b6:	490d      	ldr	r1, [pc, #52]	; (809ec <board_init+0x6c>)
   809b8:	2068      	movs	r0, #104	; 0x68
   809ba:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   809bc:	490c      	ldr	r1, [pc, #48]	; (809f0 <board_init+0x70>)
   809be:	205c      	movs	r0, #92	; 0x5c
   809c0:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   809c2:	4a0c      	ldr	r2, [pc, #48]	; (809f4 <board_init+0x74>)
   809c4:	f44f 7140 	mov.w	r1, #768	; 0x300
   809c8:	480b      	ldr	r0, [pc, #44]	; (809f8 <board_init+0x78>)
   809ca:	4b0c      	ldr	r3, [pc, #48]	; (809fc <board_init+0x7c>)
   809cc:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   809ce:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809d2:	202b      	movs	r0, #43	; 0x2b
   809d4:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   809d6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809da:	202a      	movs	r0, #42	; 0x2a
   809dc:	47a0      	blx	r4
   809de:	bd10      	pop	{r4, pc}
   809e0:	400e1a50 	.word	0x400e1a50
   809e4:	00080d95 	.word	0x00080d95
   809e8:	00080aa1 	.word	0x00080aa1
   809ec:	28000079 	.word	0x28000079
   809f0:	28000001 	.word	0x28000001
   809f4:	08000001 	.word	0x08000001
   809f8:	400e0e00 	.word	0x400e0e00
   809fc:	00080b71 	.word	0x00080b71

00080a00 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80a00:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   80a02:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   80a06:	d016      	beq.n	80a36 <pio_set_peripheral+0x36>
   80a08:	d80b      	bhi.n	80a22 <pio_set_peripheral+0x22>
   80a0a:	b149      	cbz	r1, 80a20 <pio_set_peripheral+0x20>
   80a0c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80a10:	d105      	bne.n	80a1e <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   80a12:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   80a14:	6f01      	ldr	r1, [r0, #112]	; 0x70
   80a16:	400b      	ands	r3, r1
   80a18:	ea23 0302 	bic.w	r3, r3, r2
   80a1c:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80a1e:	6042      	str	r2, [r0, #4]
   80a20:	4770      	bx	lr
	switch (ul_type) {
   80a22:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   80a26:	d0fb      	beq.n	80a20 <pio_set_peripheral+0x20>
   80a28:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   80a2c:	d0f8      	beq.n	80a20 <pio_set_peripheral+0x20>
   80a2e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   80a32:	d1f4      	bne.n	80a1e <pio_set_peripheral+0x1e>
   80a34:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   80a36:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80a38:	4313      	orrs	r3, r2
   80a3a:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80a3c:	e7ef      	b.n	80a1e <pio_set_peripheral+0x1e>

00080a3e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a3e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80a40:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80a44:	bf14      	ite	ne
   80a46:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80a48:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80a4a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80a4e:	bf14      	ite	ne
   80a50:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80a52:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80a54:	f012 0f02 	tst.w	r2, #2
   80a58:	d107      	bne.n	80a6a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   80a5a:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80a5e:	bf18      	it	ne
   80a60:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80a64:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80a66:	6001      	str	r1, [r0, #0]
   80a68:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   80a6a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80a6e:	e7f9      	b.n	80a64 <pio_set_input+0x26>

00080a70 <pio_set_output>:
{
   80a70:	b410      	push	{r4}
   80a72:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80a74:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80a76:	b944      	cbnz	r4, 80a8a <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   80a78:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   80a7a:	b143      	cbz	r3, 80a8e <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   80a7c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   80a7e:	b942      	cbnz	r2, 80a92 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80a80:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80a82:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80a84:	6001      	str	r1, [r0, #0]
}
   80a86:	bc10      	pop	{r4}
   80a88:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   80a8a:	6641      	str	r1, [r0, #100]	; 0x64
   80a8c:	e7f5      	b.n	80a7a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   80a8e:	6541      	str	r1, [r0, #84]	; 0x54
   80a90:	e7f5      	b.n	80a7e <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   80a92:	6301      	str	r1, [r0, #48]	; 0x30
   80a94:	e7f5      	b.n	80a82 <pio_set_output+0x12>

00080a96 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80a96:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80a98:	4770      	bx	lr

00080a9a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80a9a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80a9c:	4770      	bx	lr
	...

00080aa0 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80aa0:	b570      	push	{r4, r5, r6, lr}
   80aa2:	b082      	sub	sp, #8
   80aa4:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80aa6:	0943      	lsrs	r3, r0, #5
   80aa8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80aac:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80ab0:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   80ab2:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   80ab6:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80aba:	d031      	beq.n	80b20 <pio_configure_pin+0x80>
   80abc:	d816      	bhi.n	80aec <pio_configure_pin+0x4c>
   80abe:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80ac2:	d01b      	beq.n	80afc <pio_configure_pin+0x5c>
   80ac4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80ac8:	d116      	bne.n	80af8 <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80aca:	f000 001f 	and.w	r0, r0, #31
   80ace:	2601      	movs	r6, #1
   80ad0:	4086      	lsls	r6, r0
   80ad2:	4632      	mov	r2, r6
   80ad4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80ad8:	4620      	mov	r0, r4
   80ada:	4b22      	ldr	r3, [pc, #136]	; (80b64 <pio_configure_pin+0xc4>)
   80adc:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80ade:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ae2:	bf14      	ite	ne
   80ae4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80ae6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   80ae8:	2001      	movs	r0, #1
   80aea:	e017      	b.n	80b1c <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   80aec:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80af0:	d021      	beq.n	80b36 <pio_configure_pin+0x96>
   80af2:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80af6:	d01e      	beq.n	80b36 <pio_configure_pin+0x96>
		return 0;
   80af8:	2000      	movs	r0, #0
   80afa:	e00f      	b.n	80b1c <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80afc:	f000 001f 	and.w	r0, r0, #31
   80b00:	2601      	movs	r6, #1
   80b02:	4086      	lsls	r6, r0
   80b04:	4632      	mov	r2, r6
   80b06:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b0a:	4620      	mov	r0, r4
   80b0c:	4b15      	ldr	r3, [pc, #84]	; (80b64 <pio_configure_pin+0xc4>)
   80b0e:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80b10:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b14:	bf14      	ite	ne
   80b16:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80b18:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   80b1a:	2001      	movs	r0, #1
}
   80b1c:	b002      	add	sp, #8
   80b1e:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80b20:	f000 011f 	and.w	r1, r0, #31
   80b24:	2601      	movs	r6, #1
   80b26:	462a      	mov	r2, r5
   80b28:	fa06 f101 	lsl.w	r1, r6, r1
   80b2c:	4620      	mov	r0, r4
   80b2e:	4b0e      	ldr	r3, [pc, #56]	; (80b68 <pio_configure_pin+0xc8>)
   80b30:	4798      	blx	r3
	return 1;
   80b32:	4630      	mov	r0, r6
		break;
   80b34:	e7f2      	b.n	80b1c <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80b36:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80b3a:	f000 011f 	and.w	r1, r0, #31
   80b3e:	2601      	movs	r6, #1
   80b40:	ea05 0306 	and.w	r3, r5, r6
   80b44:	9300      	str	r3, [sp, #0]
   80b46:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80b4a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80b4e:	bf14      	ite	ne
   80b50:	2200      	movne	r2, #0
   80b52:	2201      	moveq	r2, #1
   80b54:	fa06 f101 	lsl.w	r1, r6, r1
   80b58:	4620      	mov	r0, r4
   80b5a:	4c04      	ldr	r4, [pc, #16]	; (80b6c <pio_configure_pin+0xcc>)
   80b5c:	47a0      	blx	r4
	return 1;
   80b5e:	4630      	mov	r0, r6
		break;
   80b60:	e7dc      	b.n	80b1c <pio_configure_pin+0x7c>
   80b62:	bf00      	nop
   80b64:	00080a01 	.word	0x00080a01
   80b68:	00080a3f 	.word	0x00080a3f
   80b6c:	00080a71 	.word	0x00080a71

00080b70 <pio_configure_pin_group>:
{
   80b70:	b570      	push	{r4, r5, r6, lr}
   80b72:	b082      	sub	sp, #8
   80b74:	4605      	mov	r5, r0
   80b76:	460e      	mov	r6, r1
   80b78:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   80b7a:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   80b7e:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80b82:	d027      	beq.n	80bd4 <pio_configure_pin_group+0x64>
   80b84:	d811      	bhi.n	80baa <pio_configure_pin_group+0x3a>
   80b86:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80b8a:	d016      	beq.n	80bba <pio_configure_pin_group+0x4a>
   80b8c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80b90:	d111      	bne.n	80bb6 <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80b92:	460a      	mov	r2, r1
   80b94:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80b98:	4b19      	ldr	r3, [pc, #100]	; (80c00 <pio_configure_pin_group+0x90>)
   80b9a:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80b9c:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80ba0:	bf14      	ite	ne
   80ba2:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80ba4:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   80ba6:	2001      	movs	r0, #1
   80ba8:	e012      	b.n	80bd0 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   80baa:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80bae:	d015      	beq.n	80bdc <pio_configure_pin_group+0x6c>
   80bb0:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80bb4:	d012      	beq.n	80bdc <pio_configure_pin_group+0x6c>
		return 0;
   80bb6:	2000      	movs	r0, #0
   80bb8:	e00a      	b.n	80bd0 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80bba:	460a      	mov	r2, r1
   80bbc:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80bc0:	4b0f      	ldr	r3, [pc, #60]	; (80c00 <pio_configure_pin_group+0x90>)
   80bc2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80bc4:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80bc8:	bf14      	ite	ne
   80bca:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80bcc:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   80bce:	2001      	movs	r0, #1
}
   80bd0:	b002      	add	sp, #8
   80bd2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   80bd4:	4b0b      	ldr	r3, [pc, #44]	; (80c04 <pio_configure_pin_group+0x94>)
   80bd6:	4798      	blx	r3
	return 1;
   80bd8:	2001      	movs	r0, #1
		break;
   80bda:	e7f9      	b.n	80bd0 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80bdc:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   80be0:	f004 0301 	and.w	r3, r4, #1
   80be4:	9300      	str	r3, [sp, #0]
   80be6:	f3c4 0380 	ubfx	r3, r4, #2, #1
   80bea:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80bee:	bf14      	ite	ne
   80bf0:	2200      	movne	r2, #0
   80bf2:	2201      	moveq	r2, #1
   80bf4:	4631      	mov	r1, r6
   80bf6:	4628      	mov	r0, r5
   80bf8:	4c03      	ldr	r4, [pc, #12]	; (80c08 <pio_configure_pin_group+0x98>)
   80bfa:	47a0      	blx	r4
	return 1;
   80bfc:	2001      	movs	r0, #1
		break;
   80bfe:	e7e7      	b.n	80bd0 <pio_configure_pin_group+0x60>
   80c00:	00080a01 	.word	0x00080a01
   80c04:	00080a3f 	.word	0x00080a3f
   80c08:	00080a71 	.word	0x00080a71

00080c0c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c10:	4604      	mov	r4, r0
   80c12:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80c14:	4b0e      	ldr	r3, [pc, #56]	; (80c50 <pio_handler_process+0x44>)
   80c16:	4798      	blx	r3
   80c18:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80c1a:	4620      	mov	r0, r4
   80c1c:	4b0d      	ldr	r3, [pc, #52]	; (80c54 <pio_handler_process+0x48>)
   80c1e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80c20:	4005      	ands	r5, r0
   80c22:	d013      	beq.n	80c4c <pio_handler_process+0x40>
   80c24:	4c0c      	ldr	r4, [pc, #48]	; (80c58 <pio_handler_process+0x4c>)
   80c26:	f104 0660 	add.w	r6, r4, #96	; 0x60
   80c2a:	e003      	b.n	80c34 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80c2c:	42b4      	cmp	r4, r6
   80c2e:	d00d      	beq.n	80c4c <pio_handler_process+0x40>
   80c30:	3410      	adds	r4, #16
		while (status != 0) {
   80c32:	b15d      	cbz	r5, 80c4c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80c34:	6820      	ldr	r0, [r4, #0]
   80c36:	4540      	cmp	r0, r8
   80c38:	d1f8      	bne.n	80c2c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c3a:	6861      	ldr	r1, [r4, #4]
   80c3c:	4229      	tst	r1, r5
   80c3e:	d0f5      	beq.n	80c2c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c40:	68e3      	ldr	r3, [r4, #12]
   80c42:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c44:	6863      	ldr	r3, [r4, #4]
   80c46:	ea25 0503 	bic.w	r5, r5, r3
   80c4a:	e7ef      	b.n	80c2c <pio_handler_process+0x20>
   80c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80c50:	00080a97 	.word	0x00080a97
   80c54:	00080a9b 	.word	0x00080a9b
   80c58:	20070b60 	.word	0x20070b60

00080c5c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80c5c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80c5e:	210b      	movs	r1, #11
   80c60:	4801      	ldr	r0, [pc, #4]	; (80c68 <PIOA_Handler+0xc>)
   80c62:	4b02      	ldr	r3, [pc, #8]	; (80c6c <PIOA_Handler+0x10>)
   80c64:	4798      	blx	r3
   80c66:	bd08      	pop	{r3, pc}
   80c68:	400e0e00 	.word	0x400e0e00
   80c6c:	00080c0d 	.word	0x00080c0d

00080c70 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80c70:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80c72:	210c      	movs	r1, #12
   80c74:	4801      	ldr	r0, [pc, #4]	; (80c7c <PIOB_Handler+0xc>)
   80c76:	4b02      	ldr	r3, [pc, #8]	; (80c80 <PIOB_Handler+0x10>)
   80c78:	4798      	blx	r3
   80c7a:	bd08      	pop	{r3, pc}
   80c7c:	400e1000 	.word	0x400e1000
   80c80:	00080c0d 	.word	0x00080c0d

00080c84 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80c84:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80c86:	210d      	movs	r1, #13
   80c88:	4801      	ldr	r0, [pc, #4]	; (80c90 <PIOC_Handler+0xc>)
   80c8a:	4b02      	ldr	r3, [pc, #8]	; (80c94 <PIOC_Handler+0x10>)
   80c8c:	4798      	blx	r3
   80c8e:	bd08      	pop	{r3, pc}
   80c90:	400e1200 	.word	0x400e1200
   80c94:	00080c0d 	.word	0x00080c0d

00080c98 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80c98:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80c9a:	210e      	movs	r1, #14
   80c9c:	4801      	ldr	r0, [pc, #4]	; (80ca4 <PIOD_Handler+0xc>)
   80c9e:	4b02      	ldr	r3, [pc, #8]	; (80ca8 <PIOD_Handler+0x10>)
   80ca0:	4798      	blx	r3
   80ca2:	bd08      	pop	{r3, pc}
   80ca4:	400e1400 	.word	0x400e1400
   80ca8:	00080c0d 	.word	0x00080c0d

00080cac <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80cac:	4a17      	ldr	r2, [pc, #92]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cae:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80cb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80cb4:	4318      	orrs	r0, r3
   80cb6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cb8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80cba:	f013 0f08 	tst.w	r3, #8
   80cbe:	d10a      	bne.n	80cd6 <pmc_switch_mck_to_pllack+0x2a>
   80cc0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cc4:	4911      	ldr	r1, [pc, #68]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cc6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cc8:	f012 0f08 	tst.w	r2, #8
   80ccc:	d103      	bne.n	80cd6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cce:	3b01      	subs	r3, #1
   80cd0:	d1f9      	bne.n	80cc6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   80cd2:	2001      	movs	r0, #1
   80cd4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80cd6:	4a0d      	ldr	r2, [pc, #52]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cd8:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80cda:	f023 0303 	bic.w	r3, r3, #3
   80cde:	f043 0302 	orr.w	r3, r3, #2
   80ce2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ce4:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80ce6:	f013 0f08 	tst.w	r3, #8
   80cea:	d10a      	bne.n	80d02 <pmc_switch_mck_to_pllack+0x56>
   80cec:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cf0:	4906      	ldr	r1, [pc, #24]	; (80d0c <pmc_switch_mck_to_pllack+0x60>)
   80cf2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cf4:	f012 0f08 	tst.w	r2, #8
   80cf8:	d105      	bne.n	80d06 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cfa:	3b01      	subs	r3, #1
   80cfc:	d1f9      	bne.n	80cf2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   80cfe:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80d00:	4770      	bx	lr
	return 0;
   80d02:	2000      	movs	r0, #0
   80d04:	4770      	bx	lr
   80d06:	2000      	movs	r0, #0
   80d08:	4770      	bx	lr
   80d0a:	bf00      	nop
   80d0c:	400e0600 	.word	0x400e0600

00080d10 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80d10:	b9c8      	cbnz	r0, 80d46 <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d12:	4a11      	ldr	r2, [pc, #68]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d14:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80d16:	0209      	lsls	r1, r1, #8
   80d18:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d1a:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80d1e:	f023 0303 	bic.w	r3, r3, #3
   80d22:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80d26:	f043 0301 	orr.w	r3, r3, #1
   80d2a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d2c:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80d2e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80d30:	f013 0f01 	tst.w	r3, #1
   80d34:	d0fb      	beq.n	80d2e <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80d36:	4a08      	ldr	r2, [pc, #32]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d38:	6a13      	ldr	r3, [r2, #32]
   80d3a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80d3e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80d42:	6213      	str	r3, [r2, #32]
   80d44:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d46:	4904      	ldr	r1, [pc, #16]	; (80d58 <pmc_switch_mainck_to_xtal+0x48>)
   80d48:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80d4a:	4a04      	ldr	r2, [pc, #16]	; (80d5c <pmc_switch_mainck_to_xtal+0x4c>)
   80d4c:	401a      	ands	r2, r3
   80d4e:	4b04      	ldr	r3, [pc, #16]	; (80d60 <pmc_switch_mainck_to_xtal+0x50>)
   80d50:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80d52:	620b      	str	r3, [r1, #32]
   80d54:	4770      	bx	lr
   80d56:	bf00      	nop
   80d58:	400e0600 	.word	0x400e0600
   80d5c:	fec8fffc 	.word	0xfec8fffc
   80d60:	01370002 	.word	0x01370002

00080d64 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80d64:	4b02      	ldr	r3, [pc, #8]	; (80d70 <pmc_osc_is_ready_mainck+0xc>)
   80d66:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d68:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80d6c:	4770      	bx	lr
   80d6e:	bf00      	nop
   80d70:	400e0600 	.word	0x400e0600

00080d74 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80d74:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80d78:	4b01      	ldr	r3, [pc, #4]	; (80d80 <pmc_disable_pllack+0xc>)
   80d7a:	629a      	str	r2, [r3, #40]	; 0x28
   80d7c:	4770      	bx	lr
   80d7e:	bf00      	nop
   80d80:	400e0600 	.word	0x400e0600

00080d84 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80d84:	4b02      	ldr	r3, [pc, #8]	; (80d90 <pmc_is_locked_pllack+0xc>)
   80d86:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d88:	f000 0002 	and.w	r0, r0, #2
   80d8c:	4770      	bx	lr
   80d8e:	bf00      	nop
   80d90:	400e0600 	.word	0x400e0600

00080d94 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80d94:	282c      	cmp	r0, #44	; 0x2c
   80d96:	d81e      	bhi.n	80dd6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
   80d98:	281f      	cmp	r0, #31
   80d9a:	d80c      	bhi.n	80db6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80d9c:	4b11      	ldr	r3, [pc, #68]	; (80de4 <pmc_enable_periph_clk+0x50>)
   80d9e:	699a      	ldr	r2, [r3, #24]
   80da0:	2301      	movs	r3, #1
   80da2:	4083      	lsls	r3, r0
   80da4:	4393      	bics	r3, r2
   80da6:	d018      	beq.n	80dda <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
   80da8:	2301      	movs	r3, #1
   80daa:	fa03 f000 	lsl.w	r0, r3, r0
   80dae:	4b0d      	ldr	r3, [pc, #52]	; (80de4 <pmc_enable_periph_clk+0x50>)
   80db0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80db2:	2000      	movs	r0, #0
   80db4:	4770      	bx	lr
		ul_id -= 32;
   80db6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80db8:	4b0a      	ldr	r3, [pc, #40]	; (80de4 <pmc_enable_periph_clk+0x50>)
   80dba:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   80dbe:	2301      	movs	r3, #1
   80dc0:	4083      	lsls	r3, r0
   80dc2:	4393      	bics	r3, r2
   80dc4:	d00b      	beq.n	80dde <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
   80dc6:	2301      	movs	r3, #1
   80dc8:	fa03 f000 	lsl.w	r0, r3, r0
   80dcc:	4b05      	ldr	r3, [pc, #20]	; (80de4 <pmc_enable_periph_clk+0x50>)
   80dce:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
   80dd2:	2000      	movs	r0, #0
   80dd4:	4770      	bx	lr
		return 1;
   80dd6:	2001      	movs	r0, #1
   80dd8:	4770      	bx	lr
	return 0;
   80dda:	2000      	movs	r0, #0
   80ddc:	4770      	bx	lr
   80dde:	2000      	movs	r0, #0
}
   80de0:	4770      	bx	lr
   80de2:	bf00      	nop
   80de4:	400e0600 	.word	0x400e0600

00080de8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80de8:	e7fe      	b.n	80de8 <Dummy_Handler>
	...

00080dec <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80dec:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80dee:	4b1c      	ldr	r3, [pc, #112]	; (80e60 <Reset_Handler+0x74>)
   80df0:	4a1c      	ldr	r2, [pc, #112]	; (80e64 <Reset_Handler+0x78>)
   80df2:	429a      	cmp	r2, r3
   80df4:	d010      	beq.n	80e18 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80df6:	4b1c      	ldr	r3, [pc, #112]	; (80e68 <Reset_Handler+0x7c>)
   80df8:	4a19      	ldr	r2, [pc, #100]	; (80e60 <Reset_Handler+0x74>)
   80dfa:	429a      	cmp	r2, r3
   80dfc:	d20c      	bcs.n	80e18 <Reset_Handler+0x2c>
   80dfe:	3b01      	subs	r3, #1
   80e00:	1a9b      	subs	r3, r3, r2
   80e02:	f023 0303 	bic.w	r3, r3, #3
   80e06:	3304      	adds	r3, #4
   80e08:	4413      	add	r3, r2
   80e0a:	4916      	ldr	r1, [pc, #88]	; (80e64 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   80e0c:	f851 0b04 	ldr.w	r0, [r1], #4
   80e10:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   80e14:	429a      	cmp	r2, r3
   80e16:	d1f9      	bne.n	80e0c <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e18:	4b14      	ldr	r3, [pc, #80]	; (80e6c <Reset_Handler+0x80>)
   80e1a:	4a15      	ldr	r2, [pc, #84]	; (80e70 <Reset_Handler+0x84>)
   80e1c:	429a      	cmp	r2, r3
   80e1e:	d20a      	bcs.n	80e36 <Reset_Handler+0x4a>
   80e20:	3b01      	subs	r3, #1
   80e22:	1a9b      	subs	r3, r3, r2
   80e24:	f023 0303 	bic.w	r3, r3, #3
   80e28:	3304      	adds	r3, #4
   80e2a:	4413      	add	r3, r2
		*pDest++ = 0;
   80e2c:	2100      	movs	r1, #0
   80e2e:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   80e32:	4293      	cmp	r3, r2
   80e34:	d1fb      	bne.n	80e2e <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80e36:	4b0f      	ldr	r3, [pc, #60]	; (80e74 <Reset_Handler+0x88>)
   80e38:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   80e3c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   80e40:	490d      	ldr	r1, [pc, #52]	; (80e78 <Reset_Handler+0x8c>)
   80e42:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80e44:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   80e48:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   80e4c:	d203      	bcs.n	80e56 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80e4e:	688b      	ldr	r3, [r1, #8]
   80e50:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   80e54:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80e56:	4b09      	ldr	r3, [pc, #36]	; (80e7c <Reset_Handler+0x90>)
   80e58:	4798      	blx	r3

	/* Branch to main function */
	main();
   80e5a:	4b09      	ldr	r3, [pc, #36]	; (80e80 <Reset_Handler+0x94>)
   80e5c:	4798      	blx	r3
   80e5e:	e7fe      	b.n	80e5e <Reset_Handler+0x72>
   80e60:	20070000 	.word	0x20070000
   80e64:	00085b64 	.word	0x00085b64
   80e68:	20070b1c 	.word	0x20070b1c
   80e6c:	20070c0c 	.word	0x20070c0c
   80e70:	20070b1c 	.word	0x20070b1c
   80e74:	00080000 	.word	0x00080000
   80e78:	e000ed00 	.word	0xe000ed00
   80e7c:	00081019 	.word	0x00081019
   80e80:	00080fd5 	.word	0x00080fd5

00080e84 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80e84:	4b3d      	ldr	r3, [pc, #244]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80e86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e88:	f003 0303 	and.w	r3, r3, #3
   80e8c:	2b03      	cmp	r3, #3
   80e8e:	d80e      	bhi.n	80eae <SystemCoreClockUpdate+0x2a>
   80e90:	e8df f003 	tbb	[pc, r3]
   80e94:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80e98:	4b39      	ldr	r3, [pc, #228]	; (80f80 <SystemCoreClockUpdate+0xfc>)
   80e9a:	695b      	ldr	r3, [r3, #20]
   80e9c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80ea0:	bf14      	ite	ne
   80ea2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80ea6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80eaa:	4b36      	ldr	r3, [pc, #216]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80eac:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80eae:	4b33      	ldr	r3, [pc, #204]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80eb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80eb2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80eb6:	2b70      	cmp	r3, #112	; 0x70
   80eb8:	d057      	beq.n	80f6a <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80eba:	4b30      	ldr	r3, [pc, #192]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80ebc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80ebe:	4931      	ldr	r1, [pc, #196]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80ec0:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80ec4:	680b      	ldr	r3, [r1, #0]
   80ec6:	40d3      	lsrs	r3, r2
   80ec8:	600b      	str	r3, [r1, #0]
   80eca:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80ecc:	4b2b      	ldr	r3, [pc, #172]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80ece:	6a1b      	ldr	r3, [r3, #32]
   80ed0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80ed4:	d003      	beq.n	80ede <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80ed6:	4a2c      	ldr	r2, [pc, #176]	; (80f88 <SystemCoreClockUpdate+0x104>)
   80ed8:	4b2a      	ldr	r3, [pc, #168]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80eda:	601a      	str	r2, [r3, #0]
   80edc:	e7e7      	b.n	80eae <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80ede:	4a2b      	ldr	r2, [pc, #172]	; (80f8c <SystemCoreClockUpdate+0x108>)
   80ee0:	4b28      	ldr	r3, [pc, #160]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80ee2:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80ee4:	4b25      	ldr	r3, [pc, #148]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80ee6:	6a1b      	ldr	r3, [r3, #32]
   80ee8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80eec:	2b10      	cmp	r3, #16
   80eee:	d005      	beq.n	80efc <SystemCoreClockUpdate+0x78>
   80ef0:	2b20      	cmp	r3, #32
   80ef2:	d1dc      	bne.n	80eae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80ef4:	4a24      	ldr	r2, [pc, #144]	; (80f88 <SystemCoreClockUpdate+0x104>)
   80ef6:	4b23      	ldr	r3, [pc, #140]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80ef8:	601a      	str	r2, [r3, #0]
				break;
   80efa:	e7d8      	b.n	80eae <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   80efc:	4a24      	ldr	r2, [pc, #144]	; (80f90 <SystemCoreClockUpdate+0x10c>)
   80efe:	4b21      	ldr	r3, [pc, #132]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f00:	601a      	str	r2, [r3, #0]
				break;
   80f02:	e7d4      	b.n	80eae <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80f04:	4b1d      	ldr	r3, [pc, #116]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80f06:	6a1b      	ldr	r3, [r3, #32]
   80f08:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f0c:	d00c      	beq.n	80f28 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f0e:	4a1e      	ldr	r2, [pc, #120]	; (80f88 <SystemCoreClockUpdate+0x104>)
   80f10:	4b1c      	ldr	r3, [pc, #112]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f12:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80f14:	4b19      	ldr	r3, [pc, #100]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80f16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f18:	f003 0303 	and.w	r3, r3, #3
   80f1c:	2b02      	cmp	r3, #2
   80f1e:	d016      	beq.n	80f4e <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80f20:	4a1c      	ldr	r2, [pc, #112]	; (80f94 <SystemCoreClockUpdate+0x110>)
   80f22:	4b18      	ldr	r3, [pc, #96]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f24:	601a      	str	r2, [r3, #0]
   80f26:	e7c2      	b.n	80eae <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f28:	4a18      	ldr	r2, [pc, #96]	; (80f8c <SystemCoreClockUpdate+0x108>)
   80f2a:	4b16      	ldr	r3, [pc, #88]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f2c:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f2e:	4b13      	ldr	r3, [pc, #76]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80f30:	6a1b      	ldr	r3, [r3, #32]
   80f32:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f36:	2b10      	cmp	r3, #16
   80f38:	d005      	beq.n	80f46 <SystemCoreClockUpdate+0xc2>
   80f3a:	2b20      	cmp	r3, #32
   80f3c:	d1ea      	bne.n	80f14 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   80f3e:	4a12      	ldr	r2, [pc, #72]	; (80f88 <SystemCoreClockUpdate+0x104>)
   80f40:	4b10      	ldr	r3, [pc, #64]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f42:	601a      	str	r2, [r3, #0]
				break;
   80f44:	e7e6      	b.n	80f14 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   80f46:	4a12      	ldr	r2, [pc, #72]	; (80f90 <SystemCoreClockUpdate+0x10c>)
   80f48:	4b0e      	ldr	r3, [pc, #56]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f4a:	601a      	str	r2, [r3, #0]
				break;
   80f4c:	e7e2      	b.n	80f14 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f4e:	4a0b      	ldr	r2, [pc, #44]	; (80f7c <SystemCoreClockUpdate+0xf8>)
   80f50:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f52:	6a92      	ldr	r2, [r2, #40]	; 0x28
   80f54:	480b      	ldr	r0, [pc, #44]	; (80f84 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f56:	f3c1 410a 	ubfx	r1, r1, #16, #11
   80f5a:	6803      	ldr	r3, [r0, #0]
   80f5c:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f60:	b2d2      	uxtb	r2, r2
   80f62:	fbb3 f3f2 	udiv	r3, r3, r2
   80f66:	6003      	str	r3, [r0, #0]
   80f68:	e7a1      	b.n	80eae <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   80f6a:	4a06      	ldr	r2, [pc, #24]	; (80f84 <SystemCoreClockUpdate+0x100>)
   80f6c:	6813      	ldr	r3, [r2, #0]
   80f6e:	490a      	ldr	r1, [pc, #40]	; (80f98 <SystemCoreClockUpdate+0x114>)
   80f70:	fba1 1303 	umull	r1, r3, r1, r3
   80f74:	085b      	lsrs	r3, r3, #1
   80f76:	6013      	str	r3, [r2, #0]
   80f78:	4770      	bx	lr
   80f7a:	bf00      	nop
   80f7c:	400e0600 	.word	0x400e0600
   80f80:	400e1a10 	.word	0x400e1a10
   80f84:	20070170 	.word	0x20070170
   80f88:	00b71b00 	.word	0x00b71b00
   80f8c:	003d0900 	.word	0x003d0900
   80f90:	007a1200 	.word	0x007a1200
   80f94:	0e4e1c00 	.word	0x0e4e1c00
   80f98:	aaaaaaab 	.word	0xaaaaaaab

00080f9c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80f9c:	4b0a      	ldr	r3, [pc, #40]	; (80fc8 <_sbrk+0x2c>)
   80f9e:	681b      	ldr	r3, [r3, #0]
   80fa0:	b153      	cbz	r3, 80fb8 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80fa2:	4b09      	ldr	r3, [pc, #36]	; (80fc8 <_sbrk+0x2c>)
   80fa4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80fa6:	181a      	adds	r2, r3, r0
   80fa8:	4908      	ldr	r1, [pc, #32]	; (80fcc <_sbrk+0x30>)
   80faa:	4291      	cmp	r1, r2
   80fac:	db08      	blt.n	80fc0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80fae:	4610      	mov	r0, r2
   80fb0:	4a05      	ldr	r2, [pc, #20]	; (80fc8 <_sbrk+0x2c>)
   80fb2:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80fb4:	4618      	mov	r0, r3
   80fb6:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80fb8:	4a05      	ldr	r2, [pc, #20]	; (80fd0 <_sbrk+0x34>)
   80fba:	4b03      	ldr	r3, [pc, #12]	; (80fc8 <_sbrk+0x2c>)
   80fbc:	601a      	str	r2, [r3, #0]
   80fbe:	e7f0      	b.n	80fa2 <_sbrk+0x6>
		return (caddr_t) -1;	
   80fc0:	f04f 30ff 	mov.w	r0, #4294967295
}
   80fc4:	4770      	bx	lr
   80fc6:	bf00      	nop
   80fc8:	20070bd0 	.word	0x20070bd0
   80fcc:	20087ffc 	.word	0x20087ffc
   80fd0:	20072c10 	.word	0x20072c10

00080fd4 <main>:
#include "io_control/dac.h"

#define UART_BAUDRATE	115200		//Baud must be the same in Matlab

int main (void)
{
   80fd4:	b508      	push	{r3, lr}
	sysclk_init();
   80fd6:	4b09      	ldr	r3, [pc, #36]	; (80ffc <main+0x28>)
   80fd8:	4798      	blx	r3
	board_init();
   80fda:	4b09      	ldr	r3, [pc, #36]	; (81000 <main+0x2c>)
   80fdc:	4798      	blx	r3
	uart_config((uint32_t)UART_BAUDRATE);
   80fde:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80fe2:	4b08      	ldr	r3, [pc, #32]	; (81004 <main+0x30>)
   80fe4:	4798      	blx	r3
	init_adc();
   80fe6:	4b08      	ldr	r3, [pc, #32]	; (81008 <main+0x34>)
   80fe8:	4798      	blx	r3
	pwm_setup();
   80fea:	4b08      	ldr	r3, [pc, #32]	; (8100c <main+0x38>)
   80fec:	4798      	blx	r3
	dac_setup();
   80fee:	4b08      	ldr	r3, [pc, #32]	; (81010 <main+0x3c>)
   80ff0:	4798      	blx	r3
	start_coms();					//Run state machine
   80ff2:	4b08      	ldr	r3, [pc, #32]	; (81014 <main+0x40>)
   80ff4:	4798      	blx	r3
	
	
}
   80ff6:	2000      	movs	r0, #0
   80ff8:	bd08      	pop	{r3, pc}
   80ffa:	bf00      	nop
   80ffc:	0008091d 	.word	0x0008091d
   81000:	00080981 	.word	0x00080981
   81004:	0008033d 	.word	0x0008033d
   81008:	00080881 	.word	0x00080881
   8100c:	00080229 	.word	0x00080229
   81010:	000802bd 	.word	0x000802bd
   81014:	0008053d 	.word	0x0008053d

00081018 <__libc_init_array>:
   81018:	b570      	push	{r4, r5, r6, lr}
   8101a:	4e0f      	ldr	r6, [pc, #60]	; (81058 <__libc_init_array+0x40>)
   8101c:	4d0f      	ldr	r5, [pc, #60]	; (8105c <__libc_init_array+0x44>)
   8101e:	1b76      	subs	r6, r6, r5
   81020:	10b6      	asrs	r6, r6, #2
   81022:	bf18      	it	ne
   81024:	2400      	movne	r4, #0
   81026:	d005      	beq.n	81034 <__libc_init_array+0x1c>
   81028:	3401      	adds	r4, #1
   8102a:	f855 3b04 	ldr.w	r3, [r5], #4
   8102e:	4798      	blx	r3
   81030:	42a6      	cmp	r6, r4
   81032:	d1f9      	bne.n	81028 <__libc_init_array+0x10>
   81034:	4e0a      	ldr	r6, [pc, #40]	; (81060 <__libc_init_array+0x48>)
   81036:	4d0b      	ldr	r5, [pc, #44]	; (81064 <__libc_init_array+0x4c>)
   81038:	f004 fd7e 	bl	85b38 <_init>
   8103c:	1b76      	subs	r6, r6, r5
   8103e:	10b6      	asrs	r6, r6, #2
   81040:	bf18      	it	ne
   81042:	2400      	movne	r4, #0
   81044:	d006      	beq.n	81054 <__libc_init_array+0x3c>
   81046:	3401      	adds	r4, #1
   81048:	f855 3b04 	ldr.w	r3, [r5], #4
   8104c:	4798      	blx	r3
   8104e:	42a6      	cmp	r6, r4
   81050:	d1f9      	bne.n	81046 <__libc_init_array+0x2e>
   81052:	bd70      	pop	{r4, r5, r6, pc}
   81054:	bd70      	pop	{r4, r5, r6, pc}
   81056:	bf00      	nop
   81058:	00085b44 	.word	0x00085b44
   8105c:	00085b44 	.word	0x00085b44
   81060:	00085b4c 	.word	0x00085b4c
   81064:	00085b44 	.word	0x00085b44

00081068 <memset>:
   81068:	b470      	push	{r4, r5, r6}
   8106a:	0786      	lsls	r6, r0, #30
   8106c:	d046      	beq.n	810fc <memset+0x94>
   8106e:	1e54      	subs	r4, r2, #1
   81070:	2a00      	cmp	r2, #0
   81072:	d041      	beq.n	810f8 <memset+0x90>
   81074:	b2ca      	uxtb	r2, r1
   81076:	4603      	mov	r3, r0
   81078:	e002      	b.n	81080 <memset+0x18>
   8107a:	f114 34ff 	adds.w	r4, r4, #4294967295
   8107e:	d33b      	bcc.n	810f8 <memset+0x90>
   81080:	f803 2b01 	strb.w	r2, [r3], #1
   81084:	079d      	lsls	r5, r3, #30
   81086:	d1f8      	bne.n	8107a <memset+0x12>
   81088:	2c03      	cmp	r4, #3
   8108a:	d92e      	bls.n	810ea <memset+0x82>
   8108c:	b2cd      	uxtb	r5, r1
   8108e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   81092:	2c0f      	cmp	r4, #15
   81094:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81098:	d919      	bls.n	810ce <memset+0x66>
   8109a:	4626      	mov	r6, r4
   8109c:	f103 0210 	add.w	r2, r3, #16
   810a0:	3e10      	subs	r6, #16
   810a2:	2e0f      	cmp	r6, #15
   810a4:	f842 5c10 	str.w	r5, [r2, #-16]
   810a8:	f842 5c0c 	str.w	r5, [r2, #-12]
   810ac:	f842 5c08 	str.w	r5, [r2, #-8]
   810b0:	f842 5c04 	str.w	r5, [r2, #-4]
   810b4:	f102 0210 	add.w	r2, r2, #16
   810b8:	d8f2      	bhi.n	810a0 <memset+0x38>
   810ba:	f1a4 0210 	sub.w	r2, r4, #16
   810be:	f022 020f 	bic.w	r2, r2, #15
   810c2:	f004 040f 	and.w	r4, r4, #15
   810c6:	3210      	adds	r2, #16
   810c8:	2c03      	cmp	r4, #3
   810ca:	4413      	add	r3, r2
   810cc:	d90d      	bls.n	810ea <memset+0x82>
   810ce:	461e      	mov	r6, r3
   810d0:	4622      	mov	r2, r4
   810d2:	3a04      	subs	r2, #4
   810d4:	2a03      	cmp	r2, #3
   810d6:	f846 5b04 	str.w	r5, [r6], #4
   810da:	d8fa      	bhi.n	810d2 <memset+0x6a>
   810dc:	1f22      	subs	r2, r4, #4
   810de:	f022 0203 	bic.w	r2, r2, #3
   810e2:	3204      	adds	r2, #4
   810e4:	4413      	add	r3, r2
   810e6:	f004 0403 	and.w	r4, r4, #3
   810ea:	b12c      	cbz	r4, 810f8 <memset+0x90>
   810ec:	b2c9      	uxtb	r1, r1
   810ee:	441c      	add	r4, r3
   810f0:	f803 1b01 	strb.w	r1, [r3], #1
   810f4:	429c      	cmp	r4, r3
   810f6:	d1fb      	bne.n	810f0 <memset+0x88>
   810f8:	bc70      	pop	{r4, r5, r6}
   810fa:	4770      	bx	lr
   810fc:	4614      	mov	r4, r2
   810fe:	4603      	mov	r3, r0
   81100:	e7c2      	b.n	81088 <memset+0x20>
   81102:	bf00      	nop

00081104 <sprintf>:
   81104:	b40e      	push	{r1, r2, r3}
   81106:	4601      	mov	r1, r0
   81108:	b5f0      	push	{r4, r5, r6, r7, lr}
   8110a:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   8110e:	f44f 7702 	mov.w	r7, #520	; 0x208
   81112:	f64f 76ff 	movw	r6, #65535	; 0xffff
   81116:	b09c      	sub	sp, #112	; 0x70
   81118:	ac21      	add	r4, sp, #132	; 0x84
   8111a:	f854 2b04 	ldr.w	r2, [r4], #4
   8111e:	4b0b      	ldr	r3, [pc, #44]	; (8114c <sprintf+0x48>)
   81120:	9102      	str	r1, [sp, #8]
   81122:	9106      	str	r1, [sp, #24]
   81124:	6818      	ldr	r0, [r3, #0]
   81126:	a902      	add	r1, sp, #8
   81128:	4623      	mov	r3, r4
   8112a:	9401      	str	r4, [sp, #4]
   8112c:	f8ad 7014 	strh.w	r7, [sp, #20]
   81130:	9504      	str	r5, [sp, #16]
   81132:	9507      	str	r5, [sp, #28]
   81134:	f8ad 6016 	strh.w	r6, [sp, #22]
   81138:	f000 f838 	bl	811ac <_svfprintf_r>
   8113c:	2200      	movs	r2, #0
   8113e:	9b02      	ldr	r3, [sp, #8]
   81140:	701a      	strb	r2, [r3, #0]
   81142:	b01c      	add	sp, #112	; 0x70
   81144:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81148:	b003      	add	sp, #12
   8114a:	4770      	bx	lr
   8114c:	20070174 	.word	0x20070174

00081150 <strlen>:
   81150:	f020 0103 	bic.w	r1, r0, #3
   81154:	f010 0003 	ands.w	r0, r0, #3
   81158:	f1c0 0000 	rsb	r0, r0, #0
   8115c:	f851 3b04 	ldr.w	r3, [r1], #4
   81160:	f100 0c04 	add.w	ip, r0, #4
   81164:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81168:	f06f 0200 	mvn.w	r2, #0
   8116c:	bf1c      	itt	ne
   8116e:	fa22 f20c 	lsrne.w	r2, r2, ip
   81172:	4313      	orrne	r3, r2
   81174:	f04f 0c01 	mov.w	ip, #1
   81178:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   8117c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81180:	eba3 020c 	sub.w	r2, r3, ip
   81184:	ea22 0203 	bic.w	r2, r2, r3
   81188:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   8118c:	bf04      	itt	eq
   8118e:	f851 3b04 	ldreq.w	r3, [r1], #4
   81192:	3004      	addeq	r0, #4
   81194:	d0f4      	beq.n	81180 <strlen+0x30>
   81196:	f1c2 0100 	rsb	r1, r2, #0
   8119a:	ea02 0201 	and.w	r2, r2, r1
   8119e:	fab2 f282 	clz	r2, r2
   811a2:	f1c2 021f 	rsb	r2, r2, #31
   811a6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   811aa:	4770      	bx	lr

000811ac <_svfprintf_r>:
   811ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   811b0:	b0c3      	sub	sp, #268	; 0x10c
   811b2:	460c      	mov	r4, r1
   811b4:	910b      	str	r1, [sp, #44]	; 0x2c
   811b6:	4692      	mov	sl, r2
   811b8:	930f      	str	r3, [sp, #60]	; 0x3c
   811ba:	900c      	str	r0, [sp, #48]	; 0x30
   811bc:	f002 fb8a 	bl	838d4 <_localeconv_r>
   811c0:	6803      	ldr	r3, [r0, #0]
   811c2:	4618      	mov	r0, r3
   811c4:	931a      	str	r3, [sp, #104]	; 0x68
   811c6:	f7ff ffc3 	bl	81150 <strlen>
   811ca:	89a3      	ldrh	r3, [r4, #12]
   811cc:	9019      	str	r0, [sp, #100]	; 0x64
   811ce:	0619      	lsls	r1, r3, #24
   811d0:	d503      	bpl.n	811da <_svfprintf_r+0x2e>
   811d2:	6923      	ldr	r3, [r4, #16]
   811d4:	2b00      	cmp	r3, #0
   811d6:	f001 8031 	beq.w	8223c <_svfprintf_r+0x1090>
   811da:	2300      	movs	r3, #0
   811dc:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   811e0:	46c8      	mov	r8, r9
   811e2:	9314      	str	r3, [sp, #80]	; 0x50
   811e4:	9313      	str	r3, [sp, #76]	; 0x4c
   811e6:	9315      	str	r3, [sp, #84]	; 0x54
   811e8:	9318      	str	r3, [sp, #96]	; 0x60
   811ea:	931b      	str	r3, [sp, #108]	; 0x6c
   811ec:	9309      	str	r3, [sp, #36]	; 0x24
   811ee:	9316      	str	r3, [sp, #88]	; 0x58
   811f0:	9317      	str	r3, [sp, #92]	; 0x5c
   811f2:	9327      	str	r3, [sp, #156]	; 0x9c
   811f4:	9326      	str	r3, [sp, #152]	; 0x98
   811f6:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   811fa:	f89a 3000 	ldrb.w	r3, [sl]
   811fe:	4654      	mov	r4, sl
   81200:	b1eb      	cbz	r3, 8123e <_svfprintf_r+0x92>
   81202:	2b25      	cmp	r3, #37	; 0x25
   81204:	d102      	bne.n	8120c <_svfprintf_r+0x60>
   81206:	e01a      	b.n	8123e <_svfprintf_r+0x92>
   81208:	2b25      	cmp	r3, #37	; 0x25
   8120a:	d003      	beq.n	81214 <_svfprintf_r+0x68>
   8120c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81210:	2b00      	cmp	r3, #0
   81212:	d1f9      	bne.n	81208 <_svfprintf_r+0x5c>
   81214:	eba4 050a 	sub.w	r5, r4, sl
   81218:	b18d      	cbz	r5, 8123e <_svfprintf_r+0x92>
   8121a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8121c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8121e:	3301      	adds	r3, #1
   81220:	442a      	add	r2, r5
   81222:	2b07      	cmp	r3, #7
   81224:	f8c8 a000 	str.w	sl, [r8]
   81228:	f8c8 5004 	str.w	r5, [r8, #4]
   8122c:	9227      	str	r2, [sp, #156]	; 0x9c
   8122e:	9326      	str	r3, [sp, #152]	; 0x98
   81230:	f300 808a 	bgt.w	81348 <_svfprintf_r+0x19c>
   81234:	f108 0808 	add.w	r8, r8, #8
   81238:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8123a:	442b      	add	r3, r5
   8123c:	9309      	str	r3, [sp, #36]	; 0x24
   8123e:	7823      	ldrb	r3, [r4, #0]
   81240:	2b00      	cmp	r3, #0
   81242:	f000 8089 	beq.w	81358 <_svfprintf_r+0x1ac>
   81246:	2300      	movs	r3, #0
   81248:	f04f 30ff 	mov.w	r0, #4294967295
   8124c:	461a      	mov	r2, r3
   8124e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81252:	4619      	mov	r1, r3
   81254:	930d      	str	r3, [sp, #52]	; 0x34
   81256:	469b      	mov	fp, r3
   81258:	7863      	ldrb	r3, [r4, #1]
   8125a:	f104 0a01 	add.w	sl, r4, #1
   8125e:	900a      	str	r0, [sp, #40]	; 0x28
   81260:	f10a 0a01 	add.w	sl, sl, #1
   81264:	f1a3 0020 	sub.w	r0, r3, #32
   81268:	2858      	cmp	r0, #88	; 0x58
   8126a:	f200 83b6 	bhi.w	819da <_svfprintf_r+0x82e>
   8126e:	e8df f010 	tbh	[pc, r0, lsl #1]
   81272:	034b      	.short	0x034b
   81274:	03b403b4 	.word	0x03b403b4
   81278:	03b40353 	.word	0x03b40353
   8127c:	03b403b4 	.word	0x03b403b4
   81280:	03b403b4 	.word	0x03b403b4
   81284:	005903b4 	.word	0x005903b4
   81288:	03b40358 	.word	0x03b40358
   8128c:	02140066 	.word	0x02140066
   81290:	022f03b4 	.word	0x022f03b4
   81294:	03a403a4 	.word	0x03a403a4
   81298:	03a403a4 	.word	0x03a403a4
   8129c:	03a403a4 	.word	0x03a403a4
   812a0:	03a403a4 	.word	0x03a403a4
   812a4:	03b403a4 	.word	0x03b403a4
   812a8:	03b403b4 	.word	0x03b403b4
   812ac:	03b403b4 	.word	0x03b403b4
   812b0:	03b403b4 	.word	0x03b403b4
   812b4:	03b403b4 	.word	0x03b403b4
   812b8:	028b03b4 	.word	0x028b03b4
   812bc:	03b402d3 	.word	0x03b402d3
   812c0:	03b402d3 	.word	0x03b402d3
   812c4:	03b403b4 	.word	0x03b403b4
   812c8:	031a03b4 	.word	0x031a03b4
   812cc:	03b403b4 	.word	0x03b403b4
   812d0:	03b4031f 	.word	0x03b4031f
   812d4:	03b403b4 	.word	0x03b403b4
   812d8:	03b403b4 	.word	0x03b403b4
   812dc:	03b40234 	.word	0x03b40234
   812e0:	024b03b4 	.word	0x024b03b4
   812e4:	03b403b4 	.word	0x03b403b4
   812e8:	03b403b4 	.word	0x03b403b4
   812ec:	03b403b4 	.word	0x03b403b4
   812f0:	03b403b4 	.word	0x03b403b4
   812f4:	03b403b4 	.word	0x03b403b4
   812f8:	039d0276 	.word	0x039d0276
   812fc:	02d302d3 	.word	0x02d302d3
   81300:	036202d3 	.word	0x036202d3
   81304:	03b4039d 	.word	0x03b4039d
   81308:	036703b4 	.word	0x036703b4
   8130c:	037403b4 	.word	0x037403b4
   81310:	038b01dd 	.word	0x038b01dd
   81314:	03b4035d 	.word	0x03b4035d
   81318:	03b401f2 	.word	0x03b401f2
   8131c:	03b40087 	.word	0x03b40087
   81320:	033103b4 	.word	0x033103b4
   81324:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81326:	6823      	ldr	r3, [r4, #0]
   81328:	4618      	mov	r0, r3
   8132a:	930d      	str	r3, [sp, #52]	; 0x34
   8132c:	4623      	mov	r3, r4
   8132e:	2800      	cmp	r0, #0
   81330:	f103 0304 	add.w	r3, r3, #4
   81334:	930f      	str	r3, [sp, #60]	; 0x3c
   81336:	da04      	bge.n	81342 <_svfprintf_r+0x196>
   81338:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8133a:	425b      	negs	r3, r3
   8133c:	930d      	str	r3, [sp, #52]	; 0x34
   8133e:	f04b 0b04 	orr.w	fp, fp, #4
   81342:	f89a 3000 	ldrb.w	r3, [sl]
   81346:	e78b      	b.n	81260 <_svfprintf_r+0xb4>
   81348:	aa25      	add	r2, sp, #148	; 0x94
   8134a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8134c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8134e:	f003 fb6f 	bl	84a30 <__ssprint_r>
   81352:	b940      	cbnz	r0, 81366 <_svfprintf_r+0x1ba>
   81354:	46c8      	mov	r8, r9
   81356:	e76f      	b.n	81238 <_svfprintf_r+0x8c>
   81358:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8135a:	b123      	cbz	r3, 81366 <_svfprintf_r+0x1ba>
   8135c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8135e:	aa25      	add	r2, sp, #148	; 0x94
   81360:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81362:	f003 fb65 	bl	84a30 <__ssprint_r>
   81366:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   81368:	899b      	ldrh	r3, [r3, #12]
   8136a:	f013 0f40 	tst.w	r3, #64	; 0x40
   8136e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81370:	bf18      	it	ne
   81372:	f04f 33ff 	movne.w	r3, #4294967295
   81376:	9309      	str	r3, [sp, #36]	; 0x24
   81378:	9809      	ldr	r0, [sp, #36]	; 0x24
   8137a:	b043      	add	sp, #268	; 0x10c
   8137c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81380:	f01b 0f20 	tst.w	fp, #32
   81384:	9311      	str	r3, [sp, #68]	; 0x44
   81386:	f040 81af 	bne.w	816e8 <_svfprintf_r+0x53c>
   8138a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8138c:	f01b 0f10 	tst.w	fp, #16
   81390:	4613      	mov	r3, r2
   81392:	f040 8596 	bne.w	81ec2 <_svfprintf_r+0xd16>
   81396:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8139a:	f000 8592 	beq.w	81ec2 <_svfprintf_r+0xd16>
   8139e:	2500      	movs	r5, #0
   813a0:	2301      	movs	r3, #1
   813a2:	8814      	ldrh	r4, [r2, #0]
   813a4:	3204      	adds	r2, #4
   813a6:	920f      	str	r2, [sp, #60]	; 0x3c
   813a8:	2200      	movs	r2, #0
   813aa:	4617      	mov	r7, r2
   813ac:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   813b0:	990a      	ldr	r1, [sp, #40]	; 0x28
   813b2:	1c4a      	adds	r2, r1, #1
   813b4:	f000 8210 	beq.w	817d8 <_svfprintf_r+0x62c>
   813b8:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   813bc:	9207      	str	r2, [sp, #28]
   813be:	ea54 0205 	orrs.w	r2, r4, r5
   813c2:	f040 820f 	bne.w	817e4 <_svfprintf_r+0x638>
   813c6:	2900      	cmp	r1, #0
   813c8:	f040 842d 	bne.w	81c26 <_svfprintf_r+0xa7a>
   813cc:	2b00      	cmp	r3, #0
   813ce:	f040 8535 	bne.w	81e3c <_svfprintf_r+0xc90>
   813d2:	f01b 0301 	ands.w	r3, fp, #1
   813d6:	930e      	str	r3, [sp, #56]	; 0x38
   813d8:	f000 865e 	beq.w	82098 <_svfprintf_r+0xeec>
   813dc:	2330      	movs	r3, #48	; 0x30
   813de:	ae42      	add	r6, sp, #264	; 0x108
   813e0:	f806 3d41 	strb.w	r3, [r6, #-65]!
   813e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   813e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   813e8:	4293      	cmp	r3, r2
   813ea:	bfb8      	it	lt
   813ec:	4613      	movlt	r3, r2
   813ee:	9308      	str	r3, [sp, #32]
   813f0:	2300      	movs	r3, #0
   813f2:	9312      	str	r3, [sp, #72]	; 0x48
   813f4:	b117      	cbz	r7, 813fc <_svfprintf_r+0x250>
   813f6:	9b08      	ldr	r3, [sp, #32]
   813f8:	3301      	adds	r3, #1
   813fa:	9308      	str	r3, [sp, #32]
   813fc:	9b07      	ldr	r3, [sp, #28]
   813fe:	f013 0302 	ands.w	r3, r3, #2
   81402:	9310      	str	r3, [sp, #64]	; 0x40
   81404:	d002      	beq.n	8140c <_svfprintf_r+0x260>
   81406:	9b08      	ldr	r3, [sp, #32]
   81408:	3302      	adds	r3, #2
   8140a:	9308      	str	r3, [sp, #32]
   8140c:	9b07      	ldr	r3, [sp, #28]
   8140e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   81412:	f040 830e 	bne.w	81a32 <_svfprintf_r+0x886>
   81416:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81418:	9a08      	ldr	r2, [sp, #32]
   8141a:	eba3 0b02 	sub.w	fp, r3, r2
   8141e:	f1bb 0f00 	cmp.w	fp, #0
   81422:	f340 8306 	ble.w	81a32 <_svfprintf_r+0x886>
   81426:	f1bb 0f10 	cmp.w	fp, #16
   8142a:	f340 87ae 	ble.w	8238a <_svfprintf_r+0x11de>
   8142e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81430:	4643      	mov	r3, r8
   81432:	4621      	mov	r1, r4
   81434:	46a8      	mov	r8, r5
   81436:	2710      	movs	r7, #16
   81438:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8143a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8143c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8143e:	e006      	b.n	8144e <_svfprintf_r+0x2a2>
   81440:	f1ab 0b10 	sub.w	fp, fp, #16
   81444:	f1bb 0f10 	cmp.w	fp, #16
   81448:	f103 0308 	add.w	r3, r3, #8
   8144c:	dd18      	ble.n	81480 <_svfprintf_r+0x2d4>
   8144e:	3201      	adds	r2, #1
   81450:	48ab      	ldr	r0, [pc, #684]	; (81700 <_svfprintf_r+0x554>)
   81452:	3110      	adds	r1, #16
   81454:	2a07      	cmp	r2, #7
   81456:	9127      	str	r1, [sp, #156]	; 0x9c
   81458:	9226      	str	r2, [sp, #152]	; 0x98
   8145a:	e883 0081 	stmia.w	r3, {r0, r7}
   8145e:	ddef      	ble.n	81440 <_svfprintf_r+0x294>
   81460:	aa25      	add	r2, sp, #148	; 0x94
   81462:	4629      	mov	r1, r5
   81464:	4620      	mov	r0, r4
   81466:	f003 fae3 	bl	84a30 <__ssprint_r>
   8146a:	2800      	cmp	r0, #0
   8146c:	f47f af7b 	bne.w	81366 <_svfprintf_r+0x1ba>
   81470:	f1ab 0b10 	sub.w	fp, fp, #16
   81474:	f1bb 0f10 	cmp.w	fp, #16
   81478:	464b      	mov	r3, r9
   8147a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   8147c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8147e:	dce6      	bgt.n	8144e <_svfprintf_r+0x2a2>
   81480:	4645      	mov	r5, r8
   81482:	460c      	mov	r4, r1
   81484:	4698      	mov	r8, r3
   81486:	3201      	adds	r2, #1
   81488:	4b9d      	ldr	r3, [pc, #628]	; (81700 <_svfprintf_r+0x554>)
   8148a:	445c      	add	r4, fp
   8148c:	2a07      	cmp	r2, #7
   8148e:	9427      	str	r4, [sp, #156]	; 0x9c
   81490:	9226      	str	r2, [sp, #152]	; 0x98
   81492:	e888 0808 	stmia.w	r8, {r3, fp}
   81496:	f300 82c1 	bgt.w	81a1c <_svfprintf_r+0x870>
   8149a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   8149e:	f108 0808 	add.w	r8, r8, #8
   814a2:	b187      	cbz	r7, 814c6 <_svfprintf_r+0x31a>
   814a4:	2101      	movs	r1, #1
   814a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   814a8:	440c      	add	r4, r1
   814aa:	440b      	add	r3, r1
   814ac:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   814b0:	2b07      	cmp	r3, #7
   814b2:	9427      	str	r4, [sp, #156]	; 0x9c
   814b4:	9326      	str	r3, [sp, #152]	; 0x98
   814b6:	f8c8 1004 	str.w	r1, [r8, #4]
   814ba:	f8c8 2000 	str.w	r2, [r8]
   814be:	f300 83c9 	bgt.w	81c54 <_svfprintf_r+0xaa8>
   814c2:	f108 0808 	add.w	r8, r8, #8
   814c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   814c8:	b17b      	cbz	r3, 814ea <_svfprintf_r+0x33e>
   814ca:	2102      	movs	r1, #2
   814cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   814ce:	440c      	add	r4, r1
   814d0:	3301      	adds	r3, #1
   814d2:	aa1e      	add	r2, sp, #120	; 0x78
   814d4:	2b07      	cmp	r3, #7
   814d6:	9427      	str	r4, [sp, #156]	; 0x9c
   814d8:	9326      	str	r3, [sp, #152]	; 0x98
   814da:	f8c8 1004 	str.w	r1, [r8, #4]
   814de:	f8c8 2000 	str.w	r2, [r8]
   814e2:	f300 840d 	bgt.w	81d00 <_svfprintf_r+0xb54>
   814e6:	f108 0808 	add.w	r8, r8, #8
   814ea:	2d80      	cmp	r5, #128	; 0x80
   814ec:	f000 8301 	beq.w	81af2 <_svfprintf_r+0x946>
   814f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   814f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   814f4:	1a9f      	subs	r7, r3, r2
   814f6:	2f00      	cmp	r7, #0
   814f8:	dd37      	ble.n	8156a <_svfprintf_r+0x3be>
   814fa:	2f10      	cmp	r7, #16
   814fc:	f340 8675 	ble.w	821ea <_svfprintf_r+0x103e>
   81500:	4d80      	ldr	r5, [pc, #512]	; (81704 <_svfprintf_r+0x558>)
   81502:	4642      	mov	r2, r8
   81504:	4621      	mov	r1, r4
   81506:	46b0      	mov	r8, r6
   81508:	f04f 0b10 	mov.w	fp, #16
   8150c:	462e      	mov	r6, r5
   8150e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81510:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81512:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81514:	e004      	b.n	81520 <_svfprintf_r+0x374>
   81516:	3f10      	subs	r7, #16
   81518:	2f10      	cmp	r7, #16
   8151a:	f102 0208 	add.w	r2, r2, #8
   8151e:	dd15      	ble.n	8154c <_svfprintf_r+0x3a0>
   81520:	3301      	adds	r3, #1
   81522:	3110      	adds	r1, #16
   81524:	2b07      	cmp	r3, #7
   81526:	9127      	str	r1, [sp, #156]	; 0x9c
   81528:	9326      	str	r3, [sp, #152]	; 0x98
   8152a:	e882 0840 	stmia.w	r2, {r6, fp}
   8152e:	ddf2      	ble.n	81516 <_svfprintf_r+0x36a>
   81530:	aa25      	add	r2, sp, #148	; 0x94
   81532:	4629      	mov	r1, r5
   81534:	4620      	mov	r0, r4
   81536:	f003 fa7b 	bl	84a30 <__ssprint_r>
   8153a:	2800      	cmp	r0, #0
   8153c:	f47f af13 	bne.w	81366 <_svfprintf_r+0x1ba>
   81540:	3f10      	subs	r7, #16
   81542:	2f10      	cmp	r7, #16
   81544:	464a      	mov	r2, r9
   81546:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81548:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8154a:	dce9      	bgt.n	81520 <_svfprintf_r+0x374>
   8154c:	4635      	mov	r5, r6
   8154e:	460c      	mov	r4, r1
   81550:	4646      	mov	r6, r8
   81552:	4690      	mov	r8, r2
   81554:	3301      	adds	r3, #1
   81556:	443c      	add	r4, r7
   81558:	2b07      	cmp	r3, #7
   8155a:	9427      	str	r4, [sp, #156]	; 0x9c
   8155c:	9326      	str	r3, [sp, #152]	; 0x98
   8155e:	e888 00a0 	stmia.w	r8, {r5, r7}
   81562:	f300 836c 	bgt.w	81c3e <_svfprintf_r+0xa92>
   81566:	f108 0808 	add.w	r8, r8, #8
   8156a:	9b07      	ldr	r3, [sp, #28]
   8156c:	05df      	lsls	r7, r3, #23
   8156e:	f100 8262 	bmi.w	81a36 <_svfprintf_r+0x88a>
   81572:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81574:	990e      	ldr	r1, [sp, #56]	; 0x38
   81576:	3301      	adds	r3, #1
   81578:	440c      	add	r4, r1
   8157a:	2b07      	cmp	r3, #7
   8157c:	9427      	str	r4, [sp, #156]	; 0x9c
   8157e:	f8c8 6000 	str.w	r6, [r8]
   81582:	f8c8 1004 	str.w	r1, [r8, #4]
   81586:	9326      	str	r3, [sp, #152]	; 0x98
   81588:	f300 83af 	bgt.w	81cea <_svfprintf_r+0xb3e>
   8158c:	f108 0808 	add.w	r8, r8, #8
   81590:	9b07      	ldr	r3, [sp, #28]
   81592:	075b      	lsls	r3, r3, #29
   81594:	d53b      	bpl.n	8160e <_svfprintf_r+0x462>
   81596:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81598:	9a08      	ldr	r2, [sp, #32]
   8159a:	1a9d      	subs	r5, r3, r2
   8159c:	2d00      	cmp	r5, #0
   8159e:	dd36      	ble.n	8160e <_svfprintf_r+0x462>
   815a0:	2d10      	cmp	r5, #16
   815a2:	f340 871d 	ble.w	823e0 <_svfprintf_r+0x1234>
   815a6:	2610      	movs	r6, #16
   815a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   815aa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   815ac:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   815b0:	e004      	b.n	815bc <_svfprintf_r+0x410>
   815b2:	3d10      	subs	r5, #16
   815b4:	2d10      	cmp	r5, #16
   815b6:	f108 0808 	add.w	r8, r8, #8
   815ba:	dd16      	ble.n	815ea <_svfprintf_r+0x43e>
   815bc:	3301      	adds	r3, #1
   815be:	4a50      	ldr	r2, [pc, #320]	; (81700 <_svfprintf_r+0x554>)
   815c0:	3410      	adds	r4, #16
   815c2:	2b07      	cmp	r3, #7
   815c4:	9427      	str	r4, [sp, #156]	; 0x9c
   815c6:	9326      	str	r3, [sp, #152]	; 0x98
   815c8:	e888 0044 	stmia.w	r8, {r2, r6}
   815cc:	ddf1      	ble.n	815b2 <_svfprintf_r+0x406>
   815ce:	aa25      	add	r2, sp, #148	; 0x94
   815d0:	4659      	mov	r1, fp
   815d2:	4638      	mov	r0, r7
   815d4:	f003 fa2c 	bl	84a30 <__ssprint_r>
   815d8:	2800      	cmp	r0, #0
   815da:	f47f aec4 	bne.w	81366 <_svfprintf_r+0x1ba>
   815de:	3d10      	subs	r5, #16
   815e0:	2d10      	cmp	r5, #16
   815e2:	46c8      	mov	r8, r9
   815e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   815e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   815e8:	dce8      	bgt.n	815bc <_svfprintf_r+0x410>
   815ea:	3301      	adds	r3, #1
   815ec:	4a44      	ldr	r2, [pc, #272]	; (81700 <_svfprintf_r+0x554>)
   815ee:	442c      	add	r4, r5
   815f0:	2b07      	cmp	r3, #7
   815f2:	9427      	str	r4, [sp, #156]	; 0x9c
   815f4:	9326      	str	r3, [sp, #152]	; 0x98
   815f6:	e888 0024 	stmia.w	r8, {r2, r5}
   815fa:	dd08      	ble.n	8160e <_svfprintf_r+0x462>
   815fc:	aa25      	add	r2, sp, #148	; 0x94
   815fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81600:	980c      	ldr	r0, [sp, #48]	; 0x30
   81602:	f003 fa15 	bl	84a30 <__ssprint_r>
   81606:	2800      	cmp	r0, #0
   81608:	f47f aead 	bne.w	81366 <_svfprintf_r+0x1ba>
   8160c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8160e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81610:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   81612:	9908      	ldr	r1, [sp, #32]
   81614:	428a      	cmp	r2, r1
   81616:	bfac      	ite	ge
   81618:	189b      	addge	r3, r3, r2
   8161a:	185b      	addlt	r3, r3, r1
   8161c:	9309      	str	r3, [sp, #36]	; 0x24
   8161e:	2c00      	cmp	r4, #0
   81620:	f040 82f7 	bne.w	81c12 <_svfprintf_r+0xa66>
   81624:	2300      	movs	r3, #0
   81626:	46c8      	mov	r8, r9
   81628:	9326      	str	r3, [sp, #152]	; 0x98
   8162a:	e5e6      	b.n	811fa <_svfprintf_r+0x4e>
   8162c:	9311      	str	r3, [sp, #68]	; 0x44
   8162e:	f01b 0320 	ands.w	r3, fp, #32
   81632:	f040 8144 	bne.w	818be <_svfprintf_r+0x712>
   81636:	f01b 0210 	ands.w	r2, fp, #16
   8163a:	f040 8462 	bne.w	81f02 <_svfprintf_r+0xd56>
   8163e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   81642:	f000 845e 	beq.w	81f02 <_svfprintf_r+0xd56>
   81646:	990f      	ldr	r1, [sp, #60]	; 0x3c
   81648:	4613      	mov	r3, r2
   8164a:	460a      	mov	r2, r1
   8164c:	3204      	adds	r2, #4
   8164e:	880c      	ldrh	r4, [r1, #0]
   81650:	2500      	movs	r5, #0
   81652:	920f      	str	r2, [sp, #60]	; 0x3c
   81654:	e6a8      	b.n	813a8 <_svfprintf_r+0x1fc>
   81656:	2500      	movs	r5, #0
   81658:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8165a:	9311      	str	r3, [sp, #68]	; 0x44
   8165c:	6816      	ldr	r6, [r2, #0]
   8165e:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81662:	1d14      	adds	r4, r2, #4
   81664:	2e00      	cmp	r6, #0
   81666:	f000 86c9 	beq.w	823fc <_svfprintf_r+0x1250>
   8166a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8166c:	1c53      	adds	r3, r2, #1
   8166e:	f000 8617 	beq.w	822a0 <_svfprintf_r+0x10f4>
   81672:	4629      	mov	r1, r5
   81674:	4630      	mov	r0, r6
   81676:	f002 fbf3 	bl	83e60 <memchr>
   8167a:	2800      	cmp	r0, #0
   8167c:	f000 8709 	beq.w	82492 <_svfprintf_r+0x12e6>
   81680:	1b83      	subs	r3, r0, r6
   81682:	950a      	str	r5, [sp, #40]	; 0x28
   81684:	930e      	str	r3, [sp, #56]	; 0x38
   81686:	940f      	str	r4, [sp, #60]	; 0x3c
   81688:	f8cd b01c 	str.w	fp, [sp, #28]
   8168c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   81690:	9308      	str	r3, [sp, #32]
   81692:	9512      	str	r5, [sp, #72]	; 0x48
   81694:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81698:	e6ac      	b.n	813f4 <_svfprintf_r+0x248>
   8169a:	f89a 3000 	ldrb.w	r3, [sl]
   8169e:	f10a 0401 	add.w	r4, sl, #1
   816a2:	2b2a      	cmp	r3, #42	; 0x2a
   816a4:	f000 87bd 	beq.w	82622 <_svfprintf_r+0x1476>
   816a8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   816ac:	2809      	cmp	r0, #9
   816ae:	46a2      	mov	sl, r4
   816b0:	f200 8714 	bhi.w	824dc <_svfprintf_r+0x1330>
   816b4:	2300      	movs	r3, #0
   816b6:	461c      	mov	r4, r3
   816b8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   816bc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   816c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   816c4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   816c8:	2809      	cmp	r0, #9
   816ca:	d9f5      	bls.n	816b8 <_svfprintf_r+0x50c>
   816cc:	940a      	str	r4, [sp, #40]	; 0x28
   816ce:	e5c9      	b.n	81264 <_svfprintf_r+0xb8>
   816d0:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   816d4:	f89a 3000 	ldrb.w	r3, [sl]
   816d8:	e5c2      	b.n	81260 <_svfprintf_r+0xb4>
   816da:	f04b 0b10 	orr.w	fp, fp, #16
   816de:	f01b 0f20 	tst.w	fp, #32
   816e2:	9311      	str	r3, [sp, #68]	; 0x44
   816e4:	f43f ae51 	beq.w	8138a <_svfprintf_r+0x1de>
   816e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   816ea:	3407      	adds	r4, #7
   816ec:	f024 0307 	bic.w	r3, r4, #7
   816f0:	f103 0208 	add.w	r2, r3, #8
   816f4:	e9d3 4500 	ldrd	r4, r5, [r3]
   816f8:	920f      	str	r2, [sp, #60]	; 0x3c
   816fa:	2301      	movs	r3, #1
   816fc:	e654      	b.n	813a8 <_svfprintf_r+0x1fc>
   816fe:	bf00      	nop
   81700:	000858f8 	.word	0x000858f8
   81704:	00085908 	.word	0x00085908
   81708:	9311      	str	r3, [sp, #68]	; 0x44
   8170a:	2a00      	cmp	r2, #0
   8170c:	f040 87a8 	bne.w	82660 <_svfprintf_r+0x14b4>
   81710:	4bbd      	ldr	r3, [pc, #756]	; (81a08 <_svfprintf_r+0x85c>)
   81712:	f01b 0f20 	tst.w	fp, #32
   81716:	9318      	str	r3, [sp, #96]	; 0x60
   81718:	f040 80e6 	bne.w	818e8 <_svfprintf_r+0x73c>
   8171c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8171e:	f01b 0f10 	tst.w	fp, #16
   81722:	4613      	mov	r3, r2
   81724:	f040 83d4 	bne.w	81ed0 <_svfprintf_r+0xd24>
   81728:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8172c:	f000 83d0 	beq.w	81ed0 <_svfprintf_r+0xd24>
   81730:	2500      	movs	r5, #0
   81732:	3304      	adds	r3, #4
   81734:	8814      	ldrh	r4, [r2, #0]
   81736:	930f      	str	r3, [sp, #60]	; 0x3c
   81738:	f01b 0f01 	tst.w	fp, #1
   8173c:	f000 80e2 	beq.w	81904 <_svfprintf_r+0x758>
   81740:	ea54 0305 	orrs.w	r3, r4, r5
   81744:	f000 80de 	beq.w	81904 <_svfprintf_r+0x758>
   81748:	2330      	movs	r3, #48	; 0x30
   8174a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   8174e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81752:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   81756:	f04b 0b02 	orr.w	fp, fp, #2
   8175a:	2302      	movs	r3, #2
   8175c:	e624      	b.n	813a8 <_svfprintf_r+0x1fc>
   8175e:	2201      	movs	r2, #1
   81760:	9311      	str	r3, [sp, #68]	; 0x44
   81762:	2300      	movs	r3, #0
   81764:	4611      	mov	r1, r2
   81766:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81768:	9208      	str	r2, [sp, #32]
   8176a:	6802      	ldr	r2, [r0, #0]
   8176c:	461f      	mov	r7, r3
   8176e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81772:	930a      	str	r3, [sp, #40]	; 0x28
   81774:	9312      	str	r3, [sp, #72]	; 0x48
   81776:	1d03      	adds	r3, r0, #4
   81778:	f8cd b01c 	str.w	fp, [sp, #28]
   8177c:	910e      	str	r1, [sp, #56]	; 0x38
   8177e:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   81782:	930f      	str	r3, [sp, #60]	; 0x3c
   81784:	ae28      	add	r6, sp, #160	; 0xa0
   81786:	e639      	b.n	813fc <_svfprintf_r+0x250>
   81788:	9311      	str	r3, [sp, #68]	; 0x44
   8178a:	2a00      	cmp	r2, #0
   8178c:	f040 877f 	bne.w	8268e <_svfprintf_r+0x14e2>
   81790:	f04b 0b10 	orr.w	fp, fp, #16
   81794:	f01b 0f20 	tst.w	fp, #32
   81798:	f040 8471 	bne.w	8207e <_svfprintf_r+0xed2>
   8179c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8179e:	f01b 0f10 	tst.w	fp, #16
   817a2:	4613      	mov	r3, r2
   817a4:	f040 8399 	bne.w	81eda <_svfprintf_r+0xd2e>
   817a8:	f01b 0f40 	tst.w	fp, #64	; 0x40
   817ac:	f000 8395 	beq.w	81eda <_svfprintf_r+0xd2e>
   817b0:	f9b2 4000 	ldrsh.w	r4, [r2]
   817b4:	3304      	adds	r3, #4
   817b6:	17e5      	asrs	r5, r4, #31
   817b8:	930f      	str	r3, [sp, #60]	; 0x3c
   817ba:	4622      	mov	r2, r4
   817bc:	462b      	mov	r3, r5
   817be:	2a00      	cmp	r2, #0
   817c0:	f173 0300 	sbcs.w	r3, r3, #0
   817c4:	f2c0 8394 	blt.w	81ef0 <_svfprintf_r+0xd44>
   817c8:	990a      	ldr	r1, [sp, #40]	; 0x28
   817ca:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   817ce:	1c4a      	adds	r2, r1, #1
   817d0:	f04f 0301 	mov.w	r3, #1
   817d4:	f47f adf0 	bne.w	813b8 <_svfprintf_r+0x20c>
   817d8:	ea54 0205 	orrs.w	r2, r4, r5
   817dc:	f000 8225 	beq.w	81c2a <_svfprintf_r+0xa7e>
   817e0:	f8cd b01c 	str.w	fp, [sp, #28]
   817e4:	2b01      	cmp	r3, #1
   817e6:	f000 830a 	beq.w	81dfe <_svfprintf_r+0xc52>
   817ea:	2b02      	cmp	r3, #2
   817ec:	f040 8298 	bne.w	81d20 <_svfprintf_r+0xb74>
   817f0:	464e      	mov	r6, r9
   817f2:	9818      	ldr	r0, [sp, #96]	; 0x60
   817f4:	0923      	lsrs	r3, r4, #4
   817f6:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   817fa:	0929      	lsrs	r1, r5, #4
   817fc:	f004 020f 	and.w	r2, r4, #15
   81800:	460d      	mov	r5, r1
   81802:	461c      	mov	r4, r3
   81804:	5c83      	ldrb	r3, [r0, r2]
   81806:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8180a:	ea54 0305 	orrs.w	r3, r4, r5
   8180e:	d1f1      	bne.n	817f4 <_svfprintf_r+0x648>
   81810:	eba9 0306 	sub.w	r3, r9, r6
   81814:	930e      	str	r3, [sp, #56]	; 0x38
   81816:	e5e5      	b.n	813e4 <_svfprintf_r+0x238>
   81818:	9311      	str	r3, [sp, #68]	; 0x44
   8181a:	2a00      	cmp	r2, #0
   8181c:	f040 8733 	bne.w	82686 <_svfprintf_r+0x14da>
   81820:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81822:	f01b 0f08 	tst.w	fp, #8
   81826:	f104 0407 	add.w	r4, r4, #7
   8182a:	f000 84cb 	beq.w	821c4 <_svfprintf_r+0x1018>
   8182e:	f024 0307 	bic.w	r3, r4, #7
   81832:	f103 0208 	add.w	r2, r3, #8
   81836:	920f      	str	r2, [sp, #60]	; 0x3c
   81838:	681a      	ldr	r2, [r3, #0]
   8183a:	685b      	ldr	r3, [r3, #4]
   8183c:	9214      	str	r2, [sp, #80]	; 0x50
   8183e:	9315      	str	r3, [sp, #84]	; 0x54
   81840:	9b15      	ldr	r3, [sp, #84]	; 0x54
   81842:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81844:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   81848:	4628      	mov	r0, r5
   8184a:	4621      	mov	r1, r4
   8184c:	f04f 32ff 	mov.w	r2, #4294967295
   81850:	4b6e      	ldr	r3, [pc, #440]	; (81a0c <_svfprintf_r+0x860>)
   81852:	f003 fe4f 	bl	854f4 <__aeabi_dcmpun>
   81856:	2800      	cmp	r0, #0
   81858:	f040 8430 	bne.w	820bc <_svfprintf_r+0xf10>
   8185c:	4628      	mov	r0, r5
   8185e:	4621      	mov	r1, r4
   81860:	f04f 32ff 	mov.w	r2, #4294967295
   81864:	4b69      	ldr	r3, [pc, #420]	; (81a0c <_svfprintf_r+0x860>)
   81866:	f003 fe27 	bl	854b8 <__aeabi_dcmple>
   8186a:	2800      	cmp	r0, #0
   8186c:	f040 8426 	bne.w	820bc <_svfprintf_r+0xf10>
   81870:	a814      	add	r0, sp, #80	; 0x50
   81872:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81874:	f003 fe16 	bl	854a4 <__aeabi_dcmplt>
   81878:	2800      	cmp	r0, #0
   8187a:	f040 85d1 	bne.w	82420 <_svfprintf_r+0x1274>
   8187e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81882:	2303      	movs	r3, #3
   81884:	461a      	mov	r2, r3
   81886:	9308      	str	r3, [sp, #32]
   81888:	2300      	movs	r3, #0
   8188a:	4619      	mov	r1, r3
   8188c:	930a      	str	r3, [sp, #40]	; 0x28
   8188e:	4e60      	ldr	r6, [pc, #384]	; (81a10 <_svfprintf_r+0x864>)
   81890:	4b60      	ldr	r3, [pc, #384]	; (81a14 <_svfprintf_r+0x868>)
   81892:	920e      	str	r2, [sp, #56]	; 0x38
   81894:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81896:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   8189a:	9007      	str	r0, [sp, #28]
   8189c:	9112      	str	r1, [sp, #72]	; 0x48
   8189e:	2a47      	cmp	r2, #71	; 0x47
   818a0:	bfd8      	it	le
   818a2:	461e      	movle	r6, r3
   818a4:	e5a6      	b.n	813f4 <_svfprintf_r+0x248>
   818a6:	f04b 0b08 	orr.w	fp, fp, #8
   818aa:	f89a 3000 	ldrb.w	r3, [sl]
   818ae:	e4d7      	b.n	81260 <_svfprintf_r+0xb4>
   818b0:	f04b 0b10 	orr.w	fp, fp, #16
   818b4:	9311      	str	r3, [sp, #68]	; 0x44
   818b6:	f01b 0320 	ands.w	r3, fp, #32
   818ba:	f43f aebc 	beq.w	81636 <_svfprintf_r+0x48a>
   818be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   818c0:	3407      	adds	r4, #7
   818c2:	f024 0307 	bic.w	r3, r4, #7
   818c6:	f103 0208 	add.w	r2, r3, #8
   818ca:	e9d3 4500 	ldrd	r4, r5, [r3]
   818ce:	920f      	str	r2, [sp, #60]	; 0x3c
   818d0:	2300      	movs	r3, #0
   818d2:	e569      	b.n	813a8 <_svfprintf_r+0x1fc>
   818d4:	9311      	str	r3, [sp, #68]	; 0x44
   818d6:	2a00      	cmp	r2, #0
   818d8:	f040 86be 	bne.w	82658 <_svfprintf_r+0x14ac>
   818dc:	4b4e      	ldr	r3, [pc, #312]	; (81a18 <_svfprintf_r+0x86c>)
   818de:	f01b 0f20 	tst.w	fp, #32
   818e2:	9318      	str	r3, [sp, #96]	; 0x60
   818e4:	f43f af1a 	beq.w	8171c <_svfprintf_r+0x570>
   818e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   818ea:	f01b 0f01 	tst.w	fp, #1
   818ee:	f104 0407 	add.w	r4, r4, #7
   818f2:	f024 0307 	bic.w	r3, r4, #7
   818f6:	f103 0208 	add.w	r2, r3, #8
   818fa:	920f      	str	r2, [sp, #60]	; 0x3c
   818fc:	e9d3 4500 	ldrd	r4, r5, [r3]
   81900:	f47f af1e 	bne.w	81740 <_svfprintf_r+0x594>
   81904:	2302      	movs	r3, #2
   81906:	e54f      	b.n	813a8 <_svfprintf_r+0x1fc>
   81908:	f89a 3000 	ldrb.w	r3, [sl]
   8190c:	2900      	cmp	r1, #0
   8190e:	f47f aca7 	bne.w	81260 <_svfprintf_r+0xb4>
   81912:	2201      	movs	r2, #1
   81914:	2120      	movs	r1, #32
   81916:	e4a3      	b.n	81260 <_svfprintf_r+0xb4>
   81918:	f04b 0b01 	orr.w	fp, fp, #1
   8191c:	f89a 3000 	ldrb.w	r3, [sl]
   81920:	e49e      	b.n	81260 <_svfprintf_r+0xb4>
   81922:	f89a 3000 	ldrb.w	r3, [sl]
   81926:	2201      	movs	r2, #1
   81928:	212b      	movs	r1, #43	; 0x2b
   8192a:	e499      	b.n	81260 <_svfprintf_r+0xb4>
   8192c:	f04b 0b20 	orr.w	fp, fp, #32
   81930:	f89a 3000 	ldrb.w	r3, [sl]
   81934:	e494      	b.n	81260 <_svfprintf_r+0xb4>
   81936:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   8193a:	f89a 3000 	ldrb.w	r3, [sl]
   8193e:	e48f      	b.n	81260 <_svfprintf_r+0xb4>
   81940:	f89a 3000 	ldrb.w	r3, [sl]
   81944:	2b6c      	cmp	r3, #108	; 0x6c
   81946:	bf03      	ittte	eq
   81948:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   8194c:	f04b 0b20 	orreq.w	fp, fp, #32
   81950:	f10a 0a01 	addeq.w	sl, sl, #1
   81954:	f04b 0b10 	orrne.w	fp, fp, #16
   81958:	e482      	b.n	81260 <_svfprintf_r+0xb4>
   8195a:	2a00      	cmp	r2, #0
   8195c:	f040 8678 	bne.w	82650 <_svfprintf_r+0x14a4>
   81960:	f01b 0f20 	tst.w	fp, #32
   81964:	f040 844f 	bne.w	82206 <_svfprintf_r+0x105a>
   81968:	f01b 0f10 	tst.w	fp, #16
   8196c:	f040 8435 	bne.w	821da <_svfprintf_r+0x102e>
   81970:	f01b 0f40 	tst.w	fp, #64	; 0x40
   81974:	f000 8431 	beq.w	821da <_svfprintf_r+0x102e>
   81978:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8197a:	6813      	ldr	r3, [r2, #0]
   8197c:	3204      	adds	r2, #4
   8197e:	920f      	str	r2, [sp, #60]	; 0x3c
   81980:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   81984:	801a      	strh	r2, [r3, #0]
   81986:	e438      	b.n	811fa <_svfprintf_r+0x4e>
   81988:	2378      	movs	r3, #120	; 0x78
   8198a:	2230      	movs	r2, #48	; 0x30
   8198c:	980f      	ldr	r0, [sp, #60]	; 0x3c
   8198e:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   81992:	9311      	str	r3, [sp, #68]	; 0x44
   81994:	1d03      	adds	r3, r0, #4
   81996:	930f      	str	r3, [sp, #60]	; 0x3c
   81998:	4b1f      	ldr	r3, [pc, #124]	; (81a18 <_svfprintf_r+0x86c>)
   8199a:	6804      	ldr	r4, [r0, #0]
   8199c:	9318      	str	r3, [sp, #96]	; 0x60
   8199e:	f04b 0b02 	orr.w	fp, fp, #2
   819a2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   819a6:	2500      	movs	r5, #0
   819a8:	2302      	movs	r3, #2
   819aa:	e4fd      	b.n	813a8 <_svfprintf_r+0x1fc>
   819ac:	9311      	str	r3, [sp, #68]	; 0x44
   819ae:	2a00      	cmp	r2, #0
   819b0:	f43f aef0 	beq.w	81794 <_svfprintf_r+0x5e8>
   819b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   819b8:	e6ec      	b.n	81794 <_svfprintf_r+0x5e8>
   819ba:	2000      	movs	r0, #0
   819bc:	4604      	mov	r4, r0
   819be:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   819c2:	f81a 3b01 	ldrb.w	r3, [sl], #1
   819c6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   819ca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   819ce:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   819d2:	2809      	cmp	r0, #9
   819d4:	d9f5      	bls.n	819c2 <_svfprintf_r+0x816>
   819d6:	940d      	str	r4, [sp, #52]	; 0x34
   819d8:	e444      	b.n	81264 <_svfprintf_r+0xb8>
   819da:	9311      	str	r3, [sp, #68]	; 0x44
   819dc:	2a00      	cmp	r2, #0
   819de:	f040 8646 	bne.w	8266e <_svfprintf_r+0x14c2>
   819e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   819e4:	2a00      	cmp	r2, #0
   819e6:	f43f acb7 	beq.w	81358 <_svfprintf_r+0x1ac>
   819ea:	2300      	movs	r3, #0
   819ec:	2101      	movs	r1, #1
   819ee:	461f      	mov	r7, r3
   819f0:	9108      	str	r1, [sp, #32]
   819f2:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   819f6:	f8cd b01c 	str.w	fp, [sp, #28]
   819fa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   819fe:	930a      	str	r3, [sp, #40]	; 0x28
   81a00:	9312      	str	r3, [sp, #72]	; 0x48
   81a02:	910e      	str	r1, [sp, #56]	; 0x38
   81a04:	ae28      	add	r6, sp, #160	; 0xa0
   81a06:	e4f9      	b.n	813fc <_svfprintf_r+0x250>
   81a08:	000858c4 	.word	0x000858c4
   81a0c:	7fefffff 	.word	0x7fefffff
   81a10:	000858b8 	.word	0x000858b8
   81a14:	000858b4 	.word	0x000858b4
   81a18:	000858d8 	.word	0x000858d8
   81a1c:	aa25      	add	r2, sp, #148	; 0x94
   81a1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81a20:	980c      	ldr	r0, [sp, #48]	; 0x30
   81a22:	f003 f805 	bl	84a30 <__ssprint_r>
   81a26:	2800      	cmp	r0, #0
   81a28:	f47f ac9d 	bne.w	81366 <_svfprintf_r+0x1ba>
   81a2c:	46c8      	mov	r8, r9
   81a2e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   81a32:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81a34:	e535      	b.n	814a2 <_svfprintf_r+0x2f6>
   81a36:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81a38:	2b65      	cmp	r3, #101	; 0x65
   81a3a:	f340 8099 	ble.w	81b70 <_svfprintf_r+0x9c4>
   81a3e:	a814      	add	r0, sp, #80	; 0x50
   81a40:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81a42:	f003 fd25 	bl	85490 <__aeabi_dcmpeq>
   81a46:	2800      	cmp	r0, #0
   81a48:	f000 8192 	beq.w	81d70 <_svfprintf_r+0xbc4>
   81a4c:	2101      	movs	r1, #1
   81a4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a50:	4ab4      	ldr	r2, [pc, #720]	; (81d24 <_svfprintf_r+0xb78>)
   81a52:	440b      	add	r3, r1
   81a54:	440c      	add	r4, r1
   81a56:	2b07      	cmp	r3, #7
   81a58:	9427      	str	r4, [sp, #156]	; 0x9c
   81a5a:	9326      	str	r3, [sp, #152]	; 0x98
   81a5c:	f8c8 1004 	str.w	r1, [r8, #4]
   81a60:	f8c8 2000 	str.w	r2, [r8]
   81a64:	f300 83c5 	bgt.w	821f2 <_svfprintf_r+0x1046>
   81a68:	f108 0808 	add.w	r8, r8, #8
   81a6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81a6e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81a70:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81a72:	4293      	cmp	r3, r2
   81a74:	db03      	blt.n	81a7e <_svfprintf_r+0x8d2>
   81a76:	9b07      	ldr	r3, [sp, #28]
   81a78:	07dd      	lsls	r5, r3, #31
   81a7a:	f57f ad89 	bpl.w	81590 <_svfprintf_r+0x3e4>
   81a7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a80:	9919      	ldr	r1, [sp, #100]	; 0x64
   81a82:	3301      	adds	r3, #1
   81a84:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   81a86:	440c      	add	r4, r1
   81a88:	2b07      	cmp	r3, #7
   81a8a:	f8c8 2000 	str.w	r2, [r8]
   81a8e:	f8c8 1004 	str.w	r1, [r8, #4]
   81a92:	9427      	str	r4, [sp, #156]	; 0x9c
   81a94:	9326      	str	r3, [sp, #152]	; 0x98
   81a96:	f300 83c3 	bgt.w	82220 <_svfprintf_r+0x1074>
   81a9a:	f108 0808 	add.w	r8, r8, #8
   81a9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81aa0:	1e5e      	subs	r6, r3, #1
   81aa2:	2e00      	cmp	r6, #0
   81aa4:	f77f ad74 	ble.w	81590 <_svfprintf_r+0x3e4>
   81aa8:	2e10      	cmp	r6, #16
   81aaa:	f340 8574 	ble.w	82596 <_svfprintf_r+0x13ea>
   81aae:	4622      	mov	r2, r4
   81ab0:	2710      	movs	r7, #16
   81ab2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ab4:	4d9c      	ldr	r5, [pc, #624]	; (81d28 <_svfprintf_r+0xb7c>)
   81ab6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   81aba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   81abc:	e005      	b.n	81aca <_svfprintf_r+0x91e>
   81abe:	f108 0808 	add.w	r8, r8, #8
   81ac2:	3e10      	subs	r6, #16
   81ac4:	2e10      	cmp	r6, #16
   81ac6:	f340 8224 	ble.w	81f12 <_svfprintf_r+0xd66>
   81aca:	3301      	adds	r3, #1
   81acc:	3210      	adds	r2, #16
   81ace:	2b07      	cmp	r3, #7
   81ad0:	9227      	str	r2, [sp, #156]	; 0x9c
   81ad2:	9326      	str	r3, [sp, #152]	; 0x98
   81ad4:	e888 00a0 	stmia.w	r8, {r5, r7}
   81ad8:	ddf1      	ble.n	81abe <_svfprintf_r+0x912>
   81ada:	aa25      	add	r2, sp, #148	; 0x94
   81adc:	4621      	mov	r1, r4
   81ade:	4658      	mov	r0, fp
   81ae0:	f002 ffa6 	bl	84a30 <__ssprint_r>
   81ae4:	2800      	cmp	r0, #0
   81ae6:	f47f ac3e 	bne.w	81366 <_svfprintf_r+0x1ba>
   81aea:	46c8      	mov	r8, r9
   81aec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81aee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81af0:	e7e7      	b.n	81ac2 <_svfprintf_r+0x916>
   81af2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   81af4:	9a08      	ldr	r2, [sp, #32]
   81af6:	1a9f      	subs	r7, r3, r2
   81af8:	2f00      	cmp	r7, #0
   81afa:	f77f acf9 	ble.w	814f0 <_svfprintf_r+0x344>
   81afe:	2f10      	cmp	r7, #16
   81b00:	f340 84a7 	ble.w	82452 <_svfprintf_r+0x12a6>
   81b04:	4d88      	ldr	r5, [pc, #544]	; (81d28 <_svfprintf_r+0xb7c>)
   81b06:	4642      	mov	r2, r8
   81b08:	4621      	mov	r1, r4
   81b0a:	46b0      	mov	r8, r6
   81b0c:	f04f 0b10 	mov.w	fp, #16
   81b10:	462e      	mov	r6, r5
   81b12:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b14:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81b16:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81b18:	e004      	b.n	81b24 <_svfprintf_r+0x978>
   81b1a:	3f10      	subs	r7, #16
   81b1c:	2f10      	cmp	r7, #16
   81b1e:	f102 0208 	add.w	r2, r2, #8
   81b22:	dd15      	ble.n	81b50 <_svfprintf_r+0x9a4>
   81b24:	3301      	adds	r3, #1
   81b26:	3110      	adds	r1, #16
   81b28:	2b07      	cmp	r3, #7
   81b2a:	9127      	str	r1, [sp, #156]	; 0x9c
   81b2c:	9326      	str	r3, [sp, #152]	; 0x98
   81b2e:	e882 0840 	stmia.w	r2, {r6, fp}
   81b32:	ddf2      	ble.n	81b1a <_svfprintf_r+0x96e>
   81b34:	aa25      	add	r2, sp, #148	; 0x94
   81b36:	4629      	mov	r1, r5
   81b38:	4620      	mov	r0, r4
   81b3a:	f002 ff79 	bl	84a30 <__ssprint_r>
   81b3e:	2800      	cmp	r0, #0
   81b40:	f47f ac11 	bne.w	81366 <_svfprintf_r+0x1ba>
   81b44:	3f10      	subs	r7, #16
   81b46:	2f10      	cmp	r7, #16
   81b48:	464a      	mov	r2, r9
   81b4a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81b4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b4e:	dce9      	bgt.n	81b24 <_svfprintf_r+0x978>
   81b50:	4635      	mov	r5, r6
   81b52:	460c      	mov	r4, r1
   81b54:	4646      	mov	r6, r8
   81b56:	4690      	mov	r8, r2
   81b58:	3301      	adds	r3, #1
   81b5a:	443c      	add	r4, r7
   81b5c:	2b07      	cmp	r3, #7
   81b5e:	9427      	str	r4, [sp, #156]	; 0x9c
   81b60:	9326      	str	r3, [sp, #152]	; 0x98
   81b62:	e888 00a0 	stmia.w	r8, {r5, r7}
   81b66:	f300 829d 	bgt.w	820a4 <_svfprintf_r+0xef8>
   81b6a:	f108 0808 	add.w	r8, r8, #8
   81b6e:	e4bf      	b.n	814f0 <_svfprintf_r+0x344>
   81b70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81b72:	2b01      	cmp	r3, #1
   81b74:	f340 824e 	ble.w	82014 <_svfprintf_r+0xe68>
   81b78:	2301      	movs	r3, #1
   81b7a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   81b7c:	441c      	add	r4, r3
   81b7e:	441f      	add	r7, r3
   81b80:	2f07      	cmp	r7, #7
   81b82:	9427      	str	r4, [sp, #156]	; 0x9c
   81b84:	f8c8 6000 	str.w	r6, [r8]
   81b88:	9726      	str	r7, [sp, #152]	; 0x98
   81b8a:	f8c8 3004 	str.w	r3, [r8, #4]
   81b8e:	f300 825e 	bgt.w	8204e <_svfprintf_r+0xea2>
   81b92:	f108 0808 	add.w	r8, r8, #8
   81b96:	9a19      	ldr	r2, [sp, #100]	; 0x64
   81b98:	3701      	adds	r7, #1
   81b9a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   81b9c:	4414      	add	r4, r2
   81b9e:	2f07      	cmp	r7, #7
   81ba0:	9427      	str	r4, [sp, #156]	; 0x9c
   81ba2:	9726      	str	r7, [sp, #152]	; 0x98
   81ba4:	f8c8 3000 	str.w	r3, [r8]
   81ba8:	f8c8 2004 	str.w	r2, [r8, #4]
   81bac:	f300 825b 	bgt.w	82066 <_svfprintf_r+0xeba>
   81bb0:	f108 0808 	add.w	r8, r8, #8
   81bb4:	a814      	add	r0, sp, #80	; 0x50
   81bb6:	c80f      	ldmia	r0, {r0, r1, r2, r3}
   81bb8:	f003 fc6a 	bl	85490 <__aeabi_dcmpeq>
   81bbc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81bbe:	2800      	cmp	r0, #0
   81bc0:	f040 8141 	bne.w	81e46 <_svfprintf_r+0xc9a>
   81bc4:	3b01      	subs	r3, #1
   81bc6:	3701      	adds	r7, #1
   81bc8:	3601      	adds	r6, #1
   81bca:	441c      	add	r4, r3
   81bcc:	2f07      	cmp	r7, #7
   81bce:	f8c8 6000 	str.w	r6, [r8]
   81bd2:	9726      	str	r7, [sp, #152]	; 0x98
   81bd4:	9427      	str	r4, [sp, #156]	; 0x9c
   81bd6:	f8c8 3004 	str.w	r3, [r8, #4]
   81bda:	f300 8166 	bgt.w	81eaa <_svfprintf_r+0xcfe>
   81bde:	f108 0808 	add.w	r8, r8, #8
   81be2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   81be4:	3701      	adds	r7, #1
   81be6:	4414      	add	r4, r2
   81be8:	ab21      	add	r3, sp, #132	; 0x84
   81bea:	2f07      	cmp	r7, #7
   81bec:	9427      	str	r4, [sp, #156]	; 0x9c
   81bee:	9726      	str	r7, [sp, #152]	; 0x98
   81bf0:	f8c8 2004 	str.w	r2, [r8, #4]
   81bf4:	f8c8 3000 	str.w	r3, [r8]
   81bf8:	f77f acc8 	ble.w	8158c <_svfprintf_r+0x3e0>
   81bfc:	aa25      	add	r2, sp, #148	; 0x94
   81bfe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81c00:	980c      	ldr	r0, [sp, #48]	; 0x30
   81c02:	f002 ff15 	bl	84a30 <__ssprint_r>
   81c06:	2800      	cmp	r0, #0
   81c08:	f47f abad 	bne.w	81366 <_svfprintf_r+0x1ba>
   81c0c:	46c8      	mov	r8, r9
   81c0e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81c10:	e4be      	b.n	81590 <_svfprintf_r+0x3e4>
   81c12:	aa25      	add	r2, sp, #148	; 0x94
   81c14:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81c16:	980c      	ldr	r0, [sp, #48]	; 0x30
   81c18:	f002 ff0a 	bl	84a30 <__ssprint_r>
   81c1c:	2800      	cmp	r0, #0
   81c1e:	f43f ad01 	beq.w	81624 <_svfprintf_r+0x478>
   81c22:	f7ff bba0 	b.w	81366 <_svfprintf_r+0x1ba>
   81c26:	f8dd b01c 	ldr.w	fp, [sp, #28]
   81c2a:	2b01      	cmp	r3, #1
   81c2c:	f000 817e 	beq.w	81f2c <_svfprintf_r+0xd80>
   81c30:	2b02      	cmp	r3, #2
   81c32:	d171      	bne.n	81d18 <_svfprintf_r+0xb6c>
   81c34:	f8cd b01c 	str.w	fp, [sp, #28]
   81c38:	2400      	movs	r4, #0
   81c3a:	2500      	movs	r5, #0
   81c3c:	e5d8      	b.n	817f0 <_svfprintf_r+0x644>
   81c3e:	aa25      	add	r2, sp, #148	; 0x94
   81c40:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81c42:	980c      	ldr	r0, [sp, #48]	; 0x30
   81c44:	f002 fef4 	bl	84a30 <__ssprint_r>
   81c48:	2800      	cmp	r0, #0
   81c4a:	f47f ab8c 	bne.w	81366 <_svfprintf_r+0x1ba>
   81c4e:	46c8      	mov	r8, r9
   81c50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81c52:	e48a      	b.n	8156a <_svfprintf_r+0x3be>
   81c54:	aa25      	add	r2, sp, #148	; 0x94
   81c56:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81c58:	980c      	ldr	r0, [sp, #48]	; 0x30
   81c5a:	f002 fee9 	bl	84a30 <__ssprint_r>
   81c5e:	2800      	cmp	r0, #0
   81c60:	f47f ab81 	bne.w	81366 <_svfprintf_r+0x1ba>
   81c64:	46c8      	mov	r8, r9
   81c66:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81c68:	e42d      	b.n	814c6 <_svfprintf_r+0x31a>
   81c6a:	2001      	movs	r0, #1
   81c6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c6e:	4a2d      	ldr	r2, [pc, #180]	; (81d24 <_svfprintf_r+0xb78>)
   81c70:	4403      	add	r3, r0
   81c72:	4404      	add	r4, r0
   81c74:	2b07      	cmp	r3, #7
   81c76:	9427      	str	r4, [sp, #156]	; 0x9c
   81c78:	9326      	str	r3, [sp, #152]	; 0x98
   81c7a:	f8c8 0004 	str.w	r0, [r8, #4]
   81c7e:	f8c8 2000 	str.w	r2, [r8]
   81c82:	f340 82d8 	ble.w	82236 <_svfprintf_r+0x108a>
   81c86:	aa25      	add	r2, sp, #148	; 0x94
   81c88:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81c8a:	980c      	ldr	r0, [sp, #48]	; 0x30
   81c8c:	f002 fed0 	bl	84a30 <__ssprint_r>
   81c90:	2800      	cmp	r0, #0
   81c92:	f47f ab68 	bne.w	81366 <_svfprintf_r+0x1ba>
   81c96:	46c8      	mov	r8, r9
   81c98:	991f      	ldr	r1, [sp, #124]	; 0x7c
   81c9a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81c9c:	b929      	cbnz	r1, 81caa <_svfprintf_r+0xafe>
   81c9e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81ca0:	b91b      	cbnz	r3, 81caa <_svfprintf_r+0xafe>
   81ca2:	9b07      	ldr	r3, [sp, #28]
   81ca4:	07d8      	lsls	r0, r3, #31
   81ca6:	f57f ac73 	bpl.w	81590 <_svfprintf_r+0x3e4>
   81caa:	9819      	ldr	r0, [sp, #100]	; 0x64
   81cac:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cae:	4602      	mov	r2, r0
   81cb0:	3301      	adds	r3, #1
   81cb2:	4422      	add	r2, r4
   81cb4:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   81cb6:	2b07      	cmp	r3, #7
   81cb8:	9227      	str	r2, [sp, #156]	; 0x9c
   81cba:	f8c8 4000 	str.w	r4, [r8]
   81cbe:	f8c8 0004 	str.w	r0, [r8, #4]
   81cc2:	9326      	str	r3, [sp, #152]	; 0x98
   81cc4:	f300 8431 	bgt.w	8252a <_svfprintf_r+0x137e>
   81cc8:	f108 0808 	add.w	r8, r8, #8
   81ccc:	2900      	cmp	r1, #0
   81cce:	f2c0 8409 	blt.w	824e4 <_svfprintf_r+0x1338>
   81cd2:	9913      	ldr	r1, [sp, #76]	; 0x4c
   81cd4:	3301      	adds	r3, #1
   81cd6:	188c      	adds	r4, r1, r2
   81cd8:	2b07      	cmp	r3, #7
   81cda:	9427      	str	r4, [sp, #156]	; 0x9c
   81cdc:	9326      	str	r3, [sp, #152]	; 0x98
   81cde:	f8c8 6000 	str.w	r6, [r8]
   81ce2:	f8c8 1004 	str.w	r1, [r8, #4]
   81ce6:	f77f ac51 	ble.w	8158c <_svfprintf_r+0x3e0>
   81cea:	aa25      	add	r2, sp, #148	; 0x94
   81cec:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81cee:	980c      	ldr	r0, [sp, #48]	; 0x30
   81cf0:	f002 fe9e 	bl	84a30 <__ssprint_r>
   81cf4:	2800      	cmp	r0, #0
   81cf6:	f47f ab36 	bne.w	81366 <_svfprintf_r+0x1ba>
   81cfa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81cfc:	46c8      	mov	r8, r9
   81cfe:	e447      	b.n	81590 <_svfprintf_r+0x3e4>
   81d00:	aa25      	add	r2, sp, #148	; 0x94
   81d02:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81d04:	980c      	ldr	r0, [sp, #48]	; 0x30
   81d06:	f002 fe93 	bl	84a30 <__ssprint_r>
   81d0a:	2800      	cmp	r0, #0
   81d0c:	f47f ab2b 	bne.w	81366 <_svfprintf_r+0x1ba>
   81d10:	46c8      	mov	r8, r9
   81d12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81d14:	f7ff bbe9 	b.w	814ea <_svfprintf_r+0x33e>
   81d18:	2400      	movs	r4, #0
   81d1a:	2500      	movs	r5, #0
   81d1c:	f8cd b01c 	str.w	fp, [sp, #28]
   81d20:	4649      	mov	r1, r9
   81d22:	e004      	b.n	81d2e <_svfprintf_r+0xb82>
   81d24:	000858f4 	.word	0x000858f4
   81d28:	00085908 	.word	0x00085908
   81d2c:	4631      	mov	r1, r6
   81d2e:	08e2      	lsrs	r2, r4, #3
   81d30:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   81d34:	08e8      	lsrs	r0, r5, #3
   81d36:	f004 0307 	and.w	r3, r4, #7
   81d3a:	4605      	mov	r5, r0
   81d3c:	4614      	mov	r4, r2
   81d3e:	3330      	adds	r3, #48	; 0x30
   81d40:	ea54 0205 	orrs.w	r2, r4, r5
   81d44:	f801 3c01 	strb.w	r3, [r1, #-1]
   81d48:	f101 36ff 	add.w	r6, r1, #4294967295
   81d4c:	d1ee      	bne.n	81d2c <_svfprintf_r+0xb80>
   81d4e:	9a07      	ldr	r2, [sp, #28]
   81d50:	07d2      	lsls	r2, r2, #31
   81d52:	f57f ad5d 	bpl.w	81810 <_svfprintf_r+0x664>
   81d56:	2b30      	cmp	r3, #48	; 0x30
   81d58:	f43f ad5a 	beq.w	81810 <_svfprintf_r+0x664>
   81d5c:	2330      	movs	r3, #48	; 0x30
   81d5e:	3902      	subs	r1, #2
   81d60:	f806 3c01 	strb.w	r3, [r6, #-1]
   81d64:	eba9 0301 	sub.w	r3, r9, r1
   81d68:	930e      	str	r3, [sp, #56]	; 0x38
   81d6a:	460e      	mov	r6, r1
   81d6c:	f7ff bb3a 	b.w	813e4 <_svfprintf_r+0x238>
   81d70:	991f      	ldr	r1, [sp, #124]	; 0x7c
   81d72:	2900      	cmp	r1, #0
   81d74:	f77f af79 	ble.w	81c6a <_svfprintf_r+0xabe>
   81d78:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81d7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   81d7c:	4293      	cmp	r3, r2
   81d7e:	bfa8      	it	ge
   81d80:	4613      	movge	r3, r2
   81d82:	2b00      	cmp	r3, #0
   81d84:	461f      	mov	r7, r3
   81d86:	dd0b      	ble.n	81da0 <_svfprintf_r+0xbf4>
   81d88:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d8a:	443c      	add	r4, r7
   81d8c:	3301      	adds	r3, #1
   81d8e:	2b07      	cmp	r3, #7
   81d90:	9427      	str	r4, [sp, #156]	; 0x9c
   81d92:	e888 00c0 	stmia.w	r8, {r6, r7}
   81d96:	9326      	str	r3, [sp, #152]	; 0x98
   81d98:	f300 82fb 	bgt.w	82392 <_svfprintf_r+0x11e6>
   81d9c:	f108 0808 	add.w	r8, r8, #8
   81da0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81da2:	2f00      	cmp	r7, #0
   81da4:	bfa8      	it	ge
   81da6:	1bdb      	subge	r3, r3, r7
   81da8:	2b00      	cmp	r3, #0
   81daa:	461f      	mov	r7, r3
   81dac:	f340 80d7 	ble.w	81f5e <_svfprintf_r+0xdb2>
   81db0:	2b10      	cmp	r3, #16
   81db2:	f340 8433 	ble.w	8261c <_svfprintf_r+0x1470>
   81db6:	4dba      	ldr	r5, [pc, #744]	; (820a0 <_svfprintf_r+0xef4>)
   81db8:	4642      	mov	r2, r8
   81dba:	4621      	mov	r1, r4
   81dbc:	46b0      	mov	r8, r6
   81dbe:	f04f 0b10 	mov.w	fp, #16
   81dc2:	462e      	mov	r6, r5
   81dc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81dc6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81dc8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   81dca:	e004      	b.n	81dd6 <_svfprintf_r+0xc2a>
   81dcc:	3208      	adds	r2, #8
   81dce:	3f10      	subs	r7, #16
   81dd0:	2f10      	cmp	r7, #16
   81dd2:	f340 80b5 	ble.w	81f40 <_svfprintf_r+0xd94>
   81dd6:	3301      	adds	r3, #1
   81dd8:	3110      	adds	r1, #16
   81dda:	2b07      	cmp	r3, #7
   81ddc:	9127      	str	r1, [sp, #156]	; 0x9c
   81dde:	9326      	str	r3, [sp, #152]	; 0x98
   81de0:	e882 0840 	stmia.w	r2, {r6, fp}
   81de4:	ddf2      	ble.n	81dcc <_svfprintf_r+0xc20>
   81de6:	aa25      	add	r2, sp, #148	; 0x94
   81de8:	4629      	mov	r1, r5
   81dea:	4620      	mov	r0, r4
   81dec:	f002 fe20 	bl	84a30 <__ssprint_r>
   81df0:	2800      	cmp	r0, #0
   81df2:	f47f aab8 	bne.w	81366 <_svfprintf_r+0x1ba>
   81df6:	464a      	mov	r2, r9
   81df8:	9927      	ldr	r1, [sp, #156]	; 0x9c
   81dfa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81dfc:	e7e7      	b.n	81dce <_svfprintf_r+0xc22>
   81dfe:	2d00      	cmp	r5, #0
   81e00:	bf08      	it	eq
   81e02:	2c0a      	cmpeq	r4, #10
   81e04:	f0c0 8090 	bcc.w	81f28 <_svfprintf_r+0xd7c>
   81e08:	464e      	mov	r6, r9
   81e0a:	4620      	mov	r0, r4
   81e0c:	4629      	mov	r1, r5
   81e0e:	220a      	movs	r2, #10
   81e10:	2300      	movs	r3, #0
   81e12:	f003 fbad 	bl	85570 <__aeabi_uldivmod>
   81e16:	3230      	adds	r2, #48	; 0x30
   81e18:	f806 2d01 	strb.w	r2, [r6, #-1]!
   81e1c:	4620      	mov	r0, r4
   81e1e:	4629      	mov	r1, r5
   81e20:	2300      	movs	r3, #0
   81e22:	220a      	movs	r2, #10
   81e24:	f003 fba4 	bl	85570 <__aeabi_uldivmod>
   81e28:	4604      	mov	r4, r0
   81e2a:	460d      	mov	r5, r1
   81e2c:	ea54 0305 	orrs.w	r3, r4, r5
   81e30:	d1eb      	bne.n	81e0a <_svfprintf_r+0xc5e>
   81e32:	eba9 0306 	sub.w	r3, r9, r6
   81e36:	930e      	str	r3, [sp, #56]	; 0x38
   81e38:	f7ff bad4 	b.w	813e4 <_svfprintf_r+0x238>
   81e3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81e3e:	464e      	mov	r6, r9
   81e40:	930e      	str	r3, [sp, #56]	; 0x38
   81e42:	f7ff bacf 	b.w	813e4 <_svfprintf_r+0x238>
   81e46:	1e5e      	subs	r6, r3, #1
   81e48:	2e00      	cmp	r6, #0
   81e4a:	f77f aeca 	ble.w	81be2 <_svfprintf_r+0xa36>
   81e4e:	2e10      	cmp	r6, #16
   81e50:	f340 83e2 	ble.w	82618 <_svfprintf_r+0x146c>
   81e54:	4622      	mov	r2, r4
   81e56:	f04f 0b10 	mov.w	fp, #16
   81e5a:	4d91      	ldr	r5, [pc, #580]	; (820a0 <_svfprintf_r+0xef4>)
   81e5c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81e5e:	e004      	b.n	81e6a <_svfprintf_r+0xcbe>
   81e60:	3e10      	subs	r6, #16
   81e62:	2e10      	cmp	r6, #16
   81e64:	f108 0808 	add.w	r8, r8, #8
   81e68:	dd15      	ble.n	81e96 <_svfprintf_r+0xcea>
   81e6a:	3701      	adds	r7, #1
   81e6c:	3210      	adds	r2, #16
   81e6e:	2f07      	cmp	r7, #7
   81e70:	9227      	str	r2, [sp, #156]	; 0x9c
   81e72:	9726      	str	r7, [sp, #152]	; 0x98
   81e74:	e888 0820 	stmia.w	r8, {r5, fp}
   81e78:	ddf2      	ble.n	81e60 <_svfprintf_r+0xcb4>
   81e7a:	aa25      	add	r2, sp, #148	; 0x94
   81e7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81e7e:	4620      	mov	r0, r4
   81e80:	f002 fdd6 	bl	84a30 <__ssprint_r>
   81e84:	2800      	cmp	r0, #0
   81e86:	f47f aa6e 	bne.w	81366 <_svfprintf_r+0x1ba>
   81e8a:	3e10      	subs	r6, #16
   81e8c:	2e10      	cmp	r6, #16
   81e8e:	46c8      	mov	r8, r9
   81e90:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81e92:	9f26      	ldr	r7, [sp, #152]	; 0x98
   81e94:	dce9      	bgt.n	81e6a <_svfprintf_r+0xcbe>
   81e96:	4614      	mov	r4, r2
   81e98:	3701      	adds	r7, #1
   81e9a:	4434      	add	r4, r6
   81e9c:	2f07      	cmp	r7, #7
   81e9e:	9427      	str	r4, [sp, #156]	; 0x9c
   81ea0:	9726      	str	r7, [sp, #152]	; 0x98
   81ea2:	e888 0060 	stmia.w	r8, {r5, r6}
   81ea6:	f77f ae9a 	ble.w	81bde <_svfprintf_r+0xa32>
   81eaa:	aa25      	add	r2, sp, #148	; 0x94
   81eac:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81eae:	980c      	ldr	r0, [sp, #48]	; 0x30
   81eb0:	f002 fdbe 	bl	84a30 <__ssprint_r>
   81eb4:	2800      	cmp	r0, #0
   81eb6:	f47f aa56 	bne.w	81366 <_svfprintf_r+0x1ba>
   81eba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   81ebc:	9f26      	ldr	r7, [sp, #152]	; 0x98
   81ebe:	46c8      	mov	r8, r9
   81ec0:	e68f      	b.n	81be2 <_svfprintf_r+0xa36>
   81ec2:	3204      	adds	r2, #4
   81ec4:	681c      	ldr	r4, [r3, #0]
   81ec6:	2500      	movs	r5, #0
   81ec8:	2301      	movs	r3, #1
   81eca:	920f      	str	r2, [sp, #60]	; 0x3c
   81ecc:	f7ff ba6c 	b.w	813a8 <_svfprintf_r+0x1fc>
   81ed0:	681c      	ldr	r4, [r3, #0]
   81ed2:	3304      	adds	r3, #4
   81ed4:	930f      	str	r3, [sp, #60]	; 0x3c
   81ed6:	2500      	movs	r5, #0
   81ed8:	e42e      	b.n	81738 <_svfprintf_r+0x58c>
   81eda:	681c      	ldr	r4, [r3, #0]
   81edc:	3304      	adds	r3, #4
   81ede:	17e5      	asrs	r5, r4, #31
   81ee0:	4622      	mov	r2, r4
   81ee2:	930f      	str	r3, [sp, #60]	; 0x3c
   81ee4:	462b      	mov	r3, r5
   81ee6:	2a00      	cmp	r2, #0
   81ee8:	f173 0300 	sbcs.w	r3, r3, #0
   81eec:	f6bf ac6c 	bge.w	817c8 <_svfprintf_r+0x61c>
   81ef0:	272d      	movs	r7, #45	; 0x2d
   81ef2:	4264      	negs	r4, r4
   81ef4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81ef8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   81efc:	2301      	movs	r3, #1
   81efe:	f7ff ba57 	b.w	813b0 <_svfprintf_r+0x204>
   81f02:	990f      	ldr	r1, [sp, #60]	; 0x3c
   81f04:	2500      	movs	r5, #0
   81f06:	460a      	mov	r2, r1
   81f08:	3204      	adds	r2, #4
   81f0a:	680c      	ldr	r4, [r1, #0]
   81f0c:	920f      	str	r2, [sp, #60]	; 0x3c
   81f0e:	f7ff ba4b 	b.w	813a8 <_svfprintf_r+0x1fc>
   81f12:	4614      	mov	r4, r2
   81f14:	3301      	adds	r3, #1
   81f16:	4434      	add	r4, r6
   81f18:	2b07      	cmp	r3, #7
   81f1a:	9427      	str	r4, [sp, #156]	; 0x9c
   81f1c:	9326      	str	r3, [sp, #152]	; 0x98
   81f1e:	e888 0060 	stmia.w	r8, {r5, r6}
   81f22:	f77f ab33 	ble.w	8158c <_svfprintf_r+0x3e0>
   81f26:	e6e0      	b.n	81cea <_svfprintf_r+0xb3e>
   81f28:	f8dd b01c 	ldr.w	fp, [sp, #28]
   81f2c:	2301      	movs	r3, #1
   81f2e:	ae42      	add	r6, sp, #264	; 0x108
   81f30:	3430      	adds	r4, #48	; 0x30
   81f32:	f8cd b01c 	str.w	fp, [sp, #28]
   81f36:	f806 4d41 	strb.w	r4, [r6, #-65]!
   81f3a:	930e      	str	r3, [sp, #56]	; 0x38
   81f3c:	f7ff ba52 	b.w	813e4 <_svfprintf_r+0x238>
   81f40:	4635      	mov	r5, r6
   81f42:	460c      	mov	r4, r1
   81f44:	4646      	mov	r6, r8
   81f46:	4690      	mov	r8, r2
   81f48:	3301      	adds	r3, #1
   81f4a:	443c      	add	r4, r7
   81f4c:	2b07      	cmp	r3, #7
   81f4e:	9427      	str	r4, [sp, #156]	; 0x9c
   81f50:	9326      	str	r3, [sp, #152]	; 0x98
   81f52:	e888 00a0 	stmia.w	r8, {r5, r7}
   81f56:	f300 8246 	bgt.w	823e6 <_svfprintf_r+0x123a>
   81f5a:	f108 0808 	add.w	r8, r8, #8
   81f5e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   81f60:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81f62:	429a      	cmp	r2, r3
   81f64:	db45      	blt.n	81ff2 <_svfprintf_r+0xe46>
   81f66:	9b07      	ldr	r3, [sp, #28]
   81f68:	07d9      	lsls	r1, r3, #31
   81f6a:	d442      	bmi.n	81ff2 <_svfprintf_r+0xe46>
   81f6c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   81f6e:	9812      	ldr	r0, [sp, #72]	; 0x48
   81f70:	1a9a      	subs	r2, r3, r2
   81f72:	1a1d      	subs	r5, r3, r0
   81f74:	4295      	cmp	r5, r2
   81f76:	bfa8      	it	ge
   81f78:	4615      	movge	r5, r2
   81f7a:	2d00      	cmp	r5, #0
   81f7c:	dd0e      	ble.n	81f9c <_svfprintf_r+0xdf0>
   81f7e:	9926      	ldr	r1, [sp, #152]	; 0x98
   81f80:	4406      	add	r6, r0
   81f82:	3101      	adds	r1, #1
   81f84:	442c      	add	r4, r5
   81f86:	2907      	cmp	r1, #7
   81f88:	f8c8 6000 	str.w	r6, [r8]
   81f8c:	9427      	str	r4, [sp, #156]	; 0x9c
   81f8e:	f8c8 5004 	str.w	r5, [r8, #4]
   81f92:	9126      	str	r1, [sp, #152]	; 0x98
   81f94:	f300 8216 	bgt.w	823c4 <_svfprintf_r+0x1218>
   81f98:	f108 0808 	add.w	r8, r8, #8
   81f9c:	2d00      	cmp	r5, #0
   81f9e:	bfb4      	ite	lt
   81fa0:	4616      	movlt	r6, r2
   81fa2:	1b56      	subge	r6, r2, r5
   81fa4:	2e00      	cmp	r6, #0
   81fa6:	f77f aaf3 	ble.w	81590 <_svfprintf_r+0x3e4>
   81faa:	2e10      	cmp	r6, #16
   81fac:	f340 82f3 	ble.w	82596 <_svfprintf_r+0x13ea>
   81fb0:	4622      	mov	r2, r4
   81fb2:	2710      	movs	r7, #16
   81fb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81fb6:	4d3a      	ldr	r5, [pc, #232]	; (820a0 <_svfprintf_r+0xef4>)
   81fb8:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   81fbc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   81fbe:	e004      	b.n	81fca <_svfprintf_r+0xe1e>
   81fc0:	f108 0808 	add.w	r8, r8, #8
   81fc4:	3e10      	subs	r6, #16
   81fc6:	2e10      	cmp	r6, #16
   81fc8:	dda3      	ble.n	81f12 <_svfprintf_r+0xd66>
   81fca:	3301      	adds	r3, #1
   81fcc:	3210      	adds	r2, #16
   81fce:	2b07      	cmp	r3, #7
   81fd0:	9227      	str	r2, [sp, #156]	; 0x9c
   81fd2:	9326      	str	r3, [sp, #152]	; 0x98
   81fd4:	e888 00a0 	stmia.w	r8, {r5, r7}
   81fd8:	ddf2      	ble.n	81fc0 <_svfprintf_r+0xe14>
   81fda:	aa25      	add	r2, sp, #148	; 0x94
   81fdc:	4621      	mov	r1, r4
   81fde:	4658      	mov	r0, fp
   81fe0:	f002 fd26 	bl	84a30 <__ssprint_r>
   81fe4:	2800      	cmp	r0, #0
   81fe6:	f47f a9be 	bne.w	81366 <_svfprintf_r+0x1ba>
   81fea:	46c8      	mov	r8, r9
   81fec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   81fee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ff0:	e7e8      	b.n	81fc4 <_svfprintf_r+0xe18>
   81ff2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ff4:	9819      	ldr	r0, [sp, #100]	; 0x64
   81ff6:	3301      	adds	r3, #1
   81ff8:	991a      	ldr	r1, [sp, #104]	; 0x68
   81ffa:	4404      	add	r4, r0
   81ffc:	2b07      	cmp	r3, #7
   81ffe:	9427      	str	r4, [sp, #156]	; 0x9c
   82000:	f8c8 1000 	str.w	r1, [r8]
   82004:	f8c8 0004 	str.w	r0, [r8, #4]
   82008:	9326      	str	r3, [sp, #152]	; 0x98
   8200a:	f300 81cf 	bgt.w	823ac <_svfprintf_r+0x1200>
   8200e:	f108 0808 	add.w	r8, r8, #8
   82012:	e7ab      	b.n	81f6c <_svfprintf_r+0xdc0>
   82014:	9b07      	ldr	r3, [sp, #28]
   82016:	07da      	lsls	r2, r3, #31
   82018:	f53f adae 	bmi.w	81b78 <_svfprintf_r+0x9cc>
   8201c:	2301      	movs	r3, #1
   8201e:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82020:	441c      	add	r4, r3
   82022:	441f      	add	r7, r3
   82024:	2f07      	cmp	r7, #7
   82026:	9427      	str	r4, [sp, #156]	; 0x9c
   82028:	f8c8 6000 	str.w	r6, [r8]
   8202c:	9726      	str	r7, [sp, #152]	; 0x98
   8202e:	f8c8 3004 	str.w	r3, [r8, #4]
   82032:	f77f add4 	ble.w	81bde <_svfprintf_r+0xa32>
   82036:	aa25      	add	r2, sp, #148	; 0x94
   82038:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8203a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8203c:	f002 fcf8 	bl	84a30 <__ssprint_r>
   82040:	2800      	cmp	r0, #0
   82042:	f47f a990 	bne.w	81366 <_svfprintf_r+0x1ba>
   82046:	46c8      	mov	r8, r9
   82048:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8204a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8204c:	e5c9      	b.n	81be2 <_svfprintf_r+0xa36>
   8204e:	aa25      	add	r2, sp, #148	; 0x94
   82050:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82052:	980c      	ldr	r0, [sp, #48]	; 0x30
   82054:	f002 fcec 	bl	84a30 <__ssprint_r>
   82058:	2800      	cmp	r0, #0
   8205a:	f47f a984 	bne.w	81366 <_svfprintf_r+0x1ba>
   8205e:	46c8      	mov	r8, r9
   82060:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82062:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82064:	e597      	b.n	81b96 <_svfprintf_r+0x9ea>
   82066:	aa25      	add	r2, sp, #148	; 0x94
   82068:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8206a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8206c:	f002 fce0 	bl	84a30 <__ssprint_r>
   82070:	2800      	cmp	r0, #0
   82072:	f47f a978 	bne.w	81366 <_svfprintf_r+0x1ba>
   82076:	46c8      	mov	r8, r9
   82078:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8207a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8207c:	e59a      	b.n	81bb4 <_svfprintf_r+0xa08>
   8207e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82080:	3407      	adds	r4, #7
   82082:	f024 0407 	bic.w	r4, r4, #7
   82086:	f104 0108 	add.w	r1, r4, #8
   8208a:	e9d4 2300 	ldrd	r2, r3, [r4]
   8208e:	910f      	str	r1, [sp, #60]	; 0x3c
   82090:	4614      	mov	r4, r2
   82092:	461d      	mov	r5, r3
   82094:	f7ff bb93 	b.w	817be <_svfprintf_r+0x612>
   82098:	464e      	mov	r6, r9
   8209a:	f7ff b9a3 	b.w	813e4 <_svfprintf_r+0x238>
   8209e:	bf00      	nop
   820a0:	00085908 	.word	0x00085908
   820a4:	aa25      	add	r2, sp, #148	; 0x94
   820a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   820a8:	980c      	ldr	r0, [sp, #48]	; 0x30
   820aa:	f002 fcc1 	bl	84a30 <__ssprint_r>
   820ae:	2800      	cmp	r0, #0
   820b0:	f47f a959 	bne.w	81366 <_svfprintf_r+0x1ba>
   820b4:	46c8      	mov	r8, r9
   820b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   820b8:	f7ff ba1a 	b.w	814f0 <_svfprintf_r+0x344>
   820bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
   820be:	4622      	mov	r2, r4
   820c0:	4620      	mov	r0, r4
   820c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
   820c4:	4623      	mov	r3, r4
   820c6:	4621      	mov	r1, r4
   820c8:	f003 fa14 	bl	854f4 <__aeabi_dcmpun>
   820cc:	2800      	cmp	r0, #0
   820ce:	f040 8273 	bne.w	825b8 <_svfprintf_r+0x140c>
   820d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   820d4:	3301      	adds	r3, #1
   820d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   820d8:	f023 0320 	bic.w	r3, r3, #32
   820dc:	930e      	str	r3, [sp, #56]	; 0x38
   820de:	f000 819c 	beq.w	8241a <_svfprintf_r+0x126e>
   820e2:	2b47      	cmp	r3, #71	; 0x47
   820e4:	f000 80d6 	beq.w	82294 <_svfprintf_r+0x10e8>
   820e8:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   820ec:	9307      	str	r3, [sp, #28]
   820ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
   820f0:	1e1f      	subs	r7, r3, #0
   820f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
   820f4:	9308      	str	r3, [sp, #32]
   820f6:	bfb7      	itett	lt
   820f8:	463b      	movlt	r3, r7
   820fa:	2300      	movge	r3, #0
   820fc:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   82100:	232d      	movlt	r3, #45	; 0x2d
   82102:	9310      	str	r3, [sp, #64]	; 0x40
   82104:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82106:	2b66      	cmp	r3, #102	; 0x66
   82108:	f000 8190 	beq.w	8242c <_svfprintf_r+0x1280>
   8210c:	2b46      	cmp	r3, #70	; 0x46
   8210e:	f000 80a4 	beq.w	8225a <_svfprintf_r+0x10ae>
   82112:	2002      	movs	r0, #2
   82114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82116:	a923      	add	r1, sp, #140	; 0x8c
   82118:	2b45      	cmp	r3, #69	; 0x45
   8211a:	bf0a      	itet	eq
   8211c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   8211e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   82120:	1c5d      	addeq	r5, r3, #1
   82122:	e88d 0021 	stmia.w	sp, {r0, r5}
   82126:	9104      	str	r1, [sp, #16]
   82128:	a820      	add	r0, sp, #128	; 0x80
   8212a:	a91f      	add	r1, sp, #124	; 0x7c
   8212c:	463b      	mov	r3, r7
   8212e:	9003      	str	r0, [sp, #12]
   82130:	9a08      	ldr	r2, [sp, #32]
   82132:	9102      	str	r1, [sp, #8]
   82134:	980c      	ldr	r0, [sp, #48]	; 0x30
   82136:	f000 fb5b 	bl	827f0 <_dtoa_r>
   8213a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8213c:	4606      	mov	r6, r0
   8213e:	2b67      	cmp	r3, #103	; 0x67
   82140:	f040 81ba 	bne.w	824b8 <_svfprintf_r+0x130c>
   82144:	f01b 0f01 	tst.w	fp, #1
   82148:	f000 8223 	beq.w	82592 <_svfprintf_r+0x13e6>
   8214c:	1974      	adds	r4, r6, r5
   8214e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   82150:	9808      	ldr	r0, [sp, #32]
   82152:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   82154:	4639      	mov	r1, r7
   82156:	f003 f99b 	bl	85490 <__aeabi_dcmpeq>
   8215a:	2800      	cmp	r0, #0
   8215c:	f040 8124 	bne.w	823a8 <_svfprintf_r+0x11fc>
   82160:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82162:	42a3      	cmp	r3, r4
   82164:	d206      	bcs.n	82174 <_svfprintf_r+0xfc8>
   82166:	2130      	movs	r1, #48	; 0x30
   82168:	1c5a      	adds	r2, r3, #1
   8216a:	9223      	str	r2, [sp, #140]	; 0x8c
   8216c:	7019      	strb	r1, [r3, #0]
   8216e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82170:	429c      	cmp	r4, r3
   82172:	d8f9      	bhi.n	82168 <_svfprintf_r+0xfbc>
   82174:	1b9b      	subs	r3, r3, r6
   82176:	9313      	str	r3, [sp, #76]	; 0x4c
   82178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8217a:	2b47      	cmp	r3, #71	; 0x47
   8217c:	f000 80a2 	beq.w	822c4 <_svfprintf_r+0x1118>
   82180:	9b11      	ldr	r3, [sp, #68]	; 0x44
   82182:	2b65      	cmp	r3, #101	; 0x65
   82184:	f340 81a7 	ble.w	824d6 <_svfprintf_r+0x132a>
   82188:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8218a:	2b66      	cmp	r3, #102	; 0x66
   8218c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8218e:	9312      	str	r3, [sp, #72]	; 0x48
   82190:	f000 8171 	beq.w	82476 <_svfprintf_r+0x12ca>
   82194:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   82196:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82198:	4619      	mov	r1, r3
   8219a:	4291      	cmp	r1, r2
   8219c:	f300 815d 	bgt.w	8245a <_svfprintf_r+0x12ae>
   821a0:	f01b 0f01 	tst.w	fp, #1
   821a4:	f040 81f0 	bne.w	82588 <_svfprintf_r+0x13dc>
   821a8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   821ac:	9308      	str	r3, [sp, #32]
   821ae:	2367      	movs	r3, #103	; 0x67
   821b0:	920e      	str	r2, [sp, #56]	; 0x38
   821b2:	9311      	str	r3, [sp, #68]	; 0x44
   821b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
   821b6:	2b00      	cmp	r3, #0
   821b8:	d17d      	bne.n	822b6 <_svfprintf_r+0x110a>
   821ba:	930a      	str	r3, [sp, #40]	; 0x28
   821bc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   821c0:	f7ff b918 	b.w	813f4 <_svfprintf_r+0x248>
   821c4:	f024 0407 	bic.w	r4, r4, #7
   821c8:	6823      	ldr	r3, [r4, #0]
   821ca:	9314      	str	r3, [sp, #80]	; 0x50
   821cc:	6863      	ldr	r3, [r4, #4]
   821ce:	9315      	str	r3, [sp, #84]	; 0x54
   821d0:	f104 0308 	add.w	r3, r4, #8
   821d4:	930f      	str	r3, [sp, #60]	; 0x3c
   821d6:	f7ff bb33 	b.w	81840 <_svfprintf_r+0x694>
   821da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   821dc:	6813      	ldr	r3, [r2, #0]
   821de:	3204      	adds	r2, #4
   821e0:	920f      	str	r2, [sp, #60]	; 0x3c
   821e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   821e4:	601a      	str	r2, [r3, #0]
   821e6:	f7ff b808 	b.w	811fa <_svfprintf_r+0x4e>
   821ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
   821ec:	4daf      	ldr	r5, [pc, #700]	; (824ac <_svfprintf_r+0x1300>)
   821ee:	f7ff b9b1 	b.w	81554 <_svfprintf_r+0x3a8>
   821f2:	aa25      	add	r2, sp, #148	; 0x94
   821f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   821f6:	980c      	ldr	r0, [sp, #48]	; 0x30
   821f8:	f002 fc1a 	bl	84a30 <__ssprint_r>
   821fc:	2800      	cmp	r0, #0
   821fe:	f47f a8b2 	bne.w	81366 <_svfprintf_r+0x1ba>
   82202:	46c8      	mov	r8, r9
   82204:	e432      	b.n	81a6c <_svfprintf_r+0x8c0>
   82206:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   82208:	4613      	mov	r3, r2
   8220a:	3304      	adds	r3, #4
   8220c:	930f      	str	r3, [sp, #60]	; 0x3c
   8220e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   82210:	6811      	ldr	r1, [r2, #0]
   82212:	17dd      	asrs	r5, r3, #31
   82214:	461a      	mov	r2, r3
   82216:	462b      	mov	r3, r5
   82218:	e9c1 2300 	strd	r2, r3, [r1]
   8221c:	f7fe bfed 	b.w	811fa <_svfprintf_r+0x4e>
   82220:	aa25      	add	r2, sp, #148	; 0x94
   82222:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82224:	980c      	ldr	r0, [sp, #48]	; 0x30
   82226:	f002 fc03 	bl	84a30 <__ssprint_r>
   8222a:	2800      	cmp	r0, #0
   8222c:	f47f a89b 	bne.w	81366 <_svfprintf_r+0x1ba>
   82230:	46c8      	mov	r8, r9
   82232:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   82234:	e433      	b.n	81a9e <_svfprintf_r+0x8f2>
   82236:	f108 0808 	add.w	r8, r8, #8
   8223a:	e52f      	b.n	81c9c <_svfprintf_r+0xaf0>
   8223c:	2140      	movs	r1, #64	; 0x40
   8223e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82240:	f001 fb56 	bl	838f0 <_malloc_r>
   82244:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82246:	6010      	str	r0, [r2, #0]
   82248:	6110      	str	r0, [r2, #16]
   8224a:	2800      	cmp	r0, #0
   8224c:	f000 8213 	beq.w	82676 <_svfprintf_r+0x14ca>
   82250:	2340      	movs	r3, #64	; 0x40
   82252:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82254:	6153      	str	r3, [r2, #20]
   82256:	f7fe bfc0 	b.w	811da <_svfprintf_r+0x2e>
   8225a:	2003      	movs	r0, #3
   8225c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8225e:	a923      	add	r1, sp, #140	; 0x8c
   82260:	e88d 0011 	stmia.w	sp, {r0, r4}
   82264:	9104      	str	r1, [sp, #16]
   82266:	a820      	add	r0, sp, #128	; 0x80
   82268:	a91f      	add	r1, sp, #124	; 0x7c
   8226a:	9003      	str	r0, [sp, #12]
   8226c:	9a08      	ldr	r2, [sp, #32]
   8226e:	463b      	mov	r3, r7
   82270:	9102      	str	r1, [sp, #8]
   82272:	980c      	ldr	r0, [sp, #48]	; 0x30
   82274:	f000 fabc 	bl	827f0 <_dtoa_r>
   82278:	4625      	mov	r5, r4
   8227a:	4606      	mov	r6, r0
   8227c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8227e:	1974      	adds	r4, r6, r5
   82280:	2b46      	cmp	r3, #70	; 0x46
   82282:	f47f af64 	bne.w	8214e <_svfprintf_r+0xfa2>
   82286:	7833      	ldrb	r3, [r6, #0]
   82288:	2b30      	cmp	r3, #48	; 0x30
   8228a:	f000 8187 	beq.w	8259c <_svfprintf_r+0x13f0>
   8228e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   82290:	442c      	add	r4, r5
   82292:	e75c      	b.n	8214e <_svfprintf_r+0xfa2>
   82294:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82296:	2b00      	cmp	r3, #0
   82298:	bf08      	it	eq
   8229a:	2301      	moveq	r3, #1
   8229c:	930a      	str	r3, [sp, #40]	; 0x28
   8229e:	e723      	b.n	820e8 <_svfprintf_r+0xf3c>
   822a0:	4630      	mov	r0, r6
   822a2:	950a      	str	r5, [sp, #40]	; 0x28
   822a4:	f7fe ff54 	bl	81150 <strlen>
   822a8:	940f      	str	r4, [sp, #60]	; 0x3c
   822aa:	900e      	str	r0, [sp, #56]	; 0x38
   822ac:	f8cd b01c 	str.w	fp, [sp, #28]
   822b0:	4603      	mov	r3, r0
   822b2:	f7ff b9eb 	b.w	8168c <_svfprintf_r+0x4e0>
   822b6:	272d      	movs	r7, #45	; 0x2d
   822b8:	2300      	movs	r3, #0
   822ba:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   822be:	930a      	str	r3, [sp, #40]	; 0x28
   822c0:	f7ff b899 	b.w	813f6 <_svfprintf_r+0x24a>
   822c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   822c6:	461a      	mov	r2, r3
   822c8:	9312      	str	r3, [sp, #72]	; 0x48
   822ca:	3303      	adds	r3, #3
   822cc:	db04      	blt.n	822d8 <_svfprintf_r+0x112c>
   822ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   822d0:	4619      	mov	r1, r3
   822d2:	4291      	cmp	r1, r2
   822d4:	f6bf af5e 	bge.w	82194 <_svfprintf_r+0xfe8>
   822d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   822da:	3b02      	subs	r3, #2
   822dc:	9311      	str	r3, [sp, #68]	; 0x44
   822de:	9b12      	ldr	r3, [sp, #72]	; 0x48
   822e0:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   822e4:	3b01      	subs	r3, #1
   822e6:	2b00      	cmp	r3, #0
   822e8:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   822ec:	bfb4      	ite	lt
   822ee:	222d      	movlt	r2, #45	; 0x2d
   822f0:	222b      	movge	r2, #43	; 0x2b
   822f2:	931f      	str	r3, [sp, #124]	; 0x7c
   822f4:	bfb8      	it	lt
   822f6:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   822f8:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   822fc:	bfb8      	it	lt
   822fe:	f1c3 0301 	rsblt	r3, r3, #1
   82302:	2b09      	cmp	r3, #9
   82304:	f340 811f 	ble.w	82546 <_svfprintf_r+0x139a>
   82308:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   8230c:	4601      	mov	r1, r0
   8230e:	4c68      	ldr	r4, [pc, #416]	; (824b0 <_svfprintf_r+0x1304>)
   82310:	e000      	b.n	82314 <_svfprintf_r+0x1168>
   82312:	4611      	mov	r1, r2
   82314:	fb84 5203 	smull	r5, r2, r4, r3
   82318:	17dd      	asrs	r5, r3, #31
   8231a:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   8231e:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   82322:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   82326:	3230      	adds	r2, #48	; 0x30
   82328:	2d09      	cmp	r5, #9
   8232a:	f801 2c01 	strb.w	r2, [r1, #-1]
   8232e:	462b      	mov	r3, r5
   82330:	f101 32ff 	add.w	r2, r1, #4294967295
   82334:	dced      	bgt.n	82312 <_svfprintf_r+0x1166>
   82336:	3330      	adds	r3, #48	; 0x30
   82338:	3902      	subs	r1, #2
   8233a:	b2dc      	uxtb	r4, r3
   8233c:	4288      	cmp	r0, r1
   8233e:	f802 4c01 	strb.w	r4, [r2, #-1]
   82342:	f240 8191 	bls.w	82668 <_svfprintf_r+0x14bc>
   82346:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   8234a:	4613      	mov	r3, r2
   8234c:	e001      	b.n	82352 <_svfprintf_r+0x11a6>
   8234e:	f813 4b01 	ldrb.w	r4, [r3], #1
   82352:	4283      	cmp	r3, r0
   82354:	f801 4b01 	strb.w	r4, [r1], #1
   82358:	d1f9      	bne.n	8234e <_svfprintf_r+0x11a2>
   8235a:	3301      	adds	r3, #1
   8235c:	1a9b      	subs	r3, r3, r2
   8235e:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   82362:	4413      	add	r3, r2
   82364:	aa21      	add	r2, sp, #132	; 0x84
   82366:	1a9b      	subs	r3, r3, r2
   82368:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8236a:	931b      	str	r3, [sp, #108]	; 0x6c
   8236c:	2a01      	cmp	r2, #1
   8236e:	4413      	add	r3, r2
   82370:	930e      	str	r3, [sp, #56]	; 0x38
   82372:	f340 8147 	ble.w	82604 <_svfprintf_r+0x1458>
   82376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82378:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8237a:	4413      	add	r3, r2
   8237c:	930e      	str	r3, [sp, #56]	; 0x38
   8237e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82382:	9308      	str	r3, [sp, #32]
   82384:	2300      	movs	r3, #0
   82386:	9312      	str	r3, [sp, #72]	; 0x48
   82388:	e714      	b.n	821b4 <_svfprintf_r+0x1008>
   8238a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8238c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8238e:	f7ff b87a 	b.w	81486 <_svfprintf_r+0x2da>
   82392:	aa25      	add	r2, sp, #148	; 0x94
   82394:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82396:	980c      	ldr	r0, [sp, #48]	; 0x30
   82398:	f002 fb4a 	bl	84a30 <__ssprint_r>
   8239c:	2800      	cmp	r0, #0
   8239e:	f47e afe2 	bne.w	81366 <_svfprintf_r+0x1ba>
   823a2:	46c8      	mov	r8, r9
   823a4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823a6:	e4fb      	b.n	81da0 <_svfprintf_r+0xbf4>
   823a8:	4623      	mov	r3, r4
   823aa:	e6e3      	b.n	82174 <_svfprintf_r+0xfc8>
   823ac:	aa25      	add	r2, sp, #148	; 0x94
   823ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823b0:	980c      	ldr	r0, [sp, #48]	; 0x30
   823b2:	f002 fb3d 	bl	84a30 <__ssprint_r>
   823b6:	2800      	cmp	r0, #0
   823b8:	f47e afd5 	bne.w	81366 <_svfprintf_r+0x1ba>
   823bc:	46c8      	mov	r8, r9
   823be:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   823c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823c2:	e5d3      	b.n	81f6c <_svfprintf_r+0xdc0>
   823c4:	aa25      	add	r2, sp, #148	; 0x94
   823c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823c8:	980c      	ldr	r0, [sp, #48]	; 0x30
   823ca:	f002 fb31 	bl	84a30 <__ssprint_r>
   823ce:	2800      	cmp	r0, #0
   823d0:	f47e afc9 	bne.w	81366 <_svfprintf_r+0x1ba>
   823d4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   823d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   823d8:	46c8      	mov	r8, r9
   823da:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823dc:	1a9a      	subs	r2, r3, r2
   823de:	e5dd      	b.n	81f9c <_svfprintf_r+0xdf0>
   823e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   823e2:	f7ff b902 	b.w	815ea <_svfprintf_r+0x43e>
   823e6:	aa25      	add	r2, sp, #148	; 0x94
   823e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
   823ea:	980c      	ldr	r0, [sp, #48]	; 0x30
   823ec:	f002 fb20 	bl	84a30 <__ssprint_r>
   823f0:	2800      	cmp	r0, #0
   823f2:	f47e afb8 	bne.w	81366 <_svfprintf_r+0x1ba>
   823f6:	46c8      	mov	r8, r9
   823f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   823fa:	e5b0      	b.n	81f5e <_svfprintf_r+0xdb2>
   823fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   823fe:	4637      	mov	r7, r6
   82400:	2b06      	cmp	r3, #6
   82402:	bf28      	it	cs
   82404:	2306      	movcs	r3, #6
   82406:	960a      	str	r6, [sp, #40]	; 0x28
   82408:	9612      	str	r6, [sp, #72]	; 0x48
   8240a:	9308      	str	r3, [sp, #32]
   8240c:	940f      	str	r4, [sp, #60]	; 0x3c
   8240e:	f8cd b01c 	str.w	fp, [sp, #28]
   82412:	930e      	str	r3, [sp, #56]	; 0x38
   82414:	4e27      	ldr	r6, [pc, #156]	; (824b4 <_svfprintf_r+0x1308>)
   82416:	f7fe bfed 	b.w	813f4 <_svfprintf_r+0x248>
   8241a:	2306      	movs	r3, #6
   8241c:	930a      	str	r3, [sp, #40]	; 0x28
   8241e:	e663      	b.n	820e8 <_svfprintf_r+0xf3c>
   82420:	232d      	movs	r3, #45	; 0x2d
   82422:	461f      	mov	r7, r3
   82424:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   82428:	f7ff ba2b 	b.w	81882 <_svfprintf_r+0x6d6>
   8242c:	2003      	movs	r0, #3
   8242e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82430:	a923      	add	r1, sp, #140	; 0x8c
   82432:	e88d 0011 	stmia.w	sp, {r0, r4}
   82436:	9104      	str	r1, [sp, #16]
   82438:	a820      	add	r0, sp, #128	; 0x80
   8243a:	a91f      	add	r1, sp, #124	; 0x7c
   8243c:	9003      	str	r0, [sp, #12]
   8243e:	9a08      	ldr	r2, [sp, #32]
   82440:	463b      	mov	r3, r7
   82442:	9102      	str	r1, [sp, #8]
   82444:	980c      	ldr	r0, [sp, #48]	; 0x30
   82446:	f000 f9d3 	bl	827f0 <_dtoa_r>
   8244a:	4625      	mov	r5, r4
   8244c:	4606      	mov	r6, r0
   8244e:	1904      	adds	r4, r0, r4
   82450:	e719      	b.n	82286 <_svfprintf_r+0x10da>
   82452:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82454:	4d15      	ldr	r5, [pc, #84]	; (824ac <_svfprintf_r+0x1300>)
   82456:	f7ff bb7f 	b.w	81b58 <_svfprintf_r+0x9ac>
   8245a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8245c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   8245e:	4413      	add	r3, r2
   82460:	9a12      	ldr	r2, [sp, #72]	; 0x48
   82462:	930e      	str	r3, [sp, #56]	; 0x38
   82464:	2a00      	cmp	r2, #0
   82466:	f340 80c6 	ble.w	825f6 <_svfprintf_r+0x144a>
   8246a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8246e:	9308      	str	r3, [sp, #32]
   82470:	2367      	movs	r3, #103	; 0x67
   82472:	9311      	str	r3, [sp, #68]	; 0x44
   82474:	e69e      	b.n	821b4 <_svfprintf_r+0x1008>
   82476:	2b00      	cmp	r3, #0
   82478:	f340 80e0 	ble.w	8263c <_svfprintf_r+0x1490>
   8247c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8247e:	2a00      	cmp	r2, #0
   82480:	f040 80af 	bne.w	825e2 <_svfprintf_r+0x1436>
   82484:	f01b 0f01 	tst.w	fp, #1
   82488:	f040 80ab 	bne.w	825e2 <_svfprintf_r+0x1436>
   8248c:	9308      	str	r3, [sp, #32]
   8248e:	930e      	str	r3, [sp, #56]	; 0x38
   82490:	e690      	b.n	821b4 <_svfprintf_r+0x1008>
   82492:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82494:	940f      	str	r4, [sp, #60]	; 0x3c
   82496:	9308      	str	r3, [sp, #32]
   82498:	930e      	str	r3, [sp, #56]	; 0x38
   8249a:	900a      	str	r0, [sp, #40]	; 0x28
   8249c:	f8cd b01c 	str.w	fp, [sp, #28]
   824a0:	9012      	str	r0, [sp, #72]	; 0x48
   824a2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   824a6:	f7fe bfa5 	b.w	813f4 <_svfprintf_r+0x248>
   824aa:	bf00      	nop
   824ac:	00085908 	.word	0x00085908
   824b0:	66666667 	.word	0x66666667
   824b4:	000858ec 	.word	0x000858ec
   824b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   824ba:	2b47      	cmp	r3, #71	; 0x47
   824bc:	f47f ae46 	bne.w	8214c <_svfprintf_r+0xfa0>
   824c0:	f01b 0f01 	tst.w	fp, #1
   824c4:	f47f aeda 	bne.w	8227c <_svfprintf_r+0x10d0>
   824c8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   824ca:	1b9b      	subs	r3, r3, r6
   824cc:	9313      	str	r3, [sp, #76]	; 0x4c
   824ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   824d0:	2b47      	cmp	r3, #71	; 0x47
   824d2:	f43f aef7 	beq.w	822c4 <_svfprintf_r+0x1118>
   824d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   824d8:	9312      	str	r3, [sp, #72]	; 0x48
   824da:	e700      	b.n	822de <_svfprintf_r+0x1132>
   824dc:	2000      	movs	r0, #0
   824de:	900a      	str	r0, [sp, #40]	; 0x28
   824e0:	f7fe bec0 	b.w	81264 <_svfprintf_r+0xb8>
   824e4:	424f      	negs	r7, r1
   824e6:	3110      	adds	r1, #16
   824e8:	da35      	bge.n	82556 <_svfprintf_r+0x13aa>
   824ea:	2410      	movs	r4, #16
   824ec:	4d6a      	ldr	r5, [pc, #424]	; (82698 <_svfprintf_r+0x14ec>)
   824ee:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   824f2:	e004      	b.n	824fe <_svfprintf_r+0x1352>
   824f4:	f108 0808 	add.w	r8, r8, #8
   824f8:	3f10      	subs	r7, #16
   824fa:	2f10      	cmp	r7, #16
   824fc:	dd2c      	ble.n	82558 <_svfprintf_r+0x13ac>
   824fe:	3301      	adds	r3, #1
   82500:	3210      	adds	r2, #16
   82502:	2b07      	cmp	r3, #7
   82504:	9227      	str	r2, [sp, #156]	; 0x9c
   82506:	9326      	str	r3, [sp, #152]	; 0x98
   82508:	f8c8 5000 	str.w	r5, [r8]
   8250c:	f8c8 4004 	str.w	r4, [r8, #4]
   82510:	ddf0      	ble.n	824f4 <_svfprintf_r+0x1348>
   82512:	aa25      	add	r2, sp, #148	; 0x94
   82514:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82516:	4658      	mov	r0, fp
   82518:	f002 fa8a 	bl	84a30 <__ssprint_r>
   8251c:	2800      	cmp	r0, #0
   8251e:	f47e af22 	bne.w	81366 <_svfprintf_r+0x1ba>
   82522:	46c8      	mov	r8, r9
   82524:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82526:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82528:	e7e6      	b.n	824f8 <_svfprintf_r+0x134c>
   8252a:	aa25      	add	r2, sp, #148	; 0x94
   8252c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8252e:	980c      	ldr	r0, [sp, #48]	; 0x30
   82530:	f002 fa7e 	bl	84a30 <__ssprint_r>
   82534:	2800      	cmp	r0, #0
   82536:	f47e af16 	bne.w	81366 <_svfprintf_r+0x1ba>
   8253a:	46c8      	mov	r8, r9
   8253c:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8253e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82540:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82542:	f7ff bbc3 	b.w	81ccc <_svfprintf_r+0xb20>
   82546:	2230      	movs	r2, #48	; 0x30
   82548:	4413      	add	r3, r2
   8254a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   8254e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   82552:	ab22      	add	r3, sp, #136	; 0x88
   82554:	e706      	b.n	82364 <_svfprintf_r+0x11b8>
   82556:	4d50      	ldr	r5, [pc, #320]	; (82698 <_svfprintf_r+0x14ec>)
   82558:	3301      	adds	r3, #1
   8255a:	443a      	add	r2, r7
   8255c:	2b07      	cmp	r3, #7
   8255e:	e888 00a0 	stmia.w	r8, {r5, r7}
   82562:	9227      	str	r2, [sp, #156]	; 0x9c
   82564:	9326      	str	r3, [sp, #152]	; 0x98
   82566:	f108 0808 	add.w	r8, r8, #8
   8256a:	f77f abb2 	ble.w	81cd2 <_svfprintf_r+0xb26>
   8256e:	aa25      	add	r2, sp, #148	; 0x94
   82570:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82572:	980c      	ldr	r0, [sp, #48]	; 0x30
   82574:	f002 fa5c 	bl	84a30 <__ssprint_r>
   82578:	2800      	cmp	r0, #0
   8257a:	f47e aef4 	bne.w	81366 <_svfprintf_r+0x1ba>
   8257e:	46c8      	mov	r8, r9
   82580:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   82582:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82584:	f7ff bba5 	b.w	81cd2 <_svfprintf_r+0xb26>
   82588:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8258a:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8258c:	4413      	add	r3, r2
   8258e:	930e      	str	r3, [sp, #56]	; 0x38
   82590:	e76b      	b.n	8246a <_svfprintf_r+0x12be>
   82592:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   82594:	e5ee      	b.n	82174 <_svfprintf_r+0xfc8>
   82596:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82598:	4d3f      	ldr	r5, [pc, #252]	; (82698 <_svfprintf_r+0x14ec>)
   8259a:	e4bb      	b.n	81f14 <_svfprintf_r+0xd68>
   8259c:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8259e:	9808      	ldr	r0, [sp, #32]
   825a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   825a2:	4639      	mov	r1, r7
   825a4:	f002 ff74 	bl	85490 <__aeabi_dcmpeq>
   825a8:	2800      	cmp	r0, #0
   825aa:	f47f ae70 	bne.w	8228e <_svfprintf_r+0x10e2>
   825ae:	f1c5 0501 	rsb	r5, r5, #1
   825b2:	951f      	str	r5, [sp, #124]	; 0x7c
   825b4:	442c      	add	r4, r5
   825b6:	e5ca      	b.n	8214e <_svfprintf_r+0xfa2>
   825b8:	2303      	movs	r3, #3
   825ba:	461a      	mov	r2, r3
   825bc:	9308      	str	r3, [sp, #32]
   825be:	2300      	movs	r3, #0
   825c0:	4619      	mov	r1, r3
   825c2:	930a      	str	r3, [sp, #40]	; 0x28
   825c4:	4e35      	ldr	r6, [pc, #212]	; (8269c <_svfprintf_r+0x14f0>)
   825c6:	4b36      	ldr	r3, [pc, #216]	; (826a0 <_svfprintf_r+0x14f4>)
   825c8:	920e      	str	r2, [sp, #56]	; 0x38
   825ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
   825cc:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   825d0:	9007      	str	r0, [sp, #28]
   825d2:	9112      	str	r1, [sp, #72]	; 0x48
   825d4:	2a47      	cmp	r2, #71	; 0x47
   825d6:	bfd8      	it	le
   825d8:	461e      	movle	r6, r3
   825da:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   825de:	f7fe bf09 	b.w	813f4 <_svfprintf_r+0x248>
   825e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   825e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
   825e6:	4413      	add	r3, r2
   825e8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   825ea:	441a      	add	r2, r3
   825ec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   825f0:	920e      	str	r2, [sp, #56]	; 0x38
   825f2:	9308      	str	r3, [sp, #32]
   825f4:	e5de      	b.n	821b4 <_svfprintf_r+0x1008>
   825f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
   825f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   825fa:	f1c3 0301 	rsb	r3, r3, #1
   825fe:	441a      	add	r2, r3
   82600:	4613      	mov	r3, r2
   82602:	e7c4      	b.n	8258e <_svfprintf_r+0x13e2>
   82604:	f01b 0301 	ands.w	r3, fp, #1
   82608:	9312      	str	r3, [sp, #72]	; 0x48
   8260a:	f47f aeb4 	bne.w	82376 <_svfprintf_r+0x11ca>
   8260e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82610:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   82614:	9308      	str	r3, [sp, #32]
   82616:	e5cd      	b.n	821b4 <_svfprintf_r+0x1008>
   82618:	4d1f      	ldr	r5, [pc, #124]	; (82698 <_svfprintf_r+0x14ec>)
   8261a:	e43d      	b.n	81e98 <_svfprintf_r+0xcec>
   8261c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8261e:	4d1e      	ldr	r5, [pc, #120]	; (82698 <_svfprintf_r+0x14ec>)
   82620:	e492      	b.n	81f48 <_svfprintf_r+0xd9c>
   82622:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   82624:	f89a 3001 	ldrb.w	r3, [sl, #1]
   82628:	6828      	ldr	r0, [r5, #0]
   8262a:	46a2      	mov	sl, r4
   8262c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   82630:	900a      	str	r0, [sp, #40]	; 0x28
   82632:	4628      	mov	r0, r5
   82634:	3004      	adds	r0, #4
   82636:	900f      	str	r0, [sp, #60]	; 0x3c
   82638:	f7fe be12 	b.w	81260 <_svfprintf_r+0xb4>
   8263c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8263e:	b913      	cbnz	r3, 82646 <_svfprintf_r+0x149a>
   82640:	f01b 0f01 	tst.w	fp, #1
   82644:	d002      	beq.n	8264c <_svfprintf_r+0x14a0>
   82646:	9b19      	ldr	r3, [sp, #100]	; 0x64
   82648:	3301      	adds	r3, #1
   8264a:	e7cd      	b.n	825e8 <_svfprintf_r+0x143c>
   8264c:	2301      	movs	r3, #1
   8264e:	e71d      	b.n	8248c <_svfprintf_r+0x12e0>
   82650:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82654:	f7ff b984 	b.w	81960 <_svfprintf_r+0x7b4>
   82658:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8265c:	f7ff b93e 	b.w	818dc <_svfprintf_r+0x730>
   82660:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82664:	f7ff b854 	b.w	81710 <_svfprintf_r+0x564>
   82668:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   8266c:	e67a      	b.n	82364 <_svfprintf_r+0x11b8>
   8266e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82672:	f7ff b9b6 	b.w	819e2 <_svfprintf_r+0x836>
   82676:	f04f 32ff 	mov.w	r2, #4294967295
   8267a:	230c      	movs	r3, #12
   8267c:	9209      	str	r2, [sp, #36]	; 0x24
   8267e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82680:	6013      	str	r3, [r2, #0]
   82682:	f7fe be79 	b.w	81378 <_svfprintf_r+0x1cc>
   82686:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8268a:	f7ff b8c9 	b.w	81820 <_svfprintf_r+0x674>
   8268e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   82692:	f7ff b87d 	b.w	81790 <_svfprintf_r+0x5e4>
   82696:	bf00      	nop
   82698:	00085908 	.word	0x00085908
   8269c:	000858c0 	.word	0x000858c0
   826a0:	000858bc 	.word	0x000858bc

000826a4 <register_fini>:
   826a4:	4b02      	ldr	r3, [pc, #8]	; (826b0 <register_fini+0xc>)
   826a6:	b113      	cbz	r3, 826ae <register_fini+0xa>
   826a8:	4802      	ldr	r0, [pc, #8]	; (826b4 <register_fini+0x10>)
   826aa:	f000 b805 	b.w	826b8 <atexit>
   826ae:	4770      	bx	lr
   826b0:	00000000 	.word	0x00000000
   826b4:	00083635 	.word	0x00083635

000826b8 <atexit>:
   826b8:	2300      	movs	r3, #0
   826ba:	4601      	mov	r1, r0
   826bc:	461a      	mov	r2, r3
   826be:	4618      	mov	r0, r3
   826c0:	f002 ba40 	b.w	84b44 <__register_exitproc>

000826c4 <quorem>:
   826c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   826c8:	6903      	ldr	r3, [r0, #16]
   826ca:	690f      	ldr	r7, [r1, #16]
   826cc:	b083      	sub	sp, #12
   826ce:	429f      	cmp	r7, r3
   826d0:	f300 8088 	bgt.w	827e4 <quorem+0x120>
   826d4:	3f01      	subs	r7, #1
   826d6:	f101 0614 	add.w	r6, r1, #20
   826da:	f100 0a14 	add.w	sl, r0, #20
   826de:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   826e2:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   826e6:	3301      	adds	r3, #1
   826e8:	fbb2 f8f3 	udiv	r8, r2, r3
   826ec:	00bb      	lsls	r3, r7, #2
   826ee:	9300      	str	r3, [sp, #0]
   826f0:	eb06 0903 	add.w	r9, r6, r3
   826f4:	4453      	add	r3, sl
   826f6:	9301      	str	r3, [sp, #4]
   826f8:	f1b8 0f00 	cmp.w	r8, #0
   826fc:	d03b      	beq.n	82776 <quorem+0xb2>
   826fe:	2300      	movs	r3, #0
   82700:	46b4      	mov	ip, r6
   82702:	461c      	mov	r4, r3
   82704:	46d6      	mov	lr, sl
   82706:	f85c 2b04 	ldr.w	r2, [ip], #4
   8270a:	f8de 5000 	ldr.w	r5, [lr]
   8270e:	fa1f fb82 	uxth.w	fp, r2
   82712:	fb08 330b 	mla	r3, r8, fp, r3
   82716:	0c12      	lsrs	r2, r2, #16
   82718:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   8271c:	fb08 bb02 	mla	fp, r8, r2, fp
   82720:	b29a      	uxth	r2, r3
   82722:	1aa2      	subs	r2, r4, r2
   82724:	b2ab      	uxth	r3, r5
   82726:	fa1f f48b 	uxth.w	r4, fp
   8272a:	441a      	add	r2, r3
   8272c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   82730:	eb04 4422 	add.w	r4, r4, r2, asr #16
   82734:	b292      	uxth	r2, r2
   82736:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   8273a:	45e1      	cmp	r9, ip
   8273c:	f84e 2b04 	str.w	r2, [lr], #4
   82740:	ea4f 4424 	mov.w	r4, r4, asr #16
   82744:	ea4f 431b 	mov.w	r3, fp, lsr #16
   82748:	d2dd      	bcs.n	82706 <quorem+0x42>
   8274a:	9b00      	ldr	r3, [sp, #0]
   8274c:	f85a 3003 	ldr.w	r3, [sl, r3]
   82750:	b98b      	cbnz	r3, 82776 <quorem+0xb2>
   82752:	9c01      	ldr	r4, [sp, #4]
   82754:	1f23      	subs	r3, r4, #4
   82756:	459a      	cmp	sl, r3
   82758:	d20c      	bcs.n	82774 <quorem+0xb0>
   8275a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8275e:	b94b      	cbnz	r3, 82774 <quorem+0xb0>
   82760:	f1a4 0308 	sub.w	r3, r4, #8
   82764:	e002      	b.n	8276c <quorem+0xa8>
   82766:	681a      	ldr	r2, [r3, #0]
   82768:	3b04      	subs	r3, #4
   8276a:	b91a      	cbnz	r2, 82774 <quorem+0xb0>
   8276c:	459a      	cmp	sl, r3
   8276e:	f107 37ff 	add.w	r7, r7, #4294967295
   82772:	d3f8      	bcc.n	82766 <quorem+0xa2>
   82774:	6107      	str	r7, [r0, #16]
   82776:	4604      	mov	r4, r0
   82778:	f001 fe94 	bl	844a4 <__mcmp>
   8277c:	2800      	cmp	r0, #0
   8277e:	db2d      	blt.n	827dc <quorem+0x118>
   82780:	4655      	mov	r5, sl
   82782:	2300      	movs	r3, #0
   82784:	f108 0801 	add.w	r8, r8, #1
   82788:	f856 1b04 	ldr.w	r1, [r6], #4
   8278c:	6828      	ldr	r0, [r5, #0]
   8278e:	b28a      	uxth	r2, r1
   82790:	1a9a      	subs	r2, r3, r2
   82792:	0c0b      	lsrs	r3, r1, #16
   82794:	b281      	uxth	r1, r0
   82796:	440a      	add	r2, r1
   82798:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   8279c:	eb03 4322 	add.w	r3, r3, r2, asr #16
   827a0:	b292      	uxth	r2, r2
   827a2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   827a6:	45b1      	cmp	r9, r6
   827a8:	f845 2b04 	str.w	r2, [r5], #4
   827ac:	ea4f 4323 	mov.w	r3, r3, asr #16
   827b0:	d2ea      	bcs.n	82788 <quorem+0xc4>
   827b2:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   827b6:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   827ba:	b97a      	cbnz	r2, 827dc <quorem+0x118>
   827bc:	1f1a      	subs	r2, r3, #4
   827be:	4592      	cmp	sl, r2
   827c0:	d20b      	bcs.n	827da <quorem+0x116>
   827c2:	f853 2c04 	ldr.w	r2, [r3, #-4]
   827c6:	b942      	cbnz	r2, 827da <quorem+0x116>
   827c8:	3b08      	subs	r3, #8
   827ca:	e002      	b.n	827d2 <quorem+0x10e>
   827cc:	681a      	ldr	r2, [r3, #0]
   827ce:	3b04      	subs	r3, #4
   827d0:	b91a      	cbnz	r2, 827da <quorem+0x116>
   827d2:	459a      	cmp	sl, r3
   827d4:	f107 37ff 	add.w	r7, r7, #4294967295
   827d8:	d3f8      	bcc.n	827cc <quorem+0x108>
   827da:	6127      	str	r7, [r4, #16]
   827dc:	4640      	mov	r0, r8
   827de:	b003      	add	sp, #12
   827e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827e4:	2000      	movs	r0, #0
   827e6:	b003      	add	sp, #12
   827e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   827ec:	0000      	movs	r0, r0
	...

000827f0 <_dtoa_r>:
   827f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   827f4:	6c05      	ldr	r5, [r0, #64]	; 0x40
   827f6:	b09b      	sub	sp, #108	; 0x6c
   827f8:	4604      	mov	r4, r0
   827fa:	4692      	mov	sl, r2
   827fc:	469b      	mov	fp, r3
   827fe:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   82800:	b14d      	cbz	r5, 82816 <_dtoa_r+0x26>
   82802:	2301      	movs	r3, #1
   82804:	6c42      	ldr	r2, [r0, #68]	; 0x44
   82806:	4629      	mov	r1, r5
   82808:	4093      	lsls	r3, r2
   8280a:	60ab      	str	r3, [r5, #8]
   8280c:	606a      	str	r2, [r5, #4]
   8280e:	f001 fc71 	bl	840f4 <_Bfree>
   82812:	2300      	movs	r3, #0
   82814:	6423      	str	r3, [r4, #64]	; 0x40
   82816:	f1bb 0f00 	cmp.w	fp, #0
   8281a:	465d      	mov	r5, fp
   8281c:	db35      	blt.n	8288a <_dtoa_r+0x9a>
   8281e:	2300      	movs	r3, #0
   82820:	6033      	str	r3, [r6, #0]
   82822:	4b9d      	ldr	r3, [pc, #628]	; (82a98 <_dtoa_r+0x2a8>)
   82824:	43ab      	bics	r3, r5
   82826:	d015      	beq.n	82854 <_dtoa_r+0x64>
   82828:	2200      	movs	r2, #0
   8282a:	2300      	movs	r3, #0
   8282c:	4650      	mov	r0, sl
   8282e:	4659      	mov	r1, fp
   82830:	f002 fe2e 	bl	85490 <__aeabi_dcmpeq>
   82834:	4680      	mov	r8, r0
   82836:	2800      	cmp	r0, #0
   82838:	d02d      	beq.n	82896 <_dtoa_r+0xa6>
   8283a:	2301      	movs	r3, #1
   8283c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8283e:	6013      	str	r3, [r2, #0]
   82840:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82842:	2b00      	cmp	r3, #0
   82844:	f000 80bd 	beq.w	829c2 <_dtoa_r+0x1d2>
   82848:	4894      	ldr	r0, [pc, #592]	; (82a9c <_dtoa_r+0x2ac>)
   8284a:	6018      	str	r0, [r3, #0]
   8284c:	3801      	subs	r0, #1
   8284e:	b01b      	add	sp, #108	; 0x6c
   82850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82854:	f242 730f 	movw	r3, #9999	; 0x270f
   82858:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8285a:	6013      	str	r3, [r2, #0]
   8285c:	f1ba 0f00 	cmp.w	sl, #0
   82860:	d10d      	bne.n	8287e <_dtoa_r+0x8e>
   82862:	f3c5 0513 	ubfx	r5, r5, #0, #20
   82866:	b955      	cbnz	r5, 8287e <_dtoa_r+0x8e>
   82868:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   8286a:	488d      	ldr	r0, [pc, #564]	; (82aa0 <_dtoa_r+0x2b0>)
   8286c:	2b00      	cmp	r3, #0
   8286e:	d0ee      	beq.n	8284e <_dtoa_r+0x5e>
   82870:	f100 0308 	add.w	r3, r0, #8
   82874:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   82876:	6013      	str	r3, [r2, #0]
   82878:	b01b      	add	sp, #108	; 0x6c
   8287a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8287e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82880:	4888      	ldr	r0, [pc, #544]	; (82aa4 <_dtoa_r+0x2b4>)
   82882:	2b00      	cmp	r3, #0
   82884:	d0e3      	beq.n	8284e <_dtoa_r+0x5e>
   82886:	1cc3      	adds	r3, r0, #3
   82888:	e7f4      	b.n	82874 <_dtoa_r+0x84>
   8288a:	2301      	movs	r3, #1
   8288c:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   82890:	6033      	str	r3, [r6, #0]
   82892:	46ab      	mov	fp, r5
   82894:	e7c5      	b.n	82822 <_dtoa_r+0x32>
   82896:	aa18      	add	r2, sp, #96	; 0x60
   82898:	ab19      	add	r3, sp, #100	; 0x64
   8289a:	9201      	str	r2, [sp, #4]
   8289c:	9300      	str	r3, [sp, #0]
   8289e:	4652      	mov	r2, sl
   828a0:	465b      	mov	r3, fp
   828a2:	4620      	mov	r0, r4
   828a4:	f001 fea8 	bl	845f8 <__d2b>
   828a8:	0d2b      	lsrs	r3, r5, #20
   828aa:	4681      	mov	r9, r0
   828ac:	d071      	beq.n	82992 <_dtoa_r+0x1a2>
   828ae:	4650      	mov	r0, sl
   828b0:	f3cb 0213 	ubfx	r2, fp, #0, #20
   828b4:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   828b8:	9f18      	ldr	r7, [sp, #96]	; 0x60
   828ba:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   828be:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   828c2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   828c6:	2200      	movs	r2, #0
   828c8:	4b77      	ldr	r3, [pc, #476]	; (82aa8 <_dtoa_r+0x2b8>)
   828ca:	f002 f9c5 	bl	84c58 <__aeabi_dsub>
   828ce:	a36c      	add	r3, pc, #432	; (adr r3, 82a80 <_dtoa_r+0x290>)
   828d0:	e9d3 2300 	ldrd	r2, r3, [r3]
   828d4:	f002 fb74 	bl	84fc0 <__aeabi_dmul>
   828d8:	a36b      	add	r3, pc, #428	; (adr r3, 82a88 <_dtoa_r+0x298>)
   828da:	e9d3 2300 	ldrd	r2, r3, [r3]
   828de:	f002 f9bd 	bl	84c5c <__adddf3>
   828e2:	e9cd 0102 	strd	r0, r1, [sp, #8]
   828e6:	4630      	mov	r0, r6
   828e8:	f002 fb04 	bl	84ef4 <__aeabi_i2d>
   828ec:	a368      	add	r3, pc, #416	; (adr r3, 82a90 <_dtoa_r+0x2a0>)
   828ee:	e9d3 2300 	ldrd	r2, r3, [r3]
   828f2:	f002 fb65 	bl	84fc0 <__aeabi_dmul>
   828f6:	4602      	mov	r2, r0
   828f8:	460b      	mov	r3, r1
   828fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   828fe:	f002 f9ad 	bl	84c5c <__adddf3>
   82902:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82906:	f002 fe0b 	bl	85520 <__aeabi_d2iz>
   8290a:	2200      	movs	r2, #0
   8290c:	9002      	str	r0, [sp, #8]
   8290e:	2300      	movs	r3, #0
   82910:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82914:	f002 fdc6 	bl	854a4 <__aeabi_dcmplt>
   82918:	2800      	cmp	r0, #0
   8291a:	f040 816d 	bne.w	82bf8 <_dtoa_r+0x408>
   8291e:	9d02      	ldr	r5, [sp, #8]
   82920:	2d16      	cmp	r5, #22
   82922:	f200 8157 	bhi.w	82bd4 <_dtoa_r+0x3e4>
   82926:	4961      	ldr	r1, [pc, #388]	; (82aac <_dtoa_r+0x2bc>)
   82928:	4652      	mov	r2, sl
   8292a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   8292e:	465b      	mov	r3, fp
   82930:	e9d1 0100 	ldrd	r0, r1, [r1]
   82934:	f002 fdd4 	bl	854e0 <__aeabi_dcmpgt>
   82938:	2800      	cmp	r0, #0
   8293a:	f000 81be 	beq.w	82cba <_dtoa_r+0x4ca>
   8293e:	1e6b      	subs	r3, r5, #1
   82940:	9302      	str	r3, [sp, #8]
   82942:	2300      	movs	r3, #0
   82944:	930e      	str	r3, [sp, #56]	; 0x38
   82946:	1bbf      	subs	r7, r7, r6
   82948:	1e7b      	subs	r3, r7, #1
   8294a:	9308      	str	r3, [sp, #32]
   8294c:	f100 814e 	bmi.w	82bec <_dtoa_r+0x3fc>
   82950:	2300      	movs	r3, #0
   82952:	930a      	str	r3, [sp, #40]	; 0x28
   82954:	9b02      	ldr	r3, [sp, #8]
   82956:	2b00      	cmp	r3, #0
   82958:	f2c0 813f 	blt.w	82bda <_dtoa_r+0x3ea>
   8295c:	9a08      	ldr	r2, [sp, #32]
   8295e:	930d      	str	r3, [sp, #52]	; 0x34
   82960:	4611      	mov	r1, r2
   82962:	4419      	add	r1, r3
   82964:	2300      	movs	r3, #0
   82966:	9108      	str	r1, [sp, #32]
   82968:	930c      	str	r3, [sp, #48]	; 0x30
   8296a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8296c:	2b09      	cmp	r3, #9
   8296e:	d82a      	bhi.n	829c6 <_dtoa_r+0x1d6>
   82970:	2b05      	cmp	r3, #5
   82972:	f340 8658 	ble.w	83626 <_dtoa_r+0xe36>
   82976:	2500      	movs	r5, #0
   82978:	3b04      	subs	r3, #4
   8297a:	9324      	str	r3, [sp, #144]	; 0x90
   8297c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   8297e:	3b02      	subs	r3, #2
   82980:	2b03      	cmp	r3, #3
   82982:	f200 863f 	bhi.w	83604 <_dtoa_r+0xe14>
   82986:	e8df f013 	tbh	[pc, r3, lsl #1]
   8298a:	03ce      	.short	0x03ce
   8298c:	03d902c3 	.word	0x03d902c3
   82990:	045b      	.short	0x045b
   82992:	9f18      	ldr	r7, [sp, #96]	; 0x60
   82994:	9e19      	ldr	r6, [sp, #100]	; 0x64
   82996:	443e      	add	r6, r7
   82998:	f206 4332 	addw	r3, r6, #1074	; 0x432
   8299c:	2b20      	cmp	r3, #32
   8299e:	f340 8187 	ble.w	82cb0 <_dtoa_r+0x4c0>
   829a2:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   829a6:	f206 4012 	addw	r0, r6, #1042	; 0x412
   829aa:	409d      	lsls	r5, r3
   829ac:	fa2a f000 	lsr.w	r0, sl, r0
   829b0:	4328      	orrs	r0, r5
   829b2:	f002 fa8f 	bl	84ed4 <__aeabi_ui2d>
   829b6:	2301      	movs	r3, #1
   829b8:	3e01      	subs	r6, #1
   829ba:	9314      	str	r3, [sp, #80]	; 0x50
   829bc:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   829c0:	e781      	b.n	828c6 <_dtoa_r+0xd6>
   829c2:	483b      	ldr	r0, [pc, #236]	; (82ab0 <_dtoa_r+0x2c0>)
   829c4:	e743      	b.n	8284e <_dtoa_r+0x5e>
   829c6:	2100      	movs	r1, #0
   829c8:	4620      	mov	r0, r4
   829ca:	6461      	str	r1, [r4, #68]	; 0x44
   829cc:	9125      	str	r1, [sp, #148]	; 0x94
   829ce:	f001 fb6b 	bl	840a8 <_Balloc>
   829d2:	f04f 33ff 	mov.w	r3, #4294967295
   829d6:	9307      	str	r3, [sp, #28]
   829d8:	930f      	str	r3, [sp, #60]	; 0x3c
   829da:	2301      	movs	r3, #1
   829dc:	9a25      	ldr	r2, [sp, #148]	; 0x94
   829de:	9004      	str	r0, [sp, #16]
   829e0:	6420      	str	r0, [r4, #64]	; 0x40
   829e2:	9224      	str	r2, [sp, #144]	; 0x90
   829e4:	930b      	str	r3, [sp, #44]	; 0x2c
   829e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   829e8:	2b00      	cmp	r3, #0
   829ea:	f2c0 80d3 	blt.w	82b94 <_dtoa_r+0x3a4>
   829ee:	9a02      	ldr	r2, [sp, #8]
   829f0:	2a0e      	cmp	r2, #14
   829f2:	f300 80cf 	bgt.w	82b94 <_dtoa_r+0x3a4>
   829f6:	4b2d      	ldr	r3, [pc, #180]	; (82aac <_dtoa_r+0x2bc>)
   829f8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   829fc:	e9d3 2300 	ldrd	r2, r3, [r3]
   82a00:	e9cd 2308 	strd	r2, r3, [sp, #32]
   82a04:	9b25      	ldr	r3, [sp, #148]	; 0x94
   82a06:	2b00      	cmp	r3, #0
   82a08:	f2c0 83b4 	blt.w	83174 <_dtoa_r+0x984>
   82a0c:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   82a10:	4650      	mov	r0, sl
   82a12:	462a      	mov	r2, r5
   82a14:	4633      	mov	r3, r6
   82a16:	4659      	mov	r1, fp
   82a18:	f002 fbfc 	bl	85214 <__aeabi_ddiv>
   82a1c:	f002 fd80 	bl	85520 <__aeabi_d2iz>
   82a20:	4680      	mov	r8, r0
   82a22:	f002 fa67 	bl	84ef4 <__aeabi_i2d>
   82a26:	462a      	mov	r2, r5
   82a28:	4633      	mov	r3, r6
   82a2a:	f002 fac9 	bl	84fc0 <__aeabi_dmul>
   82a2e:	4602      	mov	r2, r0
   82a30:	460b      	mov	r3, r1
   82a32:	4650      	mov	r0, sl
   82a34:	4659      	mov	r1, fp
   82a36:	f002 f90f 	bl	84c58 <__aeabi_dsub>
   82a3a:	9e07      	ldr	r6, [sp, #28]
   82a3c:	9f04      	ldr	r7, [sp, #16]
   82a3e:	f108 0530 	add.w	r5, r8, #48	; 0x30
   82a42:	2e01      	cmp	r6, #1
   82a44:	703d      	strb	r5, [r7, #0]
   82a46:	4602      	mov	r2, r0
   82a48:	460b      	mov	r3, r1
   82a4a:	f107 0501 	add.w	r5, r7, #1
   82a4e:	d064      	beq.n	82b1a <_dtoa_r+0x32a>
   82a50:	2200      	movs	r2, #0
   82a52:	4b18      	ldr	r3, [pc, #96]	; (82ab4 <_dtoa_r+0x2c4>)
   82a54:	f002 fab4 	bl	84fc0 <__aeabi_dmul>
   82a58:	2200      	movs	r2, #0
   82a5a:	2300      	movs	r3, #0
   82a5c:	4606      	mov	r6, r0
   82a5e:	460f      	mov	r7, r1
   82a60:	f002 fd16 	bl	85490 <__aeabi_dcmpeq>
   82a64:	2800      	cmp	r0, #0
   82a66:	f040 8082 	bne.w	82b6e <_dtoa_r+0x37e>
   82a6a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   82a6e:	f04f 0a00 	mov.w	sl, #0
   82a72:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   82a76:	f04f 0b00 	mov.w	fp, #0
   82a7a:	940b      	str	r4, [sp, #44]	; 0x2c
   82a7c:	e029      	b.n	82ad2 <_dtoa_r+0x2e2>
   82a7e:	bf00      	nop
   82a80:	636f4361 	.word	0x636f4361
   82a84:	3fd287a7 	.word	0x3fd287a7
   82a88:	8b60c8b3 	.word	0x8b60c8b3
   82a8c:	3fc68a28 	.word	0x3fc68a28
   82a90:	509f79fb 	.word	0x509f79fb
   82a94:	3fd34413 	.word	0x3fd34413
   82a98:	7ff00000 	.word	0x7ff00000
   82a9c:	000858f5 	.word	0x000858f5
   82aa0:	00085918 	.word	0x00085918
   82aa4:	00085924 	.word	0x00085924
   82aa8:	3ff80000 	.word	0x3ff80000
   82aac:	00085960 	.word	0x00085960
   82ab0:	000858f4 	.word	0x000858f4
   82ab4:	40240000 	.word	0x40240000
   82ab8:	2200      	movs	r2, #0
   82aba:	4b81      	ldr	r3, [pc, #516]	; (82cc0 <_dtoa_r+0x4d0>)
   82abc:	f002 fa80 	bl	84fc0 <__aeabi_dmul>
   82ac0:	4652      	mov	r2, sl
   82ac2:	465b      	mov	r3, fp
   82ac4:	4606      	mov	r6, r0
   82ac6:	460f      	mov	r7, r1
   82ac8:	f002 fce2 	bl	85490 <__aeabi_dcmpeq>
   82acc:	2800      	cmp	r0, #0
   82ace:	f040 83ba 	bne.w	83246 <_dtoa_r+0xa56>
   82ad2:	4642      	mov	r2, r8
   82ad4:	464b      	mov	r3, r9
   82ad6:	4630      	mov	r0, r6
   82ad8:	4639      	mov	r1, r7
   82ada:	f002 fb9b 	bl	85214 <__aeabi_ddiv>
   82ade:	f002 fd1f 	bl	85520 <__aeabi_d2iz>
   82ae2:	4604      	mov	r4, r0
   82ae4:	f002 fa06 	bl	84ef4 <__aeabi_i2d>
   82ae8:	4642      	mov	r2, r8
   82aea:	464b      	mov	r3, r9
   82aec:	f002 fa68 	bl	84fc0 <__aeabi_dmul>
   82af0:	4602      	mov	r2, r0
   82af2:	460b      	mov	r3, r1
   82af4:	4630      	mov	r0, r6
   82af6:	4639      	mov	r1, r7
   82af8:	f002 f8ae 	bl	84c58 <__aeabi_dsub>
   82afc:	f104 0630 	add.w	r6, r4, #48	; 0x30
   82b00:	f805 6b01 	strb.w	r6, [r5], #1
   82b04:	9e04      	ldr	r6, [sp, #16]
   82b06:	9f07      	ldr	r7, [sp, #28]
   82b08:	1bae      	subs	r6, r5, r6
   82b0a:	42be      	cmp	r6, r7
   82b0c:	4602      	mov	r2, r0
   82b0e:	460b      	mov	r3, r1
   82b10:	d1d2      	bne.n	82ab8 <_dtoa_r+0x2c8>
   82b12:	46a0      	mov	r8, r4
   82b14:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   82b18:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   82b1a:	4610      	mov	r0, r2
   82b1c:	4619      	mov	r1, r3
   82b1e:	f002 f89d 	bl	84c5c <__adddf3>
   82b22:	4606      	mov	r6, r0
   82b24:	460f      	mov	r7, r1
   82b26:	4602      	mov	r2, r0
   82b28:	460b      	mov	r3, r1
   82b2a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   82b2e:	f002 fcb9 	bl	854a4 <__aeabi_dcmplt>
   82b32:	b948      	cbnz	r0, 82b48 <_dtoa_r+0x358>
   82b34:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   82b38:	4632      	mov	r2, r6
   82b3a:	463b      	mov	r3, r7
   82b3c:	f002 fca8 	bl	85490 <__aeabi_dcmpeq>
   82b40:	b1a8      	cbz	r0, 82b6e <_dtoa_r+0x37e>
   82b42:	f018 0f01 	tst.w	r8, #1
   82b46:	d012      	beq.n	82b6e <_dtoa_r+0x37e>
   82b48:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   82b4c:	1e6b      	subs	r3, r5, #1
   82b4e:	9a04      	ldr	r2, [sp, #16]
   82b50:	e004      	b.n	82b5c <_dtoa_r+0x36c>
   82b52:	429a      	cmp	r2, r3
   82b54:	f000 8402 	beq.w	8335c <_dtoa_r+0xb6c>
   82b58:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   82b5c:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   82b60:	f103 0501 	add.w	r5, r3, #1
   82b64:	d0f5      	beq.n	82b52 <_dtoa_r+0x362>
   82b66:	f108 0801 	add.w	r8, r8, #1
   82b6a:	f883 8000 	strb.w	r8, [r3]
   82b6e:	4649      	mov	r1, r9
   82b70:	4620      	mov	r0, r4
   82b72:	f001 fabf 	bl	840f4 <_Bfree>
   82b76:	2200      	movs	r2, #0
   82b78:	9b02      	ldr	r3, [sp, #8]
   82b7a:	702a      	strb	r2, [r5, #0]
   82b7c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   82b7e:	3301      	adds	r3, #1
   82b80:	6013      	str	r3, [r2, #0]
   82b82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   82b84:	2b00      	cmp	r3, #0
   82b86:	f000 839f 	beq.w	832c8 <_dtoa_r+0xad8>
   82b8a:	9804      	ldr	r0, [sp, #16]
   82b8c:	601d      	str	r5, [r3, #0]
   82b8e:	b01b      	add	sp, #108	; 0x6c
   82b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82b94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82b96:	2a00      	cmp	r2, #0
   82b98:	d03e      	beq.n	82c18 <_dtoa_r+0x428>
   82b9a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82b9c:	2a01      	cmp	r2, #1
   82b9e:	f340 8311 	ble.w	831c4 <_dtoa_r+0x9d4>
   82ba2:	9b07      	ldr	r3, [sp, #28]
   82ba4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82ba6:	1e5f      	subs	r7, r3, #1
   82ba8:	42ba      	cmp	r2, r7
   82baa:	f2c0 8390 	blt.w	832ce <_dtoa_r+0xade>
   82bae:	1bd7      	subs	r7, r2, r7
   82bb0:	9b07      	ldr	r3, [sp, #28]
   82bb2:	2b00      	cmp	r3, #0
   82bb4:	f2c0 848c 	blt.w	834d0 <_dtoa_r+0xce0>
   82bb8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82bba:	9b07      	ldr	r3, [sp, #28]
   82bbc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82bbe:	2101      	movs	r1, #1
   82bc0:	441a      	add	r2, r3
   82bc2:	920a      	str	r2, [sp, #40]	; 0x28
   82bc4:	9a08      	ldr	r2, [sp, #32]
   82bc6:	4620      	mov	r0, r4
   82bc8:	441a      	add	r2, r3
   82bca:	9208      	str	r2, [sp, #32]
   82bcc:	f001 fb2e 	bl	8422c <__i2b>
   82bd0:	4606      	mov	r6, r0
   82bd2:	e023      	b.n	82c1c <_dtoa_r+0x42c>
   82bd4:	2301      	movs	r3, #1
   82bd6:	930e      	str	r3, [sp, #56]	; 0x38
   82bd8:	e6b5      	b.n	82946 <_dtoa_r+0x156>
   82bda:	2300      	movs	r3, #0
   82bdc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82bde:	930d      	str	r3, [sp, #52]	; 0x34
   82be0:	9b02      	ldr	r3, [sp, #8]
   82be2:	1ad2      	subs	r2, r2, r3
   82be4:	425b      	negs	r3, r3
   82be6:	920a      	str	r2, [sp, #40]	; 0x28
   82be8:	930c      	str	r3, [sp, #48]	; 0x30
   82bea:	e6be      	b.n	8296a <_dtoa_r+0x17a>
   82bec:	f1c7 0301 	rsb	r3, r7, #1
   82bf0:	930a      	str	r3, [sp, #40]	; 0x28
   82bf2:	2300      	movs	r3, #0
   82bf4:	9308      	str	r3, [sp, #32]
   82bf6:	e6ad      	b.n	82954 <_dtoa_r+0x164>
   82bf8:	9d02      	ldr	r5, [sp, #8]
   82bfa:	4628      	mov	r0, r5
   82bfc:	f002 f97a 	bl	84ef4 <__aeabi_i2d>
   82c00:	4602      	mov	r2, r0
   82c02:	460b      	mov	r3, r1
   82c04:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82c08:	f002 fc42 	bl	85490 <__aeabi_dcmpeq>
   82c0c:	2800      	cmp	r0, #0
   82c0e:	f47f ae86 	bne.w	8291e <_dtoa_r+0x12e>
   82c12:	1e6b      	subs	r3, r5, #1
   82c14:	9302      	str	r3, [sp, #8]
   82c16:	e682      	b.n	8291e <_dtoa_r+0x12e>
   82c18:	ad0a      	add	r5, sp, #40	; 0x28
   82c1a:	cde0      	ldmia	r5, {r5, r6, r7}
   82c1c:	2d00      	cmp	r5, #0
   82c1e:	dd0c      	ble.n	82c3a <_dtoa_r+0x44a>
   82c20:	9908      	ldr	r1, [sp, #32]
   82c22:	2900      	cmp	r1, #0
   82c24:	460b      	mov	r3, r1
   82c26:	dd08      	ble.n	82c3a <_dtoa_r+0x44a>
   82c28:	42a9      	cmp	r1, r5
   82c2a:	bfa8      	it	ge
   82c2c:	462b      	movge	r3, r5
   82c2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82c30:	1aed      	subs	r5, r5, r3
   82c32:	1ad2      	subs	r2, r2, r3
   82c34:	1acb      	subs	r3, r1, r3
   82c36:	920a      	str	r2, [sp, #40]	; 0x28
   82c38:	9308      	str	r3, [sp, #32]
   82c3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82c3c:	b1d3      	cbz	r3, 82c74 <_dtoa_r+0x484>
   82c3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82c40:	2b00      	cmp	r3, #0
   82c42:	f000 82b8 	beq.w	831b6 <_dtoa_r+0x9c6>
   82c46:	2f00      	cmp	r7, #0
   82c48:	dd10      	ble.n	82c6c <_dtoa_r+0x47c>
   82c4a:	4631      	mov	r1, r6
   82c4c:	463a      	mov	r2, r7
   82c4e:	4620      	mov	r0, r4
   82c50:	f001 fb88 	bl	84364 <__pow5mult>
   82c54:	464a      	mov	r2, r9
   82c56:	4601      	mov	r1, r0
   82c58:	4606      	mov	r6, r0
   82c5a:	4620      	mov	r0, r4
   82c5c:	f001 faf0 	bl	84240 <__multiply>
   82c60:	4603      	mov	r3, r0
   82c62:	4649      	mov	r1, r9
   82c64:	4620      	mov	r0, r4
   82c66:	4699      	mov	r9, r3
   82c68:	f001 fa44 	bl	840f4 <_Bfree>
   82c6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82c6e:	1bda      	subs	r2, r3, r7
   82c70:	f040 82a2 	bne.w	831b8 <_dtoa_r+0x9c8>
   82c74:	2101      	movs	r1, #1
   82c76:	4620      	mov	r0, r4
   82c78:	f001 fad8 	bl	8422c <__i2b>
   82c7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82c7e:	4680      	mov	r8, r0
   82c80:	2b00      	cmp	r3, #0
   82c82:	dd1f      	ble.n	82cc4 <_dtoa_r+0x4d4>
   82c84:	4601      	mov	r1, r0
   82c86:	461a      	mov	r2, r3
   82c88:	4620      	mov	r0, r4
   82c8a:	f001 fb6b 	bl	84364 <__pow5mult>
   82c8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82c90:	4680      	mov	r8, r0
   82c92:	2b01      	cmp	r3, #1
   82c94:	f340 8255 	ble.w	83142 <_dtoa_r+0x952>
   82c98:	2300      	movs	r3, #0
   82c9a:	930c      	str	r3, [sp, #48]	; 0x30
   82c9c:	f8d8 3010 	ldr.w	r3, [r8, #16]
   82ca0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   82ca4:	6918      	ldr	r0, [r3, #16]
   82ca6:	f001 fa71 	bl	8418c <__hi0bits>
   82caa:	f1c0 0020 	rsb	r0, r0, #32
   82cae:	e013      	b.n	82cd8 <_dtoa_r+0x4e8>
   82cb0:	f1c3 0520 	rsb	r5, r3, #32
   82cb4:	fa0a f005 	lsl.w	r0, sl, r5
   82cb8:	e67b      	b.n	829b2 <_dtoa_r+0x1c2>
   82cba:	900e      	str	r0, [sp, #56]	; 0x38
   82cbc:	e643      	b.n	82946 <_dtoa_r+0x156>
   82cbe:	bf00      	nop
   82cc0:	40240000 	.word	0x40240000
   82cc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82cc6:	2b01      	cmp	r3, #1
   82cc8:	f340 8285 	ble.w	831d6 <_dtoa_r+0x9e6>
   82ccc:	2300      	movs	r3, #0
   82cce:	930c      	str	r3, [sp, #48]	; 0x30
   82cd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   82cd2:	2001      	movs	r0, #1
   82cd4:	2b00      	cmp	r3, #0
   82cd6:	d1e1      	bne.n	82c9c <_dtoa_r+0x4ac>
   82cd8:	9a08      	ldr	r2, [sp, #32]
   82cda:	4410      	add	r0, r2
   82cdc:	f010 001f 	ands.w	r0, r0, #31
   82ce0:	f000 80a1 	beq.w	82e26 <_dtoa_r+0x636>
   82ce4:	f1c0 0320 	rsb	r3, r0, #32
   82ce8:	2b04      	cmp	r3, #4
   82cea:	f340 8486 	ble.w	835fa <_dtoa_r+0xe0a>
   82cee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82cf0:	f1c0 001c 	rsb	r0, r0, #28
   82cf4:	4403      	add	r3, r0
   82cf6:	930a      	str	r3, [sp, #40]	; 0x28
   82cf8:	4613      	mov	r3, r2
   82cfa:	4403      	add	r3, r0
   82cfc:	4405      	add	r5, r0
   82cfe:	9308      	str	r3, [sp, #32]
   82d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82d02:	2b00      	cmp	r3, #0
   82d04:	dd05      	ble.n	82d12 <_dtoa_r+0x522>
   82d06:	4649      	mov	r1, r9
   82d08:	461a      	mov	r2, r3
   82d0a:	4620      	mov	r0, r4
   82d0c:	f001 fb7a 	bl	84404 <__lshift>
   82d10:	4681      	mov	r9, r0
   82d12:	9b08      	ldr	r3, [sp, #32]
   82d14:	2b00      	cmp	r3, #0
   82d16:	dd05      	ble.n	82d24 <_dtoa_r+0x534>
   82d18:	4641      	mov	r1, r8
   82d1a:	461a      	mov	r2, r3
   82d1c:	4620      	mov	r0, r4
   82d1e:	f001 fb71 	bl	84404 <__lshift>
   82d22:	4680      	mov	r8, r0
   82d24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82d26:	2b00      	cmp	r3, #0
   82d28:	f040 8086 	bne.w	82e38 <_dtoa_r+0x648>
   82d2c:	9b07      	ldr	r3, [sp, #28]
   82d2e:	2b00      	cmp	r3, #0
   82d30:	f340 8264 	ble.w	831fc <_dtoa_r+0xa0c>
   82d34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82d36:	2b00      	cmp	r3, #0
   82d38:	f000 8098 	beq.w	82e6c <_dtoa_r+0x67c>
   82d3c:	2d00      	cmp	r5, #0
   82d3e:	dd05      	ble.n	82d4c <_dtoa_r+0x55c>
   82d40:	4631      	mov	r1, r6
   82d42:	462a      	mov	r2, r5
   82d44:	4620      	mov	r0, r4
   82d46:	f001 fb5d 	bl	84404 <__lshift>
   82d4a:	4606      	mov	r6, r0
   82d4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   82d4e:	2b00      	cmp	r3, #0
   82d50:	f040 8336 	bne.w	833c0 <_dtoa_r+0xbd0>
   82d54:	9608      	str	r6, [sp, #32]
   82d56:	9b07      	ldr	r3, [sp, #28]
   82d58:	9a04      	ldr	r2, [sp, #16]
   82d5a:	3b01      	subs	r3, #1
   82d5c:	18d3      	adds	r3, r2, r3
   82d5e:	930b      	str	r3, [sp, #44]	; 0x2c
   82d60:	4617      	mov	r7, r2
   82d62:	f00a 0301 	and.w	r3, sl, #1
   82d66:	46c2      	mov	sl, r8
   82d68:	f8dd b020 	ldr.w	fp, [sp, #32]
   82d6c:	930c      	str	r3, [sp, #48]	; 0x30
   82d6e:	4651      	mov	r1, sl
   82d70:	4648      	mov	r0, r9
   82d72:	f7ff fca7 	bl	826c4 <quorem>
   82d76:	4631      	mov	r1, r6
   82d78:	4605      	mov	r5, r0
   82d7a:	4648      	mov	r0, r9
   82d7c:	f001 fb92 	bl	844a4 <__mcmp>
   82d80:	465a      	mov	r2, fp
   82d82:	9007      	str	r0, [sp, #28]
   82d84:	4651      	mov	r1, sl
   82d86:	4620      	mov	r0, r4
   82d88:	f001 fba8 	bl	844dc <__mdiff>
   82d8c:	68c2      	ldr	r2, [r0, #12]
   82d8e:	4680      	mov	r8, r0
   82d90:	f105 0330 	add.w	r3, r5, #48	; 0x30
   82d94:	2a00      	cmp	r2, #0
   82d96:	f040 8229 	bne.w	831ec <_dtoa_r+0x9fc>
   82d9a:	4601      	mov	r1, r0
   82d9c:	4648      	mov	r0, r9
   82d9e:	930a      	str	r3, [sp, #40]	; 0x28
   82da0:	f001 fb80 	bl	844a4 <__mcmp>
   82da4:	4641      	mov	r1, r8
   82da6:	9008      	str	r0, [sp, #32]
   82da8:	4620      	mov	r0, r4
   82daa:	f001 f9a3 	bl	840f4 <_Bfree>
   82dae:	9a08      	ldr	r2, [sp, #32]
   82db0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82db2:	b932      	cbnz	r2, 82dc2 <_dtoa_r+0x5d2>
   82db4:	9924      	ldr	r1, [sp, #144]	; 0x90
   82db6:	b921      	cbnz	r1, 82dc2 <_dtoa_r+0x5d2>
   82db8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82dba:	2a00      	cmp	r2, #0
   82dbc:	f000 83ee 	beq.w	8359c <_dtoa_r+0xdac>
   82dc0:	9a24      	ldr	r2, [sp, #144]	; 0x90
   82dc2:	9907      	ldr	r1, [sp, #28]
   82dc4:	2900      	cmp	r1, #0
   82dc6:	f2c0 829f 	blt.w	83308 <_dtoa_r+0xb18>
   82dca:	d105      	bne.n	82dd8 <_dtoa_r+0x5e8>
   82dcc:	9924      	ldr	r1, [sp, #144]	; 0x90
   82dce:	b919      	cbnz	r1, 82dd8 <_dtoa_r+0x5e8>
   82dd0:	990c      	ldr	r1, [sp, #48]	; 0x30
   82dd2:	2900      	cmp	r1, #0
   82dd4:	f000 8298 	beq.w	83308 <_dtoa_r+0xb18>
   82dd8:	2a00      	cmp	r2, #0
   82dda:	f300 8305 	bgt.w	833e8 <_dtoa_r+0xbf8>
   82dde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82de0:	f107 0801 	add.w	r8, r7, #1
   82de4:	4297      	cmp	r7, r2
   82de6:	703b      	strb	r3, [r7, #0]
   82de8:	4645      	mov	r5, r8
   82dea:	f000 830b 	beq.w	83404 <_dtoa_r+0xc14>
   82dee:	4649      	mov	r1, r9
   82df0:	2300      	movs	r3, #0
   82df2:	220a      	movs	r2, #10
   82df4:	4620      	mov	r0, r4
   82df6:	f001 f987 	bl	84108 <__multadd>
   82dfa:	455e      	cmp	r6, fp
   82dfc:	4681      	mov	r9, r0
   82dfe:	4631      	mov	r1, r6
   82e00:	f04f 0300 	mov.w	r3, #0
   82e04:	f04f 020a 	mov.w	r2, #10
   82e08:	4620      	mov	r0, r4
   82e0a:	f000 81e9 	beq.w	831e0 <_dtoa_r+0x9f0>
   82e0e:	f001 f97b 	bl	84108 <__multadd>
   82e12:	4659      	mov	r1, fp
   82e14:	4606      	mov	r6, r0
   82e16:	2300      	movs	r3, #0
   82e18:	220a      	movs	r2, #10
   82e1a:	4620      	mov	r0, r4
   82e1c:	f001 f974 	bl	84108 <__multadd>
   82e20:	4647      	mov	r7, r8
   82e22:	4683      	mov	fp, r0
   82e24:	e7a3      	b.n	82d6e <_dtoa_r+0x57e>
   82e26:	201c      	movs	r0, #28
   82e28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82e2a:	4405      	add	r5, r0
   82e2c:	4403      	add	r3, r0
   82e2e:	930a      	str	r3, [sp, #40]	; 0x28
   82e30:	9b08      	ldr	r3, [sp, #32]
   82e32:	4403      	add	r3, r0
   82e34:	9308      	str	r3, [sp, #32]
   82e36:	e763      	b.n	82d00 <_dtoa_r+0x510>
   82e38:	4641      	mov	r1, r8
   82e3a:	4648      	mov	r0, r9
   82e3c:	f001 fb32 	bl	844a4 <__mcmp>
   82e40:	2800      	cmp	r0, #0
   82e42:	f6bf af73 	bge.w	82d2c <_dtoa_r+0x53c>
   82e46:	9f02      	ldr	r7, [sp, #8]
   82e48:	4649      	mov	r1, r9
   82e4a:	2300      	movs	r3, #0
   82e4c:	220a      	movs	r2, #10
   82e4e:	4620      	mov	r0, r4
   82e50:	3f01      	subs	r7, #1
   82e52:	9702      	str	r7, [sp, #8]
   82e54:	f001 f958 	bl	84108 <__multadd>
   82e58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82e5a:	4681      	mov	r9, r0
   82e5c:	2b00      	cmp	r3, #0
   82e5e:	f040 83b5 	bne.w	835cc <_dtoa_r+0xddc>
   82e62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   82e64:	2b00      	cmp	r3, #0
   82e66:	f340 83be 	ble.w	835e6 <_dtoa_r+0xdf6>
   82e6a:	9307      	str	r3, [sp, #28]
   82e6c:	f8dd a010 	ldr.w	sl, [sp, #16]
   82e70:	9f07      	ldr	r7, [sp, #28]
   82e72:	4655      	mov	r5, sl
   82e74:	e006      	b.n	82e84 <_dtoa_r+0x694>
   82e76:	4649      	mov	r1, r9
   82e78:	2300      	movs	r3, #0
   82e7a:	220a      	movs	r2, #10
   82e7c:	4620      	mov	r0, r4
   82e7e:	f001 f943 	bl	84108 <__multadd>
   82e82:	4681      	mov	r9, r0
   82e84:	4641      	mov	r1, r8
   82e86:	4648      	mov	r0, r9
   82e88:	f7ff fc1c 	bl	826c4 <quorem>
   82e8c:	3030      	adds	r0, #48	; 0x30
   82e8e:	f805 0b01 	strb.w	r0, [r5], #1
   82e92:	eba5 030a 	sub.w	r3, r5, sl
   82e96:	42bb      	cmp	r3, r7
   82e98:	dbed      	blt.n	82e76 <_dtoa_r+0x686>
   82e9a:	9b04      	ldr	r3, [sp, #16]
   82e9c:	9a07      	ldr	r2, [sp, #28]
   82e9e:	4682      	mov	sl, r0
   82ea0:	2a01      	cmp	r2, #1
   82ea2:	bfac      	ite	ge
   82ea4:	189b      	addge	r3, r3, r2
   82ea6:	3301      	addlt	r3, #1
   82ea8:	f04f 0b00 	mov.w	fp, #0
   82eac:	461d      	mov	r5, r3
   82eae:	4649      	mov	r1, r9
   82eb0:	2201      	movs	r2, #1
   82eb2:	4620      	mov	r0, r4
   82eb4:	f001 faa6 	bl	84404 <__lshift>
   82eb8:	4641      	mov	r1, r8
   82eba:	4681      	mov	r9, r0
   82ebc:	f001 faf2 	bl	844a4 <__mcmp>
   82ec0:	2800      	cmp	r0, #0
   82ec2:	f340 823f 	ble.w	83344 <_dtoa_r+0xb54>
   82ec6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   82eca:	1e6b      	subs	r3, r5, #1
   82ecc:	9904      	ldr	r1, [sp, #16]
   82ece:	e004      	b.n	82eda <_dtoa_r+0x6ea>
   82ed0:	428b      	cmp	r3, r1
   82ed2:	f000 81ae 	beq.w	83232 <_dtoa_r+0xa42>
   82ed6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   82eda:	2a39      	cmp	r2, #57	; 0x39
   82edc:	f103 0501 	add.w	r5, r3, #1
   82ee0:	d0f6      	beq.n	82ed0 <_dtoa_r+0x6e0>
   82ee2:	3201      	adds	r2, #1
   82ee4:	701a      	strb	r2, [r3, #0]
   82ee6:	4641      	mov	r1, r8
   82ee8:	4620      	mov	r0, r4
   82eea:	f001 f903 	bl	840f4 <_Bfree>
   82eee:	2e00      	cmp	r6, #0
   82ef0:	f43f ae3d 	beq.w	82b6e <_dtoa_r+0x37e>
   82ef4:	f1bb 0f00 	cmp.w	fp, #0
   82ef8:	d005      	beq.n	82f06 <_dtoa_r+0x716>
   82efa:	45b3      	cmp	fp, r6
   82efc:	d003      	beq.n	82f06 <_dtoa_r+0x716>
   82efe:	4659      	mov	r1, fp
   82f00:	4620      	mov	r0, r4
   82f02:	f001 f8f7 	bl	840f4 <_Bfree>
   82f06:	4631      	mov	r1, r6
   82f08:	4620      	mov	r0, r4
   82f0a:	f001 f8f3 	bl	840f4 <_Bfree>
   82f0e:	e62e      	b.n	82b6e <_dtoa_r+0x37e>
   82f10:	2300      	movs	r3, #0
   82f12:	930b      	str	r3, [sp, #44]	; 0x2c
   82f14:	9b02      	ldr	r3, [sp, #8]
   82f16:	9a25      	ldr	r2, [sp, #148]	; 0x94
   82f18:	4413      	add	r3, r2
   82f1a:	930f      	str	r3, [sp, #60]	; 0x3c
   82f1c:	3301      	adds	r3, #1
   82f1e:	2b01      	cmp	r3, #1
   82f20:	461f      	mov	r7, r3
   82f22:	461e      	mov	r6, r3
   82f24:	bfb8      	it	lt
   82f26:	2701      	movlt	r7, #1
   82f28:	9307      	str	r3, [sp, #28]
   82f2a:	2100      	movs	r1, #0
   82f2c:	2f17      	cmp	r7, #23
   82f2e:	6461      	str	r1, [r4, #68]	; 0x44
   82f30:	d90a      	bls.n	82f48 <_dtoa_r+0x758>
   82f32:	2201      	movs	r2, #1
   82f34:	2304      	movs	r3, #4
   82f36:	005b      	lsls	r3, r3, #1
   82f38:	f103 0014 	add.w	r0, r3, #20
   82f3c:	4287      	cmp	r7, r0
   82f3e:	4611      	mov	r1, r2
   82f40:	f102 0201 	add.w	r2, r2, #1
   82f44:	d2f7      	bcs.n	82f36 <_dtoa_r+0x746>
   82f46:	6461      	str	r1, [r4, #68]	; 0x44
   82f48:	4620      	mov	r0, r4
   82f4a:	f001 f8ad 	bl	840a8 <_Balloc>
   82f4e:	2e0e      	cmp	r6, #14
   82f50:	9004      	str	r0, [sp, #16]
   82f52:	6420      	str	r0, [r4, #64]	; 0x40
   82f54:	f63f ad47 	bhi.w	829e6 <_dtoa_r+0x1f6>
   82f58:	2d00      	cmp	r5, #0
   82f5a:	f43f ad44 	beq.w	829e6 <_dtoa_r+0x1f6>
   82f5e:	9902      	ldr	r1, [sp, #8]
   82f60:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   82f64:	2900      	cmp	r1, #0
   82f66:	f340 8203 	ble.w	83370 <_dtoa_r+0xb80>
   82f6a:	4bb9      	ldr	r3, [pc, #740]	; (83250 <_dtoa_r+0xa60>)
   82f6c:	f001 020f 	and.w	r2, r1, #15
   82f70:	110d      	asrs	r5, r1, #4
   82f72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82f76:	06e9      	lsls	r1, r5, #27
   82f78:	e9d3 6700 	ldrd	r6, r7, [r3]
   82f7c:	f140 81af 	bpl.w	832de <_dtoa_r+0xaee>
   82f80:	4bb4      	ldr	r3, [pc, #720]	; (83254 <_dtoa_r+0xa64>)
   82f82:	4650      	mov	r0, sl
   82f84:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82f88:	4659      	mov	r1, fp
   82f8a:	f002 f943 	bl	85214 <__aeabi_ddiv>
   82f8e:	f04f 0a03 	mov.w	sl, #3
   82f92:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   82f96:	f005 050f 	and.w	r5, r5, #15
   82f9a:	b18d      	cbz	r5, 82fc0 <_dtoa_r+0x7d0>
   82f9c:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 83254 <_dtoa_r+0xa64>
   82fa0:	07ea      	lsls	r2, r5, #31
   82fa2:	d509      	bpl.n	82fb8 <_dtoa_r+0x7c8>
   82fa4:	e9d8 2300 	ldrd	r2, r3, [r8]
   82fa8:	4630      	mov	r0, r6
   82faa:	4639      	mov	r1, r7
   82fac:	f002 f808 	bl	84fc0 <__aeabi_dmul>
   82fb0:	4606      	mov	r6, r0
   82fb2:	460f      	mov	r7, r1
   82fb4:	f10a 0a01 	add.w	sl, sl, #1
   82fb8:	106d      	asrs	r5, r5, #1
   82fba:	f108 0808 	add.w	r8, r8, #8
   82fbe:	d1ef      	bne.n	82fa0 <_dtoa_r+0x7b0>
   82fc0:	463b      	mov	r3, r7
   82fc2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82fc6:	4632      	mov	r2, r6
   82fc8:	f002 f924 	bl	85214 <__aeabi_ddiv>
   82fcc:	4607      	mov	r7, r0
   82fce:	4688      	mov	r8, r1
   82fd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82fd2:	b143      	cbz	r3, 82fe6 <_dtoa_r+0x7f6>
   82fd4:	2200      	movs	r2, #0
   82fd6:	4ba0      	ldr	r3, [pc, #640]	; (83258 <_dtoa_r+0xa68>)
   82fd8:	4638      	mov	r0, r7
   82fda:	4641      	mov	r1, r8
   82fdc:	f002 fa62 	bl	854a4 <__aeabi_dcmplt>
   82fe0:	2800      	cmp	r0, #0
   82fe2:	f040 8287 	bne.w	834f4 <_dtoa_r+0xd04>
   82fe6:	4650      	mov	r0, sl
   82fe8:	f001 ff84 	bl	84ef4 <__aeabi_i2d>
   82fec:	463a      	mov	r2, r7
   82fee:	4643      	mov	r3, r8
   82ff0:	f001 ffe6 	bl	84fc0 <__aeabi_dmul>
   82ff4:	4b99      	ldr	r3, [pc, #612]	; (8325c <_dtoa_r+0xa6c>)
   82ff6:	2200      	movs	r2, #0
   82ff8:	f001 fe30 	bl	84c5c <__adddf3>
   82ffc:	9b07      	ldr	r3, [sp, #28]
   82ffe:	4605      	mov	r5, r0
   83000:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83004:	2b00      	cmp	r3, #0
   83006:	f000 813f 	beq.w	83288 <_dtoa_r+0xa98>
   8300a:	9b02      	ldr	r3, [sp, #8]
   8300c:	9315      	str	r3, [sp, #84]	; 0x54
   8300e:	9b07      	ldr	r3, [sp, #28]
   83010:	9312      	str	r3, [sp, #72]	; 0x48
   83012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83014:	2b00      	cmp	r3, #0
   83016:	f000 81fb 	beq.w	83410 <_dtoa_r+0xc20>
   8301a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8301c:	4b8c      	ldr	r3, [pc, #560]	; (83250 <_dtoa_r+0xa60>)
   8301e:	2000      	movs	r0, #0
   83020:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83024:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   83028:	498d      	ldr	r1, [pc, #564]	; (83260 <_dtoa_r+0xa70>)
   8302a:	f002 f8f3 	bl	85214 <__aeabi_ddiv>
   8302e:	462a      	mov	r2, r5
   83030:	4633      	mov	r3, r6
   83032:	f001 fe11 	bl	84c58 <__aeabi_dsub>
   83036:	4682      	mov	sl, r0
   83038:	468b      	mov	fp, r1
   8303a:	4638      	mov	r0, r7
   8303c:	4641      	mov	r1, r8
   8303e:	f002 fa6f 	bl	85520 <__aeabi_d2iz>
   83042:	4605      	mov	r5, r0
   83044:	f001 ff56 	bl	84ef4 <__aeabi_i2d>
   83048:	4602      	mov	r2, r0
   8304a:	460b      	mov	r3, r1
   8304c:	4638      	mov	r0, r7
   8304e:	4641      	mov	r1, r8
   83050:	f001 fe02 	bl	84c58 <__aeabi_dsub>
   83054:	3530      	adds	r5, #48	; 0x30
   83056:	fa5f f885 	uxtb.w	r8, r5
   8305a:	9d04      	ldr	r5, [sp, #16]
   8305c:	4606      	mov	r6, r0
   8305e:	460f      	mov	r7, r1
   83060:	f885 8000 	strb.w	r8, [r5]
   83064:	4602      	mov	r2, r0
   83066:	460b      	mov	r3, r1
   83068:	4650      	mov	r0, sl
   8306a:	4659      	mov	r1, fp
   8306c:	3501      	adds	r5, #1
   8306e:	f002 fa37 	bl	854e0 <__aeabi_dcmpgt>
   83072:	2800      	cmp	r0, #0
   83074:	d154      	bne.n	83120 <_dtoa_r+0x930>
   83076:	4632      	mov	r2, r6
   83078:	463b      	mov	r3, r7
   8307a:	2000      	movs	r0, #0
   8307c:	4976      	ldr	r1, [pc, #472]	; (83258 <_dtoa_r+0xa68>)
   8307e:	f001 fdeb 	bl	84c58 <__aeabi_dsub>
   83082:	4602      	mov	r2, r0
   83084:	460b      	mov	r3, r1
   83086:	4650      	mov	r0, sl
   83088:	4659      	mov	r1, fp
   8308a:	f002 fa29 	bl	854e0 <__aeabi_dcmpgt>
   8308e:	2800      	cmp	r0, #0
   83090:	f040 8270 	bne.w	83574 <_dtoa_r+0xd84>
   83094:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83096:	2a01      	cmp	r2, #1
   83098:	f000 8112 	beq.w	832c0 <_dtoa_r+0xad0>
   8309c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8309e:	9a04      	ldr	r2, [sp, #16]
   830a0:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   830a4:	4413      	add	r3, r2
   830a6:	4699      	mov	r9, r3
   830a8:	e00f      	b.n	830ca <_dtoa_r+0x8da>
   830aa:	4632      	mov	r2, r6
   830ac:	463b      	mov	r3, r7
   830ae:	2000      	movs	r0, #0
   830b0:	4969      	ldr	r1, [pc, #420]	; (83258 <_dtoa_r+0xa68>)
   830b2:	f001 fdd1 	bl	84c58 <__aeabi_dsub>
   830b6:	4652      	mov	r2, sl
   830b8:	465b      	mov	r3, fp
   830ba:	f002 f9f3 	bl	854a4 <__aeabi_dcmplt>
   830be:	2800      	cmp	r0, #0
   830c0:	f040 8256 	bne.w	83570 <_dtoa_r+0xd80>
   830c4:	454d      	cmp	r5, r9
   830c6:	f000 80f9 	beq.w	832bc <_dtoa_r+0xacc>
   830ca:	4650      	mov	r0, sl
   830cc:	4659      	mov	r1, fp
   830ce:	2200      	movs	r2, #0
   830d0:	4b64      	ldr	r3, [pc, #400]	; (83264 <_dtoa_r+0xa74>)
   830d2:	f001 ff75 	bl	84fc0 <__aeabi_dmul>
   830d6:	2200      	movs	r2, #0
   830d8:	4b62      	ldr	r3, [pc, #392]	; (83264 <_dtoa_r+0xa74>)
   830da:	4682      	mov	sl, r0
   830dc:	468b      	mov	fp, r1
   830de:	4630      	mov	r0, r6
   830e0:	4639      	mov	r1, r7
   830e2:	f001 ff6d 	bl	84fc0 <__aeabi_dmul>
   830e6:	460f      	mov	r7, r1
   830e8:	4606      	mov	r6, r0
   830ea:	f002 fa19 	bl	85520 <__aeabi_d2iz>
   830ee:	4680      	mov	r8, r0
   830f0:	f001 ff00 	bl	84ef4 <__aeabi_i2d>
   830f4:	4602      	mov	r2, r0
   830f6:	460b      	mov	r3, r1
   830f8:	4630      	mov	r0, r6
   830fa:	4639      	mov	r1, r7
   830fc:	f001 fdac 	bl	84c58 <__aeabi_dsub>
   83100:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83104:	fa5f f888 	uxtb.w	r8, r8
   83108:	f805 8b01 	strb.w	r8, [r5], #1
   8310c:	4652      	mov	r2, sl
   8310e:	465b      	mov	r3, fp
   83110:	4606      	mov	r6, r0
   83112:	460f      	mov	r7, r1
   83114:	f002 f9c6 	bl	854a4 <__aeabi_dcmplt>
   83118:	2800      	cmp	r0, #0
   8311a:	d0c6      	beq.n	830aa <_dtoa_r+0x8ba>
   8311c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83120:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83122:	9302      	str	r3, [sp, #8]
   83124:	e523      	b.n	82b6e <_dtoa_r+0x37e>
   83126:	2300      	movs	r3, #0
   83128:	930b      	str	r3, [sp, #44]	; 0x2c
   8312a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8312c:	2b00      	cmp	r3, #0
   8312e:	f340 80dd 	ble.w	832ec <_dtoa_r+0xafc>
   83132:	461f      	mov	r7, r3
   83134:	461e      	mov	r6, r3
   83136:	930f      	str	r3, [sp, #60]	; 0x3c
   83138:	9307      	str	r3, [sp, #28]
   8313a:	e6f6      	b.n	82f2a <_dtoa_r+0x73a>
   8313c:	2301      	movs	r3, #1
   8313e:	930b      	str	r3, [sp, #44]	; 0x2c
   83140:	e7f3      	b.n	8312a <_dtoa_r+0x93a>
   83142:	f1ba 0f00 	cmp.w	sl, #0
   83146:	f47f ada7 	bne.w	82c98 <_dtoa_r+0x4a8>
   8314a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   8314e:	2b00      	cmp	r3, #0
   83150:	f47f adbc 	bne.w	82ccc <_dtoa_r+0x4dc>
   83154:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   83158:	0d3f      	lsrs	r7, r7, #20
   8315a:	053f      	lsls	r7, r7, #20
   8315c:	2f00      	cmp	r7, #0
   8315e:	f000 820d 	beq.w	8357c <_dtoa_r+0xd8c>
   83162:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83164:	3301      	adds	r3, #1
   83166:	930a      	str	r3, [sp, #40]	; 0x28
   83168:	9b08      	ldr	r3, [sp, #32]
   8316a:	3301      	adds	r3, #1
   8316c:	9308      	str	r3, [sp, #32]
   8316e:	2301      	movs	r3, #1
   83170:	930c      	str	r3, [sp, #48]	; 0x30
   83172:	e5ad      	b.n	82cd0 <_dtoa_r+0x4e0>
   83174:	9b07      	ldr	r3, [sp, #28]
   83176:	2b00      	cmp	r3, #0
   83178:	f73f ac48 	bgt.w	82a0c <_dtoa_r+0x21c>
   8317c:	f040 8222 	bne.w	835c4 <_dtoa_r+0xdd4>
   83180:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   83184:	2200      	movs	r2, #0
   83186:	4b38      	ldr	r3, [pc, #224]	; (83268 <_dtoa_r+0xa78>)
   83188:	f001 ff1a 	bl	84fc0 <__aeabi_dmul>
   8318c:	4652      	mov	r2, sl
   8318e:	465b      	mov	r3, fp
   83190:	f002 f99c 	bl	854cc <__aeabi_dcmpge>
   83194:	f8dd 801c 	ldr.w	r8, [sp, #28]
   83198:	4646      	mov	r6, r8
   8319a:	2800      	cmp	r0, #0
   8319c:	d041      	beq.n	83222 <_dtoa_r+0xa32>
   8319e:	9b25      	ldr	r3, [sp, #148]	; 0x94
   831a0:	9d04      	ldr	r5, [sp, #16]
   831a2:	43db      	mvns	r3, r3
   831a4:	9302      	str	r3, [sp, #8]
   831a6:	4641      	mov	r1, r8
   831a8:	4620      	mov	r0, r4
   831aa:	f000 ffa3 	bl	840f4 <_Bfree>
   831ae:	2e00      	cmp	r6, #0
   831b0:	f43f acdd 	beq.w	82b6e <_dtoa_r+0x37e>
   831b4:	e6a7      	b.n	82f06 <_dtoa_r+0x716>
   831b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   831b8:	4649      	mov	r1, r9
   831ba:	4620      	mov	r0, r4
   831bc:	f001 f8d2 	bl	84364 <__pow5mult>
   831c0:	4681      	mov	r9, r0
   831c2:	e557      	b.n	82c74 <_dtoa_r+0x484>
   831c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
   831c6:	2a00      	cmp	r2, #0
   831c8:	f000 8188 	beq.w	834dc <_dtoa_r+0xcec>
   831cc:	f203 4333 	addw	r3, r3, #1075	; 0x433
   831d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   831d2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   831d4:	e4f2      	b.n	82bbc <_dtoa_r+0x3cc>
   831d6:	f1ba 0f00 	cmp.w	sl, #0
   831da:	f47f ad77 	bne.w	82ccc <_dtoa_r+0x4dc>
   831de:	e7b4      	b.n	8314a <_dtoa_r+0x95a>
   831e0:	f000 ff92 	bl	84108 <__multadd>
   831e4:	4647      	mov	r7, r8
   831e6:	4606      	mov	r6, r0
   831e8:	4683      	mov	fp, r0
   831ea:	e5c0      	b.n	82d6e <_dtoa_r+0x57e>
   831ec:	4601      	mov	r1, r0
   831ee:	4620      	mov	r0, r4
   831f0:	9308      	str	r3, [sp, #32]
   831f2:	f000 ff7f 	bl	840f4 <_Bfree>
   831f6:	2201      	movs	r2, #1
   831f8:	9b08      	ldr	r3, [sp, #32]
   831fa:	e5e2      	b.n	82dc2 <_dtoa_r+0x5d2>
   831fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   831fe:	2b02      	cmp	r3, #2
   83200:	f77f ad98 	ble.w	82d34 <_dtoa_r+0x544>
   83204:	9b07      	ldr	r3, [sp, #28]
   83206:	2b00      	cmp	r3, #0
   83208:	d1c9      	bne.n	8319e <_dtoa_r+0x9ae>
   8320a:	4641      	mov	r1, r8
   8320c:	2205      	movs	r2, #5
   8320e:	4620      	mov	r0, r4
   83210:	f000 ff7a 	bl	84108 <__multadd>
   83214:	4601      	mov	r1, r0
   83216:	4680      	mov	r8, r0
   83218:	4648      	mov	r0, r9
   8321a:	f001 f943 	bl	844a4 <__mcmp>
   8321e:	2800      	cmp	r0, #0
   83220:	ddbd      	ble.n	8319e <_dtoa_r+0x9ae>
   83222:	2331      	movs	r3, #49	; 0x31
   83224:	9a02      	ldr	r2, [sp, #8]
   83226:	9904      	ldr	r1, [sp, #16]
   83228:	3201      	adds	r2, #1
   8322a:	9202      	str	r2, [sp, #8]
   8322c:	700b      	strb	r3, [r1, #0]
   8322e:	1c4d      	adds	r5, r1, #1
   83230:	e7b9      	b.n	831a6 <_dtoa_r+0x9b6>
   83232:	2331      	movs	r3, #49	; 0x31
   83234:	9a02      	ldr	r2, [sp, #8]
   83236:	3201      	adds	r2, #1
   83238:	9202      	str	r2, [sp, #8]
   8323a:	9a04      	ldr	r2, [sp, #16]
   8323c:	7013      	strb	r3, [r2, #0]
   8323e:	e652      	b.n	82ee6 <_dtoa_r+0x6f6>
   83240:	2301      	movs	r3, #1
   83242:	930b      	str	r3, [sp, #44]	; 0x2c
   83244:	e666      	b.n	82f14 <_dtoa_r+0x724>
   83246:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   8324a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8324c:	e48f      	b.n	82b6e <_dtoa_r+0x37e>
   8324e:	bf00      	nop
   83250:	00085960 	.word	0x00085960
   83254:	00085938 	.word	0x00085938
   83258:	3ff00000 	.word	0x3ff00000
   8325c:	401c0000 	.word	0x401c0000
   83260:	3fe00000 	.word	0x3fe00000
   83264:	40240000 	.word	0x40240000
   83268:	40140000 	.word	0x40140000
   8326c:	4650      	mov	r0, sl
   8326e:	f001 fe41 	bl	84ef4 <__aeabi_i2d>
   83272:	463a      	mov	r2, r7
   83274:	4643      	mov	r3, r8
   83276:	f001 fea3 	bl	84fc0 <__aeabi_dmul>
   8327a:	2200      	movs	r2, #0
   8327c:	4bc1      	ldr	r3, [pc, #772]	; (83584 <_dtoa_r+0xd94>)
   8327e:	f001 fced 	bl	84c5c <__adddf3>
   83282:	4605      	mov	r5, r0
   83284:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   83288:	4641      	mov	r1, r8
   8328a:	2200      	movs	r2, #0
   8328c:	4bbe      	ldr	r3, [pc, #760]	; (83588 <_dtoa_r+0xd98>)
   8328e:	4638      	mov	r0, r7
   83290:	f001 fce2 	bl	84c58 <__aeabi_dsub>
   83294:	462a      	mov	r2, r5
   83296:	4633      	mov	r3, r6
   83298:	4682      	mov	sl, r0
   8329a:	468b      	mov	fp, r1
   8329c:	f002 f920 	bl	854e0 <__aeabi_dcmpgt>
   832a0:	4680      	mov	r8, r0
   832a2:	2800      	cmp	r0, #0
   832a4:	f040 8110 	bne.w	834c8 <_dtoa_r+0xcd8>
   832a8:	462a      	mov	r2, r5
   832aa:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   832ae:	4650      	mov	r0, sl
   832b0:	4659      	mov	r1, fp
   832b2:	f002 f8f7 	bl	854a4 <__aeabi_dcmplt>
   832b6:	b118      	cbz	r0, 832c0 <_dtoa_r+0xad0>
   832b8:	4646      	mov	r6, r8
   832ba:	e770      	b.n	8319e <_dtoa_r+0x9ae>
   832bc:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   832c0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   832c4:	f7ff bb8f 	b.w	829e6 <_dtoa_r+0x1f6>
   832c8:	9804      	ldr	r0, [sp, #16]
   832ca:	f7ff bac0 	b.w	8284e <_dtoa_r+0x5e>
   832ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   832d0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   832d2:	1afb      	subs	r3, r7, r3
   832d4:	441a      	add	r2, r3
   832d6:	970c      	str	r7, [sp, #48]	; 0x30
   832d8:	920d      	str	r2, [sp, #52]	; 0x34
   832da:	2700      	movs	r7, #0
   832dc:	e468      	b.n	82bb0 <_dtoa_r+0x3c0>
   832de:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   832e2:	f04f 0a02 	mov.w	sl, #2
   832e6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   832ea:	e656      	b.n	82f9a <_dtoa_r+0x7aa>
   832ec:	2100      	movs	r1, #0
   832ee:	2301      	movs	r3, #1
   832f0:	4620      	mov	r0, r4
   832f2:	6461      	str	r1, [r4, #68]	; 0x44
   832f4:	9325      	str	r3, [sp, #148]	; 0x94
   832f6:	f000 fed7 	bl	840a8 <_Balloc>
   832fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
   832fc:	9004      	str	r0, [sp, #16]
   832fe:	9307      	str	r3, [sp, #28]
   83300:	9b25      	ldr	r3, [sp, #148]	; 0x94
   83302:	6420      	str	r0, [r4, #64]	; 0x40
   83304:	930f      	str	r3, [sp, #60]	; 0x3c
   83306:	e627      	b.n	82f58 <_dtoa_r+0x768>
   83308:	2a00      	cmp	r2, #0
   8330a:	46d0      	mov	r8, sl
   8330c:	f8cd b020 	str.w	fp, [sp, #32]
   83310:	469a      	mov	sl, r3
   83312:	dd11      	ble.n	83338 <_dtoa_r+0xb48>
   83314:	4649      	mov	r1, r9
   83316:	2201      	movs	r2, #1
   83318:	4620      	mov	r0, r4
   8331a:	f001 f873 	bl	84404 <__lshift>
   8331e:	4641      	mov	r1, r8
   83320:	4681      	mov	r9, r0
   83322:	f001 f8bf 	bl	844a4 <__mcmp>
   83326:	2800      	cmp	r0, #0
   83328:	f340 8145 	ble.w	835b6 <_dtoa_r+0xdc6>
   8332c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83330:	f000 8105 	beq.w	8353e <_dtoa_r+0xd4e>
   83334:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   83338:	46b3      	mov	fp, r6
   8333a:	f887 a000 	strb.w	sl, [r7]
   8333e:	1c7d      	adds	r5, r7, #1
   83340:	9e08      	ldr	r6, [sp, #32]
   83342:	e5d0      	b.n	82ee6 <_dtoa_r+0x6f6>
   83344:	d104      	bne.n	83350 <_dtoa_r+0xb60>
   83346:	f01a 0f01 	tst.w	sl, #1
   8334a:	d001      	beq.n	83350 <_dtoa_r+0xb60>
   8334c:	e5bb      	b.n	82ec6 <_dtoa_r+0x6d6>
   8334e:	4615      	mov	r5, r2
   83350:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83354:	1e6a      	subs	r2, r5, #1
   83356:	2b30      	cmp	r3, #48	; 0x30
   83358:	d0f9      	beq.n	8334e <_dtoa_r+0xb5e>
   8335a:	e5c4      	b.n	82ee6 <_dtoa_r+0x6f6>
   8335c:	2230      	movs	r2, #48	; 0x30
   8335e:	9904      	ldr	r1, [sp, #16]
   83360:	700a      	strb	r2, [r1, #0]
   83362:	9a02      	ldr	r2, [sp, #8]
   83364:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   83368:	3201      	adds	r2, #1
   8336a:	9202      	str	r2, [sp, #8]
   8336c:	f7ff bbfb 	b.w	82b66 <_dtoa_r+0x376>
   83370:	f000 80bb 	beq.w	834ea <_dtoa_r+0xcfa>
   83374:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   83378:	9b02      	ldr	r3, [sp, #8]
   8337a:	f04f 0a02 	mov.w	sl, #2
   8337e:	425d      	negs	r5, r3
   83380:	4b82      	ldr	r3, [pc, #520]	; (8358c <_dtoa_r+0xd9c>)
   83382:	f005 020f 	and.w	r2, r5, #15
   83386:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8338a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8338e:	f001 fe17 	bl	84fc0 <__aeabi_dmul>
   83392:	112d      	asrs	r5, r5, #4
   83394:	4607      	mov	r7, r0
   83396:	4688      	mov	r8, r1
   83398:	f43f ae1a 	beq.w	82fd0 <_dtoa_r+0x7e0>
   8339c:	4e7c      	ldr	r6, [pc, #496]	; (83590 <_dtoa_r+0xda0>)
   8339e:	07eb      	lsls	r3, r5, #31
   833a0:	d509      	bpl.n	833b6 <_dtoa_r+0xbc6>
   833a2:	e9d6 2300 	ldrd	r2, r3, [r6]
   833a6:	4638      	mov	r0, r7
   833a8:	4641      	mov	r1, r8
   833aa:	f001 fe09 	bl	84fc0 <__aeabi_dmul>
   833ae:	4607      	mov	r7, r0
   833b0:	4688      	mov	r8, r1
   833b2:	f10a 0a01 	add.w	sl, sl, #1
   833b6:	106d      	asrs	r5, r5, #1
   833b8:	f106 0608 	add.w	r6, r6, #8
   833bc:	d1ef      	bne.n	8339e <_dtoa_r+0xbae>
   833be:	e607      	b.n	82fd0 <_dtoa_r+0x7e0>
   833c0:	6871      	ldr	r1, [r6, #4]
   833c2:	4620      	mov	r0, r4
   833c4:	f000 fe70 	bl	840a8 <_Balloc>
   833c8:	4605      	mov	r5, r0
   833ca:	6933      	ldr	r3, [r6, #16]
   833cc:	f106 010c 	add.w	r1, r6, #12
   833d0:	3302      	adds	r3, #2
   833d2:	009a      	lsls	r2, r3, #2
   833d4:	300c      	adds	r0, #12
   833d6:	f000 fd89 	bl	83eec <memcpy>
   833da:	4629      	mov	r1, r5
   833dc:	2201      	movs	r2, #1
   833de:	4620      	mov	r0, r4
   833e0:	f001 f810 	bl	84404 <__lshift>
   833e4:	9008      	str	r0, [sp, #32]
   833e6:	e4b6      	b.n	82d56 <_dtoa_r+0x566>
   833e8:	2b39      	cmp	r3, #57	; 0x39
   833ea:	f8cd b020 	str.w	fp, [sp, #32]
   833ee:	46d0      	mov	r8, sl
   833f0:	f000 80a5 	beq.w	8353e <_dtoa_r+0xd4e>
   833f4:	f103 0a01 	add.w	sl, r3, #1
   833f8:	46b3      	mov	fp, r6
   833fa:	f887 a000 	strb.w	sl, [r7]
   833fe:	1c7d      	adds	r5, r7, #1
   83400:	9e08      	ldr	r6, [sp, #32]
   83402:	e570      	b.n	82ee6 <_dtoa_r+0x6f6>
   83404:	465a      	mov	r2, fp
   83406:	46d0      	mov	r8, sl
   83408:	46b3      	mov	fp, r6
   8340a:	469a      	mov	sl, r3
   8340c:	4616      	mov	r6, r2
   8340e:	e54e      	b.n	82eae <_dtoa_r+0x6be>
   83410:	9812      	ldr	r0, [sp, #72]	; 0x48
   83412:	495e      	ldr	r1, [pc, #376]	; (8358c <_dtoa_r+0xd9c>)
   83414:	462a      	mov	r2, r5
   83416:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   8341a:	4633      	mov	r3, r6
   8341c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   83420:	f001 fdce 	bl	84fc0 <__aeabi_dmul>
   83424:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   83428:	4638      	mov	r0, r7
   8342a:	4641      	mov	r1, r8
   8342c:	f002 f878 	bl	85520 <__aeabi_d2iz>
   83430:	4605      	mov	r5, r0
   83432:	f001 fd5f 	bl	84ef4 <__aeabi_i2d>
   83436:	4602      	mov	r2, r0
   83438:	460b      	mov	r3, r1
   8343a:	4638      	mov	r0, r7
   8343c:	4641      	mov	r1, r8
   8343e:	f001 fc0b 	bl	84c58 <__aeabi_dsub>
   83442:	4606      	mov	r6, r0
   83444:	9812      	ldr	r0, [sp, #72]	; 0x48
   83446:	9a04      	ldr	r2, [sp, #16]
   83448:	3530      	adds	r5, #48	; 0x30
   8344a:	2801      	cmp	r0, #1
   8344c:	7015      	strb	r5, [r2, #0]
   8344e:	460f      	mov	r7, r1
   83450:	f102 0501 	add.w	r5, r2, #1
   83454:	d026      	beq.n	834a4 <_dtoa_r+0xcb4>
   83456:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83458:	9a04      	ldr	r2, [sp, #16]
   8345a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   8345e:	4413      	add	r3, r2
   83460:	f04f 0a00 	mov.w	sl, #0
   83464:	4699      	mov	r9, r3
   83466:	f8df b130 	ldr.w	fp, [pc, #304]	; 83598 <_dtoa_r+0xda8>
   8346a:	4652      	mov	r2, sl
   8346c:	465b      	mov	r3, fp
   8346e:	4630      	mov	r0, r6
   83470:	4639      	mov	r1, r7
   83472:	f001 fda5 	bl	84fc0 <__aeabi_dmul>
   83476:	460f      	mov	r7, r1
   83478:	4606      	mov	r6, r0
   8347a:	f002 f851 	bl	85520 <__aeabi_d2iz>
   8347e:	4680      	mov	r8, r0
   83480:	f001 fd38 	bl	84ef4 <__aeabi_i2d>
   83484:	4602      	mov	r2, r0
   83486:	460b      	mov	r3, r1
   83488:	4630      	mov	r0, r6
   8348a:	4639      	mov	r1, r7
   8348c:	f001 fbe4 	bl	84c58 <__aeabi_dsub>
   83490:	f108 0830 	add.w	r8, r8, #48	; 0x30
   83494:	f805 8b01 	strb.w	r8, [r5], #1
   83498:	454d      	cmp	r5, r9
   8349a:	4606      	mov	r6, r0
   8349c:	460f      	mov	r7, r1
   8349e:	d1e4      	bne.n	8346a <_dtoa_r+0xc7a>
   834a0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   834a4:	2200      	movs	r2, #0
   834a6:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   834aa:	4b3a      	ldr	r3, [pc, #232]	; (83594 <_dtoa_r+0xda4>)
   834ac:	f001 fbd6 	bl	84c5c <__adddf3>
   834b0:	4632      	mov	r2, r6
   834b2:	463b      	mov	r3, r7
   834b4:	f001 fff6 	bl	854a4 <__aeabi_dcmplt>
   834b8:	2800      	cmp	r0, #0
   834ba:	d046      	beq.n	8354a <_dtoa_r+0xd5a>
   834bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   834be:	9302      	str	r3, [sp, #8]
   834c0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   834c4:	f7ff bb42 	b.w	82b4c <_dtoa_r+0x35c>
   834c8:	f04f 0800 	mov.w	r8, #0
   834cc:	4646      	mov	r6, r8
   834ce:	e6a8      	b.n	83222 <_dtoa_r+0xa32>
   834d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   834d2:	9a07      	ldr	r2, [sp, #28]
   834d4:	1a9d      	subs	r5, r3, r2
   834d6:	2300      	movs	r3, #0
   834d8:	f7ff bb70 	b.w	82bbc <_dtoa_r+0x3cc>
   834dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
   834de:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   834e0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   834e4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   834e6:	f7ff bb69 	b.w	82bbc <_dtoa_r+0x3cc>
   834ea:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   834ee:	f04f 0a02 	mov.w	sl, #2
   834f2:	e56d      	b.n	82fd0 <_dtoa_r+0x7e0>
   834f4:	9b07      	ldr	r3, [sp, #28]
   834f6:	2b00      	cmp	r3, #0
   834f8:	f43f aeb8 	beq.w	8326c <_dtoa_r+0xa7c>
   834fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   834fe:	2b00      	cmp	r3, #0
   83500:	f77f aede 	ble.w	832c0 <_dtoa_r+0xad0>
   83504:	2200      	movs	r2, #0
   83506:	4b24      	ldr	r3, [pc, #144]	; (83598 <_dtoa_r+0xda8>)
   83508:	4638      	mov	r0, r7
   8350a:	4641      	mov	r1, r8
   8350c:	f001 fd58 	bl	84fc0 <__aeabi_dmul>
   83510:	4607      	mov	r7, r0
   83512:	4688      	mov	r8, r1
   83514:	f10a 0001 	add.w	r0, sl, #1
   83518:	f001 fcec 	bl	84ef4 <__aeabi_i2d>
   8351c:	463a      	mov	r2, r7
   8351e:	4643      	mov	r3, r8
   83520:	f001 fd4e 	bl	84fc0 <__aeabi_dmul>
   83524:	2200      	movs	r2, #0
   83526:	4b17      	ldr	r3, [pc, #92]	; (83584 <_dtoa_r+0xd94>)
   83528:	f001 fb98 	bl	84c5c <__adddf3>
   8352c:	9a02      	ldr	r2, [sp, #8]
   8352e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   83530:	3a01      	subs	r2, #1
   83532:	4605      	mov	r5, r0
   83534:	9215      	str	r2, [sp, #84]	; 0x54
   83536:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   8353a:	9312      	str	r3, [sp, #72]	; 0x48
   8353c:	e569      	b.n	83012 <_dtoa_r+0x822>
   8353e:	2239      	movs	r2, #57	; 0x39
   83540:	46b3      	mov	fp, r6
   83542:	703a      	strb	r2, [r7, #0]
   83544:	9e08      	ldr	r6, [sp, #32]
   83546:	1c7d      	adds	r5, r7, #1
   83548:	e4bf      	b.n	82eca <_dtoa_r+0x6da>
   8354a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8354e:	2000      	movs	r0, #0
   83550:	4910      	ldr	r1, [pc, #64]	; (83594 <_dtoa_r+0xda4>)
   83552:	f001 fb81 	bl	84c58 <__aeabi_dsub>
   83556:	4632      	mov	r2, r6
   83558:	463b      	mov	r3, r7
   8355a:	f001 ffc1 	bl	854e0 <__aeabi_dcmpgt>
   8355e:	b908      	cbnz	r0, 83564 <_dtoa_r+0xd74>
   83560:	e6ae      	b.n	832c0 <_dtoa_r+0xad0>
   83562:	4615      	mov	r5, r2
   83564:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   83568:	1e6a      	subs	r2, r5, #1
   8356a:	2b30      	cmp	r3, #48	; 0x30
   8356c:	d0f9      	beq.n	83562 <_dtoa_r+0xd72>
   8356e:	e5d7      	b.n	83120 <_dtoa_r+0x930>
   83570:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   83574:	9b15      	ldr	r3, [sp, #84]	; 0x54
   83576:	9302      	str	r3, [sp, #8]
   83578:	f7ff bae8 	b.w	82b4c <_dtoa_r+0x35c>
   8357c:	970c      	str	r7, [sp, #48]	; 0x30
   8357e:	f7ff bba7 	b.w	82cd0 <_dtoa_r+0x4e0>
   83582:	bf00      	nop
   83584:	401c0000 	.word	0x401c0000
   83588:	40140000 	.word	0x40140000
   8358c:	00085960 	.word	0x00085960
   83590:	00085938 	.word	0x00085938
   83594:	3fe00000 	.word	0x3fe00000
   83598:	40240000 	.word	0x40240000
   8359c:	2b39      	cmp	r3, #57	; 0x39
   8359e:	f8cd b020 	str.w	fp, [sp, #32]
   835a2:	46d0      	mov	r8, sl
   835a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
   835a8:	469a      	mov	sl, r3
   835aa:	d0c8      	beq.n	8353e <_dtoa_r+0xd4e>
   835ac:	f1bb 0f00 	cmp.w	fp, #0
   835b0:	f73f aec0 	bgt.w	83334 <_dtoa_r+0xb44>
   835b4:	e6c0      	b.n	83338 <_dtoa_r+0xb48>
   835b6:	f47f aebf 	bne.w	83338 <_dtoa_r+0xb48>
   835ba:	f01a 0f01 	tst.w	sl, #1
   835be:	f43f aebb 	beq.w	83338 <_dtoa_r+0xb48>
   835c2:	e6b3      	b.n	8332c <_dtoa_r+0xb3c>
   835c4:	f04f 0800 	mov.w	r8, #0
   835c8:	4646      	mov	r6, r8
   835ca:	e5e8      	b.n	8319e <_dtoa_r+0x9ae>
   835cc:	4631      	mov	r1, r6
   835ce:	2300      	movs	r3, #0
   835d0:	220a      	movs	r2, #10
   835d2:	4620      	mov	r0, r4
   835d4:	f000 fd98 	bl	84108 <__multadd>
   835d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   835da:	4606      	mov	r6, r0
   835dc:	2b00      	cmp	r3, #0
   835de:	dd07      	ble.n	835f0 <_dtoa_r+0xe00>
   835e0:	9307      	str	r3, [sp, #28]
   835e2:	f7ff bbab 	b.w	82d3c <_dtoa_r+0x54c>
   835e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
   835e8:	2b02      	cmp	r3, #2
   835ea:	dc1f      	bgt.n	8362c <_dtoa_r+0xe3c>
   835ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   835ee:	e43c      	b.n	82e6a <_dtoa_r+0x67a>
   835f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
   835f2:	2b02      	cmp	r3, #2
   835f4:	dc1a      	bgt.n	8362c <_dtoa_r+0xe3c>
   835f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   835f8:	e7f2      	b.n	835e0 <_dtoa_r+0xdf0>
   835fa:	f43f ab81 	beq.w	82d00 <_dtoa_r+0x510>
   835fe:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   83602:	e411      	b.n	82e28 <_dtoa_r+0x638>
   83604:	2500      	movs	r5, #0
   83606:	4620      	mov	r0, r4
   83608:	6465      	str	r5, [r4, #68]	; 0x44
   8360a:	4629      	mov	r1, r5
   8360c:	f000 fd4c 	bl	840a8 <_Balloc>
   83610:	f04f 33ff 	mov.w	r3, #4294967295
   83614:	9307      	str	r3, [sp, #28]
   83616:	930f      	str	r3, [sp, #60]	; 0x3c
   83618:	2301      	movs	r3, #1
   8361a:	9004      	str	r0, [sp, #16]
   8361c:	9525      	str	r5, [sp, #148]	; 0x94
   8361e:	6420      	str	r0, [r4, #64]	; 0x40
   83620:	930b      	str	r3, [sp, #44]	; 0x2c
   83622:	f7ff b9e0 	b.w	829e6 <_dtoa_r+0x1f6>
   83626:	2501      	movs	r5, #1
   83628:	f7ff b9a8 	b.w	8297c <_dtoa_r+0x18c>
   8362c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8362e:	9307      	str	r3, [sp, #28]
   83630:	e5e8      	b.n	83204 <_dtoa_r+0xa14>
   83632:	bf00      	nop

00083634 <__libc_fini_array>:
   83634:	b538      	push	{r3, r4, r5, lr}
   83636:	4c0a      	ldr	r4, [pc, #40]	; (83660 <__libc_fini_array+0x2c>)
   83638:	4d0a      	ldr	r5, [pc, #40]	; (83664 <__libc_fini_array+0x30>)
   8363a:	1b64      	subs	r4, r4, r5
   8363c:	10a4      	asrs	r4, r4, #2
   8363e:	d00a      	beq.n	83656 <__libc_fini_array+0x22>
   83640:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   83644:	3b01      	subs	r3, #1
   83646:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8364a:	3c01      	subs	r4, #1
   8364c:	f855 3904 	ldr.w	r3, [r5], #-4
   83650:	4798      	blx	r3
   83652:	2c00      	cmp	r4, #0
   83654:	d1f9      	bne.n	8364a <__libc_fini_array+0x16>
   83656:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8365a:	f002 ba77 	b.w	85b4c <_fini>
   8365e:	bf00      	nop
   83660:	00085b5c 	.word	0x00085b5c
   83664:	00085b58 	.word	0x00085b58

00083668 <_malloc_trim_r>:
   83668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8366a:	460c      	mov	r4, r1
   8366c:	4f23      	ldr	r7, [pc, #140]	; (836fc <_malloc_trim_r+0x94>)
   8366e:	4606      	mov	r6, r0
   83670:	f000 fd16 	bl	840a0 <__malloc_lock>
   83674:	68bb      	ldr	r3, [r7, #8]
   83676:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8367a:	685d      	ldr	r5, [r3, #4]
   8367c:	310f      	adds	r1, #15
   8367e:	f025 0503 	bic.w	r5, r5, #3
   83682:	4429      	add	r1, r5
   83684:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   83688:	f021 010f 	bic.w	r1, r1, #15
   8368c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   83690:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   83694:	db07      	blt.n	836a6 <_malloc_trim_r+0x3e>
   83696:	2100      	movs	r1, #0
   83698:	4630      	mov	r0, r6
   8369a:	f001 f9b7 	bl	84a0c <_sbrk_r>
   8369e:	68bb      	ldr	r3, [r7, #8]
   836a0:	442b      	add	r3, r5
   836a2:	4298      	cmp	r0, r3
   836a4:	d004      	beq.n	836b0 <_malloc_trim_r+0x48>
   836a6:	4630      	mov	r0, r6
   836a8:	f000 fcfc 	bl	840a4 <__malloc_unlock>
   836ac:	2000      	movs	r0, #0
   836ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   836b0:	4261      	negs	r1, r4
   836b2:	4630      	mov	r0, r6
   836b4:	f001 f9aa 	bl	84a0c <_sbrk_r>
   836b8:	3001      	adds	r0, #1
   836ba:	d00d      	beq.n	836d8 <_malloc_trim_r+0x70>
   836bc:	4b10      	ldr	r3, [pc, #64]	; (83700 <_malloc_trim_r+0x98>)
   836be:	68ba      	ldr	r2, [r7, #8]
   836c0:	6819      	ldr	r1, [r3, #0]
   836c2:	1b2d      	subs	r5, r5, r4
   836c4:	f045 0501 	orr.w	r5, r5, #1
   836c8:	4630      	mov	r0, r6
   836ca:	1b09      	subs	r1, r1, r4
   836cc:	6055      	str	r5, [r2, #4]
   836ce:	6019      	str	r1, [r3, #0]
   836d0:	f000 fce8 	bl	840a4 <__malloc_unlock>
   836d4:	2001      	movs	r0, #1
   836d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   836d8:	2100      	movs	r1, #0
   836da:	4630      	mov	r0, r6
   836dc:	f001 f996 	bl	84a0c <_sbrk_r>
   836e0:	68ba      	ldr	r2, [r7, #8]
   836e2:	1a83      	subs	r3, r0, r2
   836e4:	2b0f      	cmp	r3, #15
   836e6:	ddde      	ble.n	836a6 <_malloc_trim_r+0x3e>
   836e8:	4c06      	ldr	r4, [pc, #24]	; (83704 <_malloc_trim_r+0x9c>)
   836ea:	4905      	ldr	r1, [pc, #20]	; (83700 <_malloc_trim_r+0x98>)
   836ec:	6824      	ldr	r4, [r4, #0]
   836ee:	f043 0301 	orr.w	r3, r3, #1
   836f2:	1b00      	subs	r0, r0, r4
   836f4:	6053      	str	r3, [r2, #4]
   836f6:	6008      	str	r0, [r1, #0]
   836f8:	e7d5      	b.n	836a6 <_malloc_trim_r+0x3e>
   836fa:	bf00      	nop
   836fc:	2007070c 	.word	0x2007070c
   83700:	20070bd4 	.word	0x20070bd4
   83704:	20070b14 	.word	0x20070b14

00083708 <_free_r>:
   83708:	2900      	cmp	r1, #0
   8370a:	d044      	beq.n	83796 <_free_r+0x8e>
   8370c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83710:	460d      	mov	r5, r1
   83712:	4680      	mov	r8, r0
   83714:	f000 fcc4 	bl	840a0 <__malloc_lock>
   83718:	f855 7c04 	ldr.w	r7, [r5, #-4]
   8371c:	4969      	ldr	r1, [pc, #420]	; (838c4 <_free_r+0x1bc>)
   8371e:	f1a5 0408 	sub.w	r4, r5, #8
   83722:	f027 0301 	bic.w	r3, r7, #1
   83726:	18e2      	adds	r2, r4, r3
   83728:	688e      	ldr	r6, [r1, #8]
   8372a:	6850      	ldr	r0, [r2, #4]
   8372c:	42b2      	cmp	r2, r6
   8372e:	f020 0003 	bic.w	r0, r0, #3
   83732:	d05e      	beq.n	837f2 <_free_r+0xea>
   83734:	07fe      	lsls	r6, r7, #31
   83736:	6050      	str	r0, [r2, #4]
   83738:	d40b      	bmi.n	83752 <_free_r+0x4a>
   8373a:	f855 7c08 	ldr.w	r7, [r5, #-8]
   8373e:	f101 0e08 	add.w	lr, r1, #8
   83742:	1be4      	subs	r4, r4, r7
   83744:	68a5      	ldr	r5, [r4, #8]
   83746:	443b      	add	r3, r7
   83748:	4575      	cmp	r5, lr
   8374a:	d06d      	beq.n	83828 <_free_r+0x120>
   8374c:	68e7      	ldr	r7, [r4, #12]
   8374e:	60ef      	str	r7, [r5, #12]
   83750:	60bd      	str	r5, [r7, #8]
   83752:	1815      	adds	r5, r2, r0
   83754:	686d      	ldr	r5, [r5, #4]
   83756:	07ed      	lsls	r5, r5, #31
   83758:	d53e      	bpl.n	837d8 <_free_r+0xd0>
   8375a:	f043 0201 	orr.w	r2, r3, #1
   8375e:	6062      	str	r2, [r4, #4]
   83760:	50e3      	str	r3, [r4, r3]
   83762:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83766:	d217      	bcs.n	83798 <_free_r+0x90>
   83768:	2201      	movs	r2, #1
   8376a:	08db      	lsrs	r3, r3, #3
   8376c:	1098      	asrs	r0, r3, #2
   8376e:	684d      	ldr	r5, [r1, #4]
   83770:	4413      	add	r3, r2
   83772:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   83776:	4082      	lsls	r2, r0
   83778:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   8377c:	432a      	orrs	r2, r5
   8377e:	3808      	subs	r0, #8
   83780:	60e0      	str	r0, [r4, #12]
   83782:	60a7      	str	r7, [r4, #8]
   83784:	604a      	str	r2, [r1, #4]
   83786:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   8378a:	60fc      	str	r4, [r7, #12]
   8378c:	4640      	mov	r0, r8
   8378e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83792:	f000 bc87 	b.w	840a4 <__malloc_unlock>
   83796:	4770      	bx	lr
   83798:	0a5a      	lsrs	r2, r3, #9
   8379a:	2a04      	cmp	r2, #4
   8379c:	d852      	bhi.n	83844 <_free_r+0x13c>
   8379e:	099a      	lsrs	r2, r3, #6
   837a0:	f102 0739 	add.w	r7, r2, #57	; 0x39
   837a4:	00ff      	lsls	r7, r7, #3
   837a6:	f102 0538 	add.w	r5, r2, #56	; 0x38
   837aa:	19c8      	adds	r0, r1, r7
   837ac:	59ca      	ldr	r2, [r1, r7]
   837ae:	3808      	subs	r0, #8
   837b0:	4290      	cmp	r0, r2
   837b2:	d04f      	beq.n	83854 <_free_r+0x14c>
   837b4:	6851      	ldr	r1, [r2, #4]
   837b6:	f021 0103 	bic.w	r1, r1, #3
   837ba:	428b      	cmp	r3, r1
   837bc:	d232      	bcs.n	83824 <_free_r+0x11c>
   837be:	6892      	ldr	r2, [r2, #8]
   837c0:	4290      	cmp	r0, r2
   837c2:	d1f7      	bne.n	837b4 <_free_r+0xac>
   837c4:	68c3      	ldr	r3, [r0, #12]
   837c6:	60a0      	str	r0, [r4, #8]
   837c8:	60e3      	str	r3, [r4, #12]
   837ca:	609c      	str	r4, [r3, #8]
   837cc:	60c4      	str	r4, [r0, #12]
   837ce:	4640      	mov	r0, r8
   837d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   837d4:	f000 bc66 	b.w	840a4 <__malloc_unlock>
   837d8:	6895      	ldr	r5, [r2, #8]
   837da:	4f3b      	ldr	r7, [pc, #236]	; (838c8 <_free_r+0x1c0>)
   837dc:	4403      	add	r3, r0
   837de:	42bd      	cmp	r5, r7
   837e0:	d040      	beq.n	83864 <_free_r+0x15c>
   837e2:	68d0      	ldr	r0, [r2, #12]
   837e4:	f043 0201 	orr.w	r2, r3, #1
   837e8:	60e8      	str	r0, [r5, #12]
   837ea:	6085      	str	r5, [r0, #8]
   837ec:	6062      	str	r2, [r4, #4]
   837ee:	50e3      	str	r3, [r4, r3]
   837f0:	e7b7      	b.n	83762 <_free_r+0x5a>
   837f2:	07ff      	lsls	r7, r7, #31
   837f4:	4403      	add	r3, r0
   837f6:	d407      	bmi.n	83808 <_free_r+0x100>
   837f8:	f855 5c08 	ldr.w	r5, [r5, #-8]
   837fc:	1b64      	subs	r4, r4, r5
   837fe:	68e2      	ldr	r2, [r4, #12]
   83800:	68a0      	ldr	r0, [r4, #8]
   83802:	442b      	add	r3, r5
   83804:	60c2      	str	r2, [r0, #12]
   83806:	6090      	str	r0, [r2, #8]
   83808:	4a30      	ldr	r2, [pc, #192]	; (838cc <_free_r+0x1c4>)
   8380a:	f043 0001 	orr.w	r0, r3, #1
   8380e:	6812      	ldr	r2, [r2, #0]
   83810:	6060      	str	r0, [r4, #4]
   83812:	4293      	cmp	r3, r2
   83814:	608c      	str	r4, [r1, #8]
   83816:	d3b9      	bcc.n	8378c <_free_r+0x84>
   83818:	4b2d      	ldr	r3, [pc, #180]	; (838d0 <_free_r+0x1c8>)
   8381a:	4640      	mov	r0, r8
   8381c:	6819      	ldr	r1, [r3, #0]
   8381e:	f7ff ff23 	bl	83668 <_malloc_trim_r>
   83822:	e7b3      	b.n	8378c <_free_r+0x84>
   83824:	4610      	mov	r0, r2
   83826:	e7cd      	b.n	837c4 <_free_r+0xbc>
   83828:	1811      	adds	r1, r2, r0
   8382a:	6849      	ldr	r1, [r1, #4]
   8382c:	07c9      	lsls	r1, r1, #31
   8382e:	d444      	bmi.n	838ba <_free_r+0x1b2>
   83830:	6891      	ldr	r1, [r2, #8]
   83832:	4403      	add	r3, r0
   83834:	68d2      	ldr	r2, [r2, #12]
   83836:	f043 0001 	orr.w	r0, r3, #1
   8383a:	60ca      	str	r2, [r1, #12]
   8383c:	6091      	str	r1, [r2, #8]
   8383e:	6060      	str	r0, [r4, #4]
   83840:	50e3      	str	r3, [r4, r3]
   83842:	e7a3      	b.n	8378c <_free_r+0x84>
   83844:	2a14      	cmp	r2, #20
   83846:	d816      	bhi.n	83876 <_free_r+0x16e>
   83848:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   8384c:	00ff      	lsls	r7, r7, #3
   8384e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   83852:	e7aa      	b.n	837aa <_free_r+0xa2>
   83854:	2301      	movs	r3, #1
   83856:	10aa      	asrs	r2, r5, #2
   83858:	684d      	ldr	r5, [r1, #4]
   8385a:	4093      	lsls	r3, r2
   8385c:	432b      	orrs	r3, r5
   8385e:	604b      	str	r3, [r1, #4]
   83860:	4603      	mov	r3, r0
   83862:	e7b0      	b.n	837c6 <_free_r+0xbe>
   83864:	f043 0201 	orr.w	r2, r3, #1
   83868:	614c      	str	r4, [r1, #20]
   8386a:	610c      	str	r4, [r1, #16]
   8386c:	60e5      	str	r5, [r4, #12]
   8386e:	60a5      	str	r5, [r4, #8]
   83870:	6062      	str	r2, [r4, #4]
   83872:	50e3      	str	r3, [r4, r3]
   83874:	e78a      	b.n	8378c <_free_r+0x84>
   83876:	2a54      	cmp	r2, #84	; 0x54
   83878:	d806      	bhi.n	83888 <_free_r+0x180>
   8387a:	0b1a      	lsrs	r2, r3, #12
   8387c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   83880:	00ff      	lsls	r7, r7, #3
   83882:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   83886:	e790      	b.n	837aa <_free_r+0xa2>
   83888:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8388c:	d806      	bhi.n	8389c <_free_r+0x194>
   8388e:	0bda      	lsrs	r2, r3, #15
   83890:	f102 0778 	add.w	r7, r2, #120	; 0x78
   83894:	00ff      	lsls	r7, r7, #3
   83896:	f102 0577 	add.w	r5, r2, #119	; 0x77
   8389a:	e786      	b.n	837aa <_free_r+0xa2>
   8389c:	f240 5054 	movw	r0, #1364	; 0x554
   838a0:	4282      	cmp	r2, r0
   838a2:	d806      	bhi.n	838b2 <_free_r+0x1aa>
   838a4:	0c9a      	lsrs	r2, r3, #18
   838a6:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   838aa:	00ff      	lsls	r7, r7, #3
   838ac:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   838b0:	e77b      	b.n	837aa <_free_r+0xa2>
   838b2:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   838b6:	257e      	movs	r5, #126	; 0x7e
   838b8:	e777      	b.n	837aa <_free_r+0xa2>
   838ba:	f043 0101 	orr.w	r1, r3, #1
   838be:	6061      	str	r1, [r4, #4]
   838c0:	6013      	str	r3, [r2, #0]
   838c2:	e763      	b.n	8378c <_free_r+0x84>
   838c4:	2007070c 	.word	0x2007070c
   838c8:	20070714 	.word	0x20070714
   838cc:	20070b18 	.word	0x20070b18
   838d0:	20070c04 	.word	0x20070c04

000838d4 <_localeconv_r>:
   838d4:	4a04      	ldr	r2, [pc, #16]	; (838e8 <_localeconv_r+0x14>)
   838d6:	4b05      	ldr	r3, [pc, #20]	; (838ec <_localeconv_r+0x18>)
   838d8:	6812      	ldr	r2, [r2, #0]
   838da:	6b50      	ldr	r0, [r2, #52]	; 0x34
   838dc:	2800      	cmp	r0, #0
   838de:	bf08      	it	eq
   838e0:	4618      	moveq	r0, r3
   838e2:	30f0      	adds	r0, #240	; 0xf0
   838e4:	4770      	bx	lr
   838e6:	bf00      	nop
   838e8:	20070174 	.word	0x20070174
   838ec:	200705a0 	.word	0x200705a0

000838f0 <_malloc_r>:
   838f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   838f4:	f101 060b 	add.w	r6, r1, #11
   838f8:	2e16      	cmp	r6, #22
   838fa:	b083      	sub	sp, #12
   838fc:	4605      	mov	r5, r0
   838fe:	f240 809e 	bls.w	83a3e <_malloc_r+0x14e>
   83902:	f036 0607 	bics.w	r6, r6, #7
   83906:	f100 80bd 	bmi.w	83a84 <_malloc_r+0x194>
   8390a:	42b1      	cmp	r1, r6
   8390c:	f200 80ba 	bhi.w	83a84 <_malloc_r+0x194>
   83910:	f000 fbc6 	bl	840a0 <__malloc_lock>
   83914:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   83918:	f0c0 8285 	bcc.w	83e26 <_malloc_r+0x536>
   8391c:	0a73      	lsrs	r3, r6, #9
   8391e:	f000 80b8 	beq.w	83a92 <_malloc_r+0x1a2>
   83922:	2b04      	cmp	r3, #4
   83924:	f200 816c 	bhi.w	83c00 <_malloc_r+0x310>
   83928:	09b3      	lsrs	r3, r6, #6
   8392a:	f103 0039 	add.w	r0, r3, #57	; 0x39
   8392e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   83932:	00c1      	lsls	r1, r0, #3
   83934:	4fb8      	ldr	r7, [pc, #736]	; (83c18 <_malloc_r+0x328>)
   83936:	4439      	add	r1, r7
   83938:	684c      	ldr	r4, [r1, #4]
   8393a:	3908      	subs	r1, #8
   8393c:	42a1      	cmp	r1, r4
   8393e:	d106      	bne.n	8394e <_malloc_r+0x5e>
   83940:	e00c      	b.n	8395c <_malloc_r+0x6c>
   83942:	2a00      	cmp	r2, #0
   83944:	f280 80ab 	bge.w	83a9e <_malloc_r+0x1ae>
   83948:	68e4      	ldr	r4, [r4, #12]
   8394a:	42a1      	cmp	r1, r4
   8394c:	d006      	beq.n	8395c <_malloc_r+0x6c>
   8394e:	6863      	ldr	r3, [r4, #4]
   83950:	f023 0303 	bic.w	r3, r3, #3
   83954:	1b9a      	subs	r2, r3, r6
   83956:	2a0f      	cmp	r2, #15
   83958:	ddf3      	ble.n	83942 <_malloc_r+0x52>
   8395a:	4670      	mov	r0, lr
   8395c:	693c      	ldr	r4, [r7, #16]
   8395e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 83c2c <_malloc_r+0x33c>
   83962:	4574      	cmp	r4, lr
   83964:	f000 819e 	beq.w	83ca4 <_malloc_r+0x3b4>
   83968:	6863      	ldr	r3, [r4, #4]
   8396a:	f023 0303 	bic.w	r3, r3, #3
   8396e:	1b9a      	subs	r2, r3, r6
   83970:	2a0f      	cmp	r2, #15
   83972:	f300 8183 	bgt.w	83c7c <_malloc_r+0x38c>
   83976:	2a00      	cmp	r2, #0
   83978:	f8c7 e014 	str.w	lr, [r7, #20]
   8397c:	f8c7 e010 	str.w	lr, [r7, #16]
   83980:	f280 8091 	bge.w	83aa6 <_malloc_r+0x1b6>
   83984:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   83988:	f080 8154 	bcs.w	83c34 <_malloc_r+0x344>
   8398c:	2201      	movs	r2, #1
   8398e:	08db      	lsrs	r3, r3, #3
   83990:	6879      	ldr	r1, [r7, #4]
   83992:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   83996:	4413      	add	r3, r2
   83998:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   8399c:	fa02 f20c 	lsl.w	r2, r2, ip
   839a0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   839a4:	430a      	orrs	r2, r1
   839a6:	f1ac 0108 	sub.w	r1, ip, #8
   839aa:	60e1      	str	r1, [r4, #12]
   839ac:	f8c4 8008 	str.w	r8, [r4, #8]
   839b0:	607a      	str	r2, [r7, #4]
   839b2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   839b6:	f8c8 400c 	str.w	r4, [r8, #12]
   839ba:	2401      	movs	r4, #1
   839bc:	1083      	asrs	r3, r0, #2
   839be:	409c      	lsls	r4, r3
   839c0:	4294      	cmp	r4, r2
   839c2:	d87d      	bhi.n	83ac0 <_malloc_r+0x1d0>
   839c4:	4214      	tst	r4, r2
   839c6:	d106      	bne.n	839d6 <_malloc_r+0xe6>
   839c8:	f020 0003 	bic.w	r0, r0, #3
   839cc:	0064      	lsls	r4, r4, #1
   839ce:	4214      	tst	r4, r2
   839d0:	f100 0004 	add.w	r0, r0, #4
   839d4:	d0fa      	beq.n	839cc <_malloc_r+0xdc>
   839d6:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   839da:	46cc      	mov	ip, r9
   839dc:	4680      	mov	r8, r0
   839de:	f8dc 300c 	ldr.w	r3, [ip, #12]
   839e2:	459c      	cmp	ip, r3
   839e4:	d107      	bne.n	839f6 <_malloc_r+0x106>
   839e6:	e15f      	b.n	83ca8 <_malloc_r+0x3b8>
   839e8:	2a00      	cmp	r2, #0
   839ea:	f280 816d 	bge.w	83cc8 <_malloc_r+0x3d8>
   839ee:	68db      	ldr	r3, [r3, #12]
   839f0:	459c      	cmp	ip, r3
   839f2:	f000 8159 	beq.w	83ca8 <_malloc_r+0x3b8>
   839f6:	6859      	ldr	r1, [r3, #4]
   839f8:	f021 0103 	bic.w	r1, r1, #3
   839fc:	1b8a      	subs	r2, r1, r6
   839fe:	2a0f      	cmp	r2, #15
   83a00:	ddf2      	ble.n	839e8 <_malloc_r+0xf8>
   83a02:	68dc      	ldr	r4, [r3, #12]
   83a04:	f8d3 c008 	ldr.w	ip, [r3, #8]
   83a08:	f046 0801 	orr.w	r8, r6, #1
   83a0c:	4628      	mov	r0, r5
   83a0e:	441e      	add	r6, r3
   83a10:	f042 0501 	orr.w	r5, r2, #1
   83a14:	f8c3 8004 	str.w	r8, [r3, #4]
   83a18:	f8cc 400c 	str.w	r4, [ip, #12]
   83a1c:	f8c4 c008 	str.w	ip, [r4, #8]
   83a20:	617e      	str	r6, [r7, #20]
   83a22:	613e      	str	r6, [r7, #16]
   83a24:	f8c6 e00c 	str.w	lr, [r6, #12]
   83a28:	f8c6 e008 	str.w	lr, [r6, #8]
   83a2c:	6075      	str	r5, [r6, #4]
   83a2e:	505a      	str	r2, [r3, r1]
   83a30:	9300      	str	r3, [sp, #0]
   83a32:	f000 fb37 	bl	840a4 <__malloc_unlock>
   83a36:	9b00      	ldr	r3, [sp, #0]
   83a38:	f103 0408 	add.w	r4, r3, #8
   83a3c:	e01e      	b.n	83a7c <_malloc_r+0x18c>
   83a3e:	2910      	cmp	r1, #16
   83a40:	d820      	bhi.n	83a84 <_malloc_r+0x194>
   83a42:	f000 fb2d 	bl	840a0 <__malloc_lock>
   83a46:	2610      	movs	r6, #16
   83a48:	2318      	movs	r3, #24
   83a4a:	2002      	movs	r0, #2
   83a4c:	4f72      	ldr	r7, [pc, #456]	; (83c18 <_malloc_r+0x328>)
   83a4e:	443b      	add	r3, r7
   83a50:	685c      	ldr	r4, [r3, #4]
   83a52:	f1a3 0208 	sub.w	r2, r3, #8
   83a56:	4294      	cmp	r4, r2
   83a58:	f000 812f 	beq.w	83cba <_malloc_r+0x3ca>
   83a5c:	6863      	ldr	r3, [r4, #4]
   83a5e:	68e1      	ldr	r1, [r4, #12]
   83a60:	f023 0303 	bic.w	r3, r3, #3
   83a64:	4423      	add	r3, r4
   83a66:	685a      	ldr	r2, [r3, #4]
   83a68:	68a6      	ldr	r6, [r4, #8]
   83a6a:	f042 0201 	orr.w	r2, r2, #1
   83a6e:	60f1      	str	r1, [r6, #12]
   83a70:	4628      	mov	r0, r5
   83a72:	608e      	str	r6, [r1, #8]
   83a74:	605a      	str	r2, [r3, #4]
   83a76:	f000 fb15 	bl	840a4 <__malloc_unlock>
   83a7a:	3408      	adds	r4, #8
   83a7c:	4620      	mov	r0, r4
   83a7e:	b003      	add	sp, #12
   83a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a84:	2400      	movs	r4, #0
   83a86:	230c      	movs	r3, #12
   83a88:	4620      	mov	r0, r4
   83a8a:	602b      	str	r3, [r5, #0]
   83a8c:	b003      	add	sp, #12
   83a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a92:	2040      	movs	r0, #64	; 0x40
   83a94:	f44f 7100 	mov.w	r1, #512	; 0x200
   83a98:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   83a9c:	e74a      	b.n	83934 <_malloc_r+0x44>
   83a9e:	4423      	add	r3, r4
   83aa0:	685a      	ldr	r2, [r3, #4]
   83aa2:	68e1      	ldr	r1, [r4, #12]
   83aa4:	e7e0      	b.n	83a68 <_malloc_r+0x178>
   83aa6:	4423      	add	r3, r4
   83aa8:	685a      	ldr	r2, [r3, #4]
   83aaa:	4628      	mov	r0, r5
   83aac:	f042 0201 	orr.w	r2, r2, #1
   83ab0:	605a      	str	r2, [r3, #4]
   83ab2:	3408      	adds	r4, #8
   83ab4:	f000 faf6 	bl	840a4 <__malloc_unlock>
   83ab8:	4620      	mov	r0, r4
   83aba:	b003      	add	sp, #12
   83abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ac0:	68bc      	ldr	r4, [r7, #8]
   83ac2:	6863      	ldr	r3, [r4, #4]
   83ac4:	f023 0803 	bic.w	r8, r3, #3
   83ac8:	45b0      	cmp	r8, r6
   83aca:	d304      	bcc.n	83ad6 <_malloc_r+0x1e6>
   83acc:	eba8 0306 	sub.w	r3, r8, r6
   83ad0:	2b0f      	cmp	r3, #15
   83ad2:	f300 8085 	bgt.w	83be0 <_malloc_r+0x2f0>
   83ad6:	f8df 9158 	ldr.w	r9, [pc, #344]	; 83c30 <_malloc_r+0x340>
   83ada:	4b50      	ldr	r3, [pc, #320]	; (83c1c <_malloc_r+0x32c>)
   83adc:	f8d9 2000 	ldr.w	r2, [r9]
   83ae0:	681b      	ldr	r3, [r3, #0]
   83ae2:	3201      	adds	r2, #1
   83ae4:	4433      	add	r3, r6
   83ae6:	eb04 0a08 	add.w	sl, r4, r8
   83aea:	f000 8154 	beq.w	83d96 <_malloc_r+0x4a6>
   83aee:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83af2:	330f      	adds	r3, #15
   83af4:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   83af8:	f02b 0b0f 	bic.w	fp, fp, #15
   83afc:	4659      	mov	r1, fp
   83afe:	4628      	mov	r0, r5
   83b00:	f000 ff84 	bl	84a0c <_sbrk_r>
   83b04:	1c41      	adds	r1, r0, #1
   83b06:	4602      	mov	r2, r0
   83b08:	f000 80fb 	beq.w	83d02 <_malloc_r+0x412>
   83b0c:	4582      	cmp	sl, r0
   83b0e:	f200 80f6 	bhi.w	83cfe <_malloc_r+0x40e>
   83b12:	4b43      	ldr	r3, [pc, #268]	; (83c20 <_malloc_r+0x330>)
   83b14:	6819      	ldr	r1, [r3, #0]
   83b16:	4459      	add	r1, fp
   83b18:	6019      	str	r1, [r3, #0]
   83b1a:	f000 814c 	beq.w	83db6 <_malloc_r+0x4c6>
   83b1e:	f8d9 0000 	ldr.w	r0, [r9]
   83b22:	3001      	adds	r0, #1
   83b24:	bf1b      	ittet	ne
   83b26:	eba2 0a0a 	subne.w	sl, r2, sl
   83b2a:	4451      	addne	r1, sl
   83b2c:	f8c9 2000 	streq.w	r2, [r9]
   83b30:	6019      	strne	r1, [r3, #0]
   83b32:	f012 0107 	ands.w	r1, r2, #7
   83b36:	f000 8114 	beq.w	83d62 <_malloc_r+0x472>
   83b3a:	f1c1 0008 	rsb	r0, r1, #8
   83b3e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   83b42:	4402      	add	r2, r0
   83b44:	3108      	adds	r1, #8
   83b46:	eb02 090b 	add.w	r9, r2, fp
   83b4a:	f3c9 090b 	ubfx	r9, r9, #0, #12
   83b4e:	eba1 0909 	sub.w	r9, r1, r9
   83b52:	4649      	mov	r1, r9
   83b54:	4628      	mov	r0, r5
   83b56:	9301      	str	r3, [sp, #4]
   83b58:	9200      	str	r2, [sp, #0]
   83b5a:	f000 ff57 	bl	84a0c <_sbrk_r>
   83b5e:	1c43      	adds	r3, r0, #1
   83b60:	e89d 000c 	ldmia.w	sp, {r2, r3}
   83b64:	f000 8142 	beq.w	83dec <_malloc_r+0x4fc>
   83b68:	1a80      	subs	r0, r0, r2
   83b6a:	4448      	add	r0, r9
   83b6c:	f040 0001 	orr.w	r0, r0, #1
   83b70:	6819      	ldr	r1, [r3, #0]
   83b72:	42bc      	cmp	r4, r7
   83b74:	4449      	add	r1, r9
   83b76:	60ba      	str	r2, [r7, #8]
   83b78:	6019      	str	r1, [r3, #0]
   83b7a:	6050      	str	r0, [r2, #4]
   83b7c:	d017      	beq.n	83bae <_malloc_r+0x2be>
   83b7e:	f1b8 0f0f 	cmp.w	r8, #15
   83b82:	f240 80fa 	bls.w	83d7a <_malloc_r+0x48a>
   83b86:	f04f 0c05 	mov.w	ip, #5
   83b8a:	6862      	ldr	r2, [r4, #4]
   83b8c:	f1a8 000c 	sub.w	r0, r8, #12
   83b90:	f020 0007 	bic.w	r0, r0, #7
   83b94:	f002 0201 	and.w	r2, r2, #1
   83b98:	eb04 0e00 	add.w	lr, r4, r0
   83b9c:	4302      	orrs	r2, r0
   83b9e:	280f      	cmp	r0, #15
   83ba0:	6062      	str	r2, [r4, #4]
   83ba2:	f8ce c004 	str.w	ip, [lr, #4]
   83ba6:	f8ce c008 	str.w	ip, [lr, #8]
   83baa:	f200 8116 	bhi.w	83dda <_malloc_r+0x4ea>
   83bae:	4b1d      	ldr	r3, [pc, #116]	; (83c24 <_malloc_r+0x334>)
   83bb0:	68bc      	ldr	r4, [r7, #8]
   83bb2:	681a      	ldr	r2, [r3, #0]
   83bb4:	4291      	cmp	r1, r2
   83bb6:	bf88      	it	hi
   83bb8:	6019      	strhi	r1, [r3, #0]
   83bba:	4b1b      	ldr	r3, [pc, #108]	; (83c28 <_malloc_r+0x338>)
   83bbc:	681a      	ldr	r2, [r3, #0]
   83bbe:	4291      	cmp	r1, r2
   83bc0:	6862      	ldr	r2, [r4, #4]
   83bc2:	bf88      	it	hi
   83bc4:	6019      	strhi	r1, [r3, #0]
   83bc6:	f022 0203 	bic.w	r2, r2, #3
   83bca:	4296      	cmp	r6, r2
   83bcc:	eba2 0306 	sub.w	r3, r2, r6
   83bd0:	d801      	bhi.n	83bd6 <_malloc_r+0x2e6>
   83bd2:	2b0f      	cmp	r3, #15
   83bd4:	dc04      	bgt.n	83be0 <_malloc_r+0x2f0>
   83bd6:	4628      	mov	r0, r5
   83bd8:	f000 fa64 	bl	840a4 <__malloc_unlock>
   83bdc:	2400      	movs	r4, #0
   83bde:	e74d      	b.n	83a7c <_malloc_r+0x18c>
   83be0:	f046 0201 	orr.w	r2, r6, #1
   83be4:	f043 0301 	orr.w	r3, r3, #1
   83be8:	4426      	add	r6, r4
   83bea:	6062      	str	r2, [r4, #4]
   83bec:	4628      	mov	r0, r5
   83bee:	60be      	str	r6, [r7, #8]
   83bf0:	3408      	adds	r4, #8
   83bf2:	6073      	str	r3, [r6, #4]
   83bf4:	f000 fa56 	bl	840a4 <__malloc_unlock>
   83bf8:	4620      	mov	r0, r4
   83bfa:	b003      	add	sp, #12
   83bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83c00:	2b14      	cmp	r3, #20
   83c02:	d970      	bls.n	83ce6 <_malloc_r+0x3f6>
   83c04:	2b54      	cmp	r3, #84	; 0x54
   83c06:	f200 80a2 	bhi.w	83d4e <_malloc_r+0x45e>
   83c0a:	0b33      	lsrs	r3, r6, #12
   83c0c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   83c10:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   83c14:	00c1      	lsls	r1, r0, #3
   83c16:	e68d      	b.n	83934 <_malloc_r+0x44>
   83c18:	2007070c 	.word	0x2007070c
   83c1c:	20070c04 	.word	0x20070c04
   83c20:	20070bd4 	.word	0x20070bd4
   83c24:	20070bfc 	.word	0x20070bfc
   83c28:	20070c00 	.word	0x20070c00
   83c2c:	20070714 	.word	0x20070714
   83c30:	20070b14 	.word	0x20070b14
   83c34:	0a5a      	lsrs	r2, r3, #9
   83c36:	2a04      	cmp	r2, #4
   83c38:	d95b      	bls.n	83cf2 <_malloc_r+0x402>
   83c3a:	2a14      	cmp	r2, #20
   83c3c:	f200 80ae 	bhi.w	83d9c <_malloc_r+0x4ac>
   83c40:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   83c44:	00c9      	lsls	r1, r1, #3
   83c46:	325b      	adds	r2, #91	; 0x5b
   83c48:	eb07 0c01 	add.w	ip, r7, r1
   83c4c:	5879      	ldr	r1, [r7, r1]
   83c4e:	f1ac 0c08 	sub.w	ip, ip, #8
   83c52:	458c      	cmp	ip, r1
   83c54:	f000 8088 	beq.w	83d68 <_malloc_r+0x478>
   83c58:	684a      	ldr	r2, [r1, #4]
   83c5a:	f022 0203 	bic.w	r2, r2, #3
   83c5e:	4293      	cmp	r3, r2
   83c60:	d273      	bcs.n	83d4a <_malloc_r+0x45a>
   83c62:	6889      	ldr	r1, [r1, #8]
   83c64:	458c      	cmp	ip, r1
   83c66:	d1f7      	bne.n	83c58 <_malloc_r+0x368>
   83c68:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83c6c:	687a      	ldr	r2, [r7, #4]
   83c6e:	60e3      	str	r3, [r4, #12]
   83c70:	f8c4 c008 	str.w	ip, [r4, #8]
   83c74:	609c      	str	r4, [r3, #8]
   83c76:	f8cc 400c 	str.w	r4, [ip, #12]
   83c7a:	e69e      	b.n	839ba <_malloc_r+0xca>
   83c7c:	f046 0c01 	orr.w	ip, r6, #1
   83c80:	f042 0101 	orr.w	r1, r2, #1
   83c84:	4426      	add	r6, r4
   83c86:	f8c4 c004 	str.w	ip, [r4, #4]
   83c8a:	4628      	mov	r0, r5
   83c8c:	617e      	str	r6, [r7, #20]
   83c8e:	613e      	str	r6, [r7, #16]
   83c90:	f8c6 e00c 	str.w	lr, [r6, #12]
   83c94:	f8c6 e008 	str.w	lr, [r6, #8]
   83c98:	6071      	str	r1, [r6, #4]
   83c9a:	50e2      	str	r2, [r4, r3]
   83c9c:	f000 fa02 	bl	840a4 <__malloc_unlock>
   83ca0:	3408      	adds	r4, #8
   83ca2:	e6eb      	b.n	83a7c <_malloc_r+0x18c>
   83ca4:	687a      	ldr	r2, [r7, #4]
   83ca6:	e688      	b.n	839ba <_malloc_r+0xca>
   83ca8:	f108 0801 	add.w	r8, r8, #1
   83cac:	f018 0f03 	tst.w	r8, #3
   83cb0:	f10c 0c08 	add.w	ip, ip, #8
   83cb4:	f47f ae93 	bne.w	839de <_malloc_r+0xee>
   83cb8:	e02d      	b.n	83d16 <_malloc_r+0x426>
   83cba:	68dc      	ldr	r4, [r3, #12]
   83cbc:	42a3      	cmp	r3, r4
   83cbe:	bf08      	it	eq
   83cc0:	3002      	addeq	r0, #2
   83cc2:	f43f ae4b 	beq.w	8395c <_malloc_r+0x6c>
   83cc6:	e6c9      	b.n	83a5c <_malloc_r+0x16c>
   83cc8:	461c      	mov	r4, r3
   83cca:	4419      	add	r1, r3
   83ccc:	684a      	ldr	r2, [r1, #4]
   83cce:	68db      	ldr	r3, [r3, #12]
   83cd0:	f854 6f08 	ldr.w	r6, [r4, #8]!
   83cd4:	f042 0201 	orr.w	r2, r2, #1
   83cd8:	604a      	str	r2, [r1, #4]
   83cda:	4628      	mov	r0, r5
   83cdc:	60f3      	str	r3, [r6, #12]
   83cde:	609e      	str	r6, [r3, #8]
   83ce0:	f000 f9e0 	bl	840a4 <__malloc_unlock>
   83ce4:	e6ca      	b.n	83a7c <_malloc_r+0x18c>
   83ce6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   83cea:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   83cee:	00c1      	lsls	r1, r0, #3
   83cf0:	e620      	b.n	83934 <_malloc_r+0x44>
   83cf2:	099a      	lsrs	r2, r3, #6
   83cf4:	f102 0139 	add.w	r1, r2, #57	; 0x39
   83cf8:	00c9      	lsls	r1, r1, #3
   83cfa:	3238      	adds	r2, #56	; 0x38
   83cfc:	e7a4      	b.n	83c48 <_malloc_r+0x358>
   83cfe:	42bc      	cmp	r4, r7
   83d00:	d054      	beq.n	83dac <_malloc_r+0x4bc>
   83d02:	68bc      	ldr	r4, [r7, #8]
   83d04:	6862      	ldr	r2, [r4, #4]
   83d06:	f022 0203 	bic.w	r2, r2, #3
   83d0a:	e75e      	b.n	83bca <_malloc_r+0x2da>
   83d0c:	f859 3908 	ldr.w	r3, [r9], #-8
   83d10:	4599      	cmp	r9, r3
   83d12:	f040 8086 	bne.w	83e22 <_malloc_r+0x532>
   83d16:	f010 0f03 	tst.w	r0, #3
   83d1a:	f100 30ff 	add.w	r0, r0, #4294967295
   83d1e:	d1f5      	bne.n	83d0c <_malloc_r+0x41c>
   83d20:	687b      	ldr	r3, [r7, #4]
   83d22:	ea23 0304 	bic.w	r3, r3, r4
   83d26:	607b      	str	r3, [r7, #4]
   83d28:	0064      	lsls	r4, r4, #1
   83d2a:	429c      	cmp	r4, r3
   83d2c:	f63f aec8 	bhi.w	83ac0 <_malloc_r+0x1d0>
   83d30:	2c00      	cmp	r4, #0
   83d32:	f43f aec5 	beq.w	83ac0 <_malloc_r+0x1d0>
   83d36:	421c      	tst	r4, r3
   83d38:	4640      	mov	r0, r8
   83d3a:	f47f ae4c 	bne.w	839d6 <_malloc_r+0xe6>
   83d3e:	0064      	lsls	r4, r4, #1
   83d40:	421c      	tst	r4, r3
   83d42:	f100 0004 	add.w	r0, r0, #4
   83d46:	d0fa      	beq.n	83d3e <_malloc_r+0x44e>
   83d48:	e645      	b.n	839d6 <_malloc_r+0xe6>
   83d4a:	468c      	mov	ip, r1
   83d4c:	e78c      	b.n	83c68 <_malloc_r+0x378>
   83d4e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83d52:	d815      	bhi.n	83d80 <_malloc_r+0x490>
   83d54:	0bf3      	lsrs	r3, r6, #15
   83d56:	f103 0078 	add.w	r0, r3, #120	; 0x78
   83d5a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   83d5e:	00c1      	lsls	r1, r0, #3
   83d60:	e5e8      	b.n	83934 <_malloc_r+0x44>
   83d62:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   83d66:	e6ee      	b.n	83b46 <_malloc_r+0x256>
   83d68:	2101      	movs	r1, #1
   83d6a:	687b      	ldr	r3, [r7, #4]
   83d6c:	1092      	asrs	r2, r2, #2
   83d6e:	fa01 f202 	lsl.w	r2, r1, r2
   83d72:	431a      	orrs	r2, r3
   83d74:	607a      	str	r2, [r7, #4]
   83d76:	4663      	mov	r3, ip
   83d78:	e779      	b.n	83c6e <_malloc_r+0x37e>
   83d7a:	2301      	movs	r3, #1
   83d7c:	6053      	str	r3, [r2, #4]
   83d7e:	e72a      	b.n	83bd6 <_malloc_r+0x2e6>
   83d80:	f240 5254 	movw	r2, #1364	; 0x554
   83d84:	4293      	cmp	r3, r2
   83d86:	d822      	bhi.n	83dce <_malloc_r+0x4de>
   83d88:	0cb3      	lsrs	r3, r6, #18
   83d8a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   83d8e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   83d92:	00c1      	lsls	r1, r0, #3
   83d94:	e5ce      	b.n	83934 <_malloc_r+0x44>
   83d96:	f103 0b10 	add.w	fp, r3, #16
   83d9a:	e6af      	b.n	83afc <_malloc_r+0x20c>
   83d9c:	2a54      	cmp	r2, #84	; 0x54
   83d9e:	d829      	bhi.n	83df4 <_malloc_r+0x504>
   83da0:	0b1a      	lsrs	r2, r3, #12
   83da2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   83da6:	00c9      	lsls	r1, r1, #3
   83da8:	326e      	adds	r2, #110	; 0x6e
   83daa:	e74d      	b.n	83c48 <_malloc_r+0x358>
   83dac:	4b20      	ldr	r3, [pc, #128]	; (83e30 <_malloc_r+0x540>)
   83dae:	6819      	ldr	r1, [r3, #0]
   83db0:	4459      	add	r1, fp
   83db2:	6019      	str	r1, [r3, #0]
   83db4:	e6b3      	b.n	83b1e <_malloc_r+0x22e>
   83db6:	f3ca 000b 	ubfx	r0, sl, #0, #12
   83dba:	2800      	cmp	r0, #0
   83dbc:	f47f aeaf 	bne.w	83b1e <_malloc_r+0x22e>
   83dc0:	eb08 030b 	add.w	r3, r8, fp
   83dc4:	68ba      	ldr	r2, [r7, #8]
   83dc6:	f043 0301 	orr.w	r3, r3, #1
   83dca:	6053      	str	r3, [r2, #4]
   83dcc:	e6ef      	b.n	83bae <_malloc_r+0x2be>
   83dce:	207f      	movs	r0, #127	; 0x7f
   83dd0:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83dd4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   83dd8:	e5ac      	b.n	83934 <_malloc_r+0x44>
   83dda:	f104 0108 	add.w	r1, r4, #8
   83dde:	4628      	mov	r0, r5
   83de0:	9300      	str	r3, [sp, #0]
   83de2:	f7ff fc91 	bl	83708 <_free_r>
   83de6:	9b00      	ldr	r3, [sp, #0]
   83de8:	6819      	ldr	r1, [r3, #0]
   83dea:	e6e0      	b.n	83bae <_malloc_r+0x2be>
   83dec:	2001      	movs	r0, #1
   83dee:	f04f 0900 	mov.w	r9, #0
   83df2:	e6bd      	b.n	83b70 <_malloc_r+0x280>
   83df4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83df8:	d805      	bhi.n	83e06 <_malloc_r+0x516>
   83dfa:	0bda      	lsrs	r2, r3, #15
   83dfc:	f102 0178 	add.w	r1, r2, #120	; 0x78
   83e00:	00c9      	lsls	r1, r1, #3
   83e02:	3277      	adds	r2, #119	; 0x77
   83e04:	e720      	b.n	83c48 <_malloc_r+0x358>
   83e06:	f240 5154 	movw	r1, #1364	; 0x554
   83e0a:	428a      	cmp	r2, r1
   83e0c:	d805      	bhi.n	83e1a <_malloc_r+0x52a>
   83e0e:	0c9a      	lsrs	r2, r3, #18
   83e10:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   83e14:	00c9      	lsls	r1, r1, #3
   83e16:	327c      	adds	r2, #124	; 0x7c
   83e18:	e716      	b.n	83c48 <_malloc_r+0x358>
   83e1a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83e1e:	227e      	movs	r2, #126	; 0x7e
   83e20:	e712      	b.n	83c48 <_malloc_r+0x358>
   83e22:	687b      	ldr	r3, [r7, #4]
   83e24:	e780      	b.n	83d28 <_malloc_r+0x438>
   83e26:	08f0      	lsrs	r0, r6, #3
   83e28:	f106 0308 	add.w	r3, r6, #8
   83e2c:	e60e      	b.n	83a4c <_malloc_r+0x15c>
   83e2e:	bf00      	nop
   83e30:	20070bd4 	.word	0x20070bd4

00083e34 <__ascii_mbtowc>:
   83e34:	b082      	sub	sp, #8
   83e36:	b149      	cbz	r1, 83e4c <__ascii_mbtowc+0x18>
   83e38:	b15a      	cbz	r2, 83e52 <__ascii_mbtowc+0x1e>
   83e3a:	b16b      	cbz	r3, 83e58 <__ascii_mbtowc+0x24>
   83e3c:	7813      	ldrb	r3, [r2, #0]
   83e3e:	600b      	str	r3, [r1, #0]
   83e40:	7812      	ldrb	r2, [r2, #0]
   83e42:	1c10      	adds	r0, r2, #0
   83e44:	bf18      	it	ne
   83e46:	2001      	movne	r0, #1
   83e48:	b002      	add	sp, #8
   83e4a:	4770      	bx	lr
   83e4c:	a901      	add	r1, sp, #4
   83e4e:	2a00      	cmp	r2, #0
   83e50:	d1f3      	bne.n	83e3a <__ascii_mbtowc+0x6>
   83e52:	4610      	mov	r0, r2
   83e54:	b002      	add	sp, #8
   83e56:	4770      	bx	lr
   83e58:	f06f 0001 	mvn.w	r0, #1
   83e5c:	e7f4      	b.n	83e48 <__ascii_mbtowc+0x14>
   83e5e:	bf00      	nop

00083e60 <memchr>:
   83e60:	0783      	lsls	r3, r0, #30
   83e62:	b470      	push	{r4, r5, r6}
   83e64:	b2cd      	uxtb	r5, r1
   83e66:	d03d      	beq.n	83ee4 <memchr+0x84>
   83e68:	1e54      	subs	r4, r2, #1
   83e6a:	b30a      	cbz	r2, 83eb0 <memchr+0x50>
   83e6c:	7803      	ldrb	r3, [r0, #0]
   83e6e:	42ab      	cmp	r3, r5
   83e70:	d01f      	beq.n	83eb2 <memchr+0x52>
   83e72:	1c43      	adds	r3, r0, #1
   83e74:	e005      	b.n	83e82 <memchr+0x22>
   83e76:	f114 34ff 	adds.w	r4, r4, #4294967295
   83e7a:	d319      	bcc.n	83eb0 <memchr+0x50>
   83e7c:	7802      	ldrb	r2, [r0, #0]
   83e7e:	42aa      	cmp	r2, r5
   83e80:	d017      	beq.n	83eb2 <memchr+0x52>
   83e82:	f013 0f03 	tst.w	r3, #3
   83e86:	4618      	mov	r0, r3
   83e88:	f103 0301 	add.w	r3, r3, #1
   83e8c:	d1f3      	bne.n	83e76 <memchr+0x16>
   83e8e:	2c03      	cmp	r4, #3
   83e90:	d811      	bhi.n	83eb6 <memchr+0x56>
   83e92:	b34c      	cbz	r4, 83ee8 <memchr+0x88>
   83e94:	7803      	ldrb	r3, [r0, #0]
   83e96:	42ab      	cmp	r3, r5
   83e98:	d00b      	beq.n	83eb2 <memchr+0x52>
   83e9a:	4404      	add	r4, r0
   83e9c:	1c43      	adds	r3, r0, #1
   83e9e:	e002      	b.n	83ea6 <memchr+0x46>
   83ea0:	7802      	ldrb	r2, [r0, #0]
   83ea2:	42aa      	cmp	r2, r5
   83ea4:	d005      	beq.n	83eb2 <memchr+0x52>
   83ea6:	429c      	cmp	r4, r3
   83ea8:	4618      	mov	r0, r3
   83eaa:	f103 0301 	add.w	r3, r3, #1
   83eae:	d1f7      	bne.n	83ea0 <memchr+0x40>
   83eb0:	2000      	movs	r0, #0
   83eb2:	bc70      	pop	{r4, r5, r6}
   83eb4:	4770      	bx	lr
   83eb6:	0209      	lsls	r1, r1, #8
   83eb8:	b289      	uxth	r1, r1
   83eba:	4329      	orrs	r1, r5
   83ebc:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   83ec0:	6803      	ldr	r3, [r0, #0]
   83ec2:	4606      	mov	r6, r0
   83ec4:	404b      	eors	r3, r1
   83ec6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   83eca:	ea22 0303 	bic.w	r3, r2, r3
   83ece:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   83ed2:	f100 0004 	add.w	r0, r0, #4
   83ed6:	d103      	bne.n	83ee0 <memchr+0x80>
   83ed8:	3c04      	subs	r4, #4
   83eda:	2c03      	cmp	r4, #3
   83edc:	d8f0      	bhi.n	83ec0 <memchr+0x60>
   83ede:	e7d8      	b.n	83e92 <memchr+0x32>
   83ee0:	4630      	mov	r0, r6
   83ee2:	e7d7      	b.n	83e94 <memchr+0x34>
   83ee4:	4614      	mov	r4, r2
   83ee6:	e7d2      	b.n	83e8e <memchr+0x2e>
   83ee8:	4620      	mov	r0, r4
   83eea:	e7e2      	b.n	83eb2 <memchr+0x52>

00083eec <memcpy>:
   83eec:	4684      	mov	ip, r0
   83eee:	ea41 0300 	orr.w	r3, r1, r0
   83ef2:	f013 0303 	ands.w	r3, r3, #3
   83ef6:	d149      	bne.n	83f8c <memcpy+0xa0>
   83ef8:	3a40      	subs	r2, #64	; 0x40
   83efa:	d323      	bcc.n	83f44 <memcpy+0x58>
   83efc:	680b      	ldr	r3, [r1, #0]
   83efe:	6003      	str	r3, [r0, #0]
   83f00:	684b      	ldr	r3, [r1, #4]
   83f02:	6043      	str	r3, [r0, #4]
   83f04:	688b      	ldr	r3, [r1, #8]
   83f06:	6083      	str	r3, [r0, #8]
   83f08:	68cb      	ldr	r3, [r1, #12]
   83f0a:	60c3      	str	r3, [r0, #12]
   83f0c:	690b      	ldr	r3, [r1, #16]
   83f0e:	6103      	str	r3, [r0, #16]
   83f10:	694b      	ldr	r3, [r1, #20]
   83f12:	6143      	str	r3, [r0, #20]
   83f14:	698b      	ldr	r3, [r1, #24]
   83f16:	6183      	str	r3, [r0, #24]
   83f18:	69cb      	ldr	r3, [r1, #28]
   83f1a:	61c3      	str	r3, [r0, #28]
   83f1c:	6a0b      	ldr	r3, [r1, #32]
   83f1e:	6203      	str	r3, [r0, #32]
   83f20:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83f22:	6243      	str	r3, [r0, #36]	; 0x24
   83f24:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83f26:	6283      	str	r3, [r0, #40]	; 0x28
   83f28:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83f2a:	62c3      	str	r3, [r0, #44]	; 0x2c
   83f2c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83f2e:	6303      	str	r3, [r0, #48]	; 0x30
   83f30:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83f32:	6343      	str	r3, [r0, #52]	; 0x34
   83f34:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83f36:	6383      	str	r3, [r0, #56]	; 0x38
   83f38:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83f3a:	63c3      	str	r3, [r0, #60]	; 0x3c
   83f3c:	3040      	adds	r0, #64	; 0x40
   83f3e:	3140      	adds	r1, #64	; 0x40
   83f40:	3a40      	subs	r2, #64	; 0x40
   83f42:	d2db      	bcs.n	83efc <memcpy+0x10>
   83f44:	3230      	adds	r2, #48	; 0x30
   83f46:	d30b      	bcc.n	83f60 <memcpy+0x74>
   83f48:	680b      	ldr	r3, [r1, #0]
   83f4a:	6003      	str	r3, [r0, #0]
   83f4c:	684b      	ldr	r3, [r1, #4]
   83f4e:	6043      	str	r3, [r0, #4]
   83f50:	688b      	ldr	r3, [r1, #8]
   83f52:	6083      	str	r3, [r0, #8]
   83f54:	68cb      	ldr	r3, [r1, #12]
   83f56:	60c3      	str	r3, [r0, #12]
   83f58:	3010      	adds	r0, #16
   83f5a:	3110      	adds	r1, #16
   83f5c:	3a10      	subs	r2, #16
   83f5e:	d2f3      	bcs.n	83f48 <memcpy+0x5c>
   83f60:	320c      	adds	r2, #12
   83f62:	d305      	bcc.n	83f70 <memcpy+0x84>
   83f64:	f851 3b04 	ldr.w	r3, [r1], #4
   83f68:	f840 3b04 	str.w	r3, [r0], #4
   83f6c:	3a04      	subs	r2, #4
   83f6e:	d2f9      	bcs.n	83f64 <memcpy+0x78>
   83f70:	3204      	adds	r2, #4
   83f72:	d008      	beq.n	83f86 <memcpy+0x9a>
   83f74:	07d2      	lsls	r2, r2, #31
   83f76:	bf1c      	itt	ne
   83f78:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83f7c:	f800 3b01 	strbne.w	r3, [r0], #1
   83f80:	d301      	bcc.n	83f86 <memcpy+0x9a>
   83f82:	880b      	ldrh	r3, [r1, #0]
   83f84:	8003      	strh	r3, [r0, #0]
   83f86:	4660      	mov	r0, ip
   83f88:	4770      	bx	lr
   83f8a:	bf00      	nop
   83f8c:	2a08      	cmp	r2, #8
   83f8e:	d313      	bcc.n	83fb8 <memcpy+0xcc>
   83f90:	078b      	lsls	r3, r1, #30
   83f92:	d0b1      	beq.n	83ef8 <memcpy+0xc>
   83f94:	f010 0303 	ands.w	r3, r0, #3
   83f98:	d0ae      	beq.n	83ef8 <memcpy+0xc>
   83f9a:	f1c3 0304 	rsb	r3, r3, #4
   83f9e:	1ad2      	subs	r2, r2, r3
   83fa0:	07db      	lsls	r3, r3, #31
   83fa2:	bf1c      	itt	ne
   83fa4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83fa8:	f800 3b01 	strbne.w	r3, [r0], #1
   83fac:	d3a4      	bcc.n	83ef8 <memcpy+0xc>
   83fae:	f831 3b02 	ldrh.w	r3, [r1], #2
   83fb2:	f820 3b02 	strh.w	r3, [r0], #2
   83fb6:	e79f      	b.n	83ef8 <memcpy+0xc>
   83fb8:	3a04      	subs	r2, #4
   83fba:	d3d9      	bcc.n	83f70 <memcpy+0x84>
   83fbc:	3a01      	subs	r2, #1
   83fbe:	f811 3b01 	ldrb.w	r3, [r1], #1
   83fc2:	f800 3b01 	strb.w	r3, [r0], #1
   83fc6:	d2f9      	bcs.n	83fbc <memcpy+0xd0>
   83fc8:	780b      	ldrb	r3, [r1, #0]
   83fca:	7003      	strb	r3, [r0, #0]
   83fcc:	784b      	ldrb	r3, [r1, #1]
   83fce:	7043      	strb	r3, [r0, #1]
   83fd0:	788b      	ldrb	r3, [r1, #2]
   83fd2:	7083      	strb	r3, [r0, #2]
   83fd4:	4660      	mov	r0, ip
   83fd6:	4770      	bx	lr

00083fd8 <memmove>:
   83fd8:	4288      	cmp	r0, r1
   83fda:	b5f0      	push	{r4, r5, r6, r7, lr}
   83fdc:	d90d      	bls.n	83ffa <memmove+0x22>
   83fde:	188b      	adds	r3, r1, r2
   83fe0:	4298      	cmp	r0, r3
   83fe2:	d20a      	bcs.n	83ffa <memmove+0x22>
   83fe4:	1884      	adds	r4, r0, r2
   83fe6:	2a00      	cmp	r2, #0
   83fe8:	d051      	beq.n	8408e <memmove+0xb6>
   83fea:	4622      	mov	r2, r4
   83fec:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   83ff0:	4299      	cmp	r1, r3
   83ff2:	f802 4d01 	strb.w	r4, [r2, #-1]!
   83ff6:	d1f9      	bne.n	83fec <memmove+0x14>
   83ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83ffa:	2a0f      	cmp	r2, #15
   83ffc:	d948      	bls.n	84090 <memmove+0xb8>
   83ffe:	ea41 0300 	orr.w	r3, r1, r0
   84002:	079b      	lsls	r3, r3, #30
   84004:	d146      	bne.n	84094 <memmove+0xbc>
   84006:	4615      	mov	r5, r2
   84008:	f100 0410 	add.w	r4, r0, #16
   8400c:	f101 0310 	add.w	r3, r1, #16
   84010:	f853 6c10 	ldr.w	r6, [r3, #-16]
   84014:	3d10      	subs	r5, #16
   84016:	f844 6c10 	str.w	r6, [r4, #-16]
   8401a:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   8401e:	2d0f      	cmp	r5, #15
   84020:	f844 6c0c 	str.w	r6, [r4, #-12]
   84024:	f853 6c08 	ldr.w	r6, [r3, #-8]
   84028:	f104 0410 	add.w	r4, r4, #16
   8402c:	f844 6c18 	str.w	r6, [r4, #-24]
   84030:	f853 6c04 	ldr.w	r6, [r3, #-4]
   84034:	f103 0310 	add.w	r3, r3, #16
   84038:	f844 6c14 	str.w	r6, [r4, #-20]
   8403c:	d8e8      	bhi.n	84010 <memmove+0x38>
   8403e:	f1a2 0310 	sub.w	r3, r2, #16
   84042:	f023 030f 	bic.w	r3, r3, #15
   84046:	f002 0e0f 	and.w	lr, r2, #15
   8404a:	3310      	adds	r3, #16
   8404c:	f1be 0f03 	cmp.w	lr, #3
   84050:	4419      	add	r1, r3
   84052:	4403      	add	r3, r0
   84054:	d921      	bls.n	8409a <memmove+0xc2>
   84056:	460e      	mov	r6, r1
   84058:	4674      	mov	r4, lr
   8405a:	1f1d      	subs	r5, r3, #4
   8405c:	f856 7b04 	ldr.w	r7, [r6], #4
   84060:	3c04      	subs	r4, #4
   84062:	2c03      	cmp	r4, #3
   84064:	f845 7f04 	str.w	r7, [r5, #4]!
   84068:	d8f8      	bhi.n	8405c <memmove+0x84>
   8406a:	f1ae 0404 	sub.w	r4, lr, #4
   8406e:	f024 0403 	bic.w	r4, r4, #3
   84072:	3404      	adds	r4, #4
   84074:	4421      	add	r1, r4
   84076:	4423      	add	r3, r4
   84078:	f002 0203 	and.w	r2, r2, #3
   8407c:	b162      	cbz	r2, 84098 <memmove+0xc0>
   8407e:	3b01      	subs	r3, #1
   84080:	440a      	add	r2, r1
   84082:	f811 4b01 	ldrb.w	r4, [r1], #1
   84086:	428a      	cmp	r2, r1
   84088:	f803 4f01 	strb.w	r4, [r3, #1]!
   8408c:	d1f9      	bne.n	84082 <memmove+0xaa>
   8408e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84090:	4603      	mov	r3, r0
   84092:	e7f3      	b.n	8407c <memmove+0xa4>
   84094:	4603      	mov	r3, r0
   84096:	e7f2      	b.n	8407e <memmove+0xa6>
   84098:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8409a:	4672      	mov	r2, lr
   8409c:	e7ee      	b.n	8407c <memmove+0xa4>
   8409e:	bf00      	nop

000840a0 <__malloc_lock>:
   840a0:	4770      	bx	lr
   840a2:	bf00      	nop

000840a4 <__malloc_unlock>:
   840a4:	4770      	bx	lr
   840a6:	bf00      	nop

000840a8 <_Balloc>:
   840a8:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   840aa:	b570      	push	{r4, r5, r6, lr}
   840ac:	4605      	mov	r5, r0
   840ae:	460c      	mov	r4, r1
   840b0:	b14b      	cbz	r3, 840c6 <_Balloc+0x1e>
   840b2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   840b6:	b180      	cbz	r0, 840da <_Balloc+0x32>
   840b8:	6802      	ldr	r2, [r0, #0]
   840ba:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   840be:	2300      	movs	r3, #0
   840c0:	6103      	str	r3, [r0, #16]
   840c2:	60c3      	str	r3, [r0, #12]
   840c4:	bd70      	pop	{r4, r5, r6, pc}
   840c6:	2221      	movs	r2, #33	; 0x21
   840c8:	2104      	movs	r1, #4
   840ca:	f000 fd91 	bl	84bf0 <_calloc_r>
   840ce:	64e8      	str	r0, [r5, #76]	; 0x4c
   840d0:	4603      	mov	r3, r0
   840d2:	2800      	cmp	r0, #0
   840d4:	d1ed      	bne.n	840b2 <_Balloc+0xa>
   840d6:	2000      	movs	r0, #0
   840d8:	bd70      	pop	{r4, r5, r6, pc}
   840da:	2101      	movs	r1, #1
   840dc:	fa01 f604 	lsl.w	r6, r1, r4
   840e0:	1d72      	adds	r2, r6, #5
   840e2:	4628      	mov	r0, r5
   840e4:	0092      	lsls	r2, r2, #2
   840e6:	f000 fd83 	bl	84bf0 <_calloc_r>
   840ea:	2800      	cmp	r0, #0
   840ec:	d0f3      	beq.n	840d6 <_Balloc+0x2e>
   840ee:	6044      	str	r4, [r0, #4]
   840f0:	6086      	str	r6, [r0, #8]
   840f2:	e7e4      	b.n	840be <_Balloc+0x16>

000840f4 <_Bfree>:
   840f4:	b131      	cbz	r1, 84104 <_Bfree+0x10>
   840f6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   840f8:	684a      	ldr	r2, [r1, #4]
   840fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   840fe:	6008      	str	r0, [r1, #0]
   84100:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   84104:	4770      	bx	lr
   84106:	bf00      	nop

00084108 <__multadd>:
   84108:	b5f0      	push	{r4, r5, r6, r7, lr}
   8410a:	460c      	mov	r4, r1
   8410c:	4605      	mov	r5, r0
   8410e:	f04f 0e00 	mov.w	lr, #0
   84112:	690e      	ldr	r6, [r1, #16]
   84114:	b083      	sub	sp, #12
   84116:	f101 0714 	add.w	r7, r1, #20
   8411a:	6838      	ldr	r0, [r7, #0]
   8411c:	f10e 0e01 	add.w	lr, lr, #1
   84120:	b281      	uxth	r1, r0
   84122:	fb02 3301 	mla	r3, r2, r1, r3
   84126:	0c01      	lsrs	r1, r0, #16
   84128:	0c18      	lsrs	r0, r3, #16
   8412a:	fb02 0101 	mla	r1, r2, r1, r0
   8412e:	b29b      	uxth	r3, r3
   84130:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   84134:	4576      	cmp	r6, lr
   84136:	f847 3b04 	str.w	r3, [r7], #4
   8413a:	ea4f 4311 	mov.w	r3, r1, lsr #16
   8413e:	dcec      	bgt.n	8411a <__multadd+0x12>
   84140:	b13b      	cbz	r3, 84152 <__multadd+0x4a>
   84142:	68a2      	ldr	r2, [r4, #8]
   84144:	4296      	cmp	r6, r2
   84146:	da07      	bge.n	84158 <__multadd+0x50>
   84148:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   8414c:	3601      	adds	r6, #1
   8414e:	6153      	str	r3, [r2, #20]
   84150:	6126      	str	r6, [r4, #16]
   84152:	4620      	mov	r0, r4
   84154:	b003      	add	sp, #12
   84156:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84158:	6861      	ldr	r1, [r4, #4]
   8415a:	4628      	mov	r0, r5
   8415c:	3101      	adds	r1, #1
   8415e:	9301      	str	r3, [sp, #4]
   84160:	f7ff ffa2 	bl	840a8 <_Balloc>
   84164:	4607      	mov	r7, r0
   84166:	6922      	ldr	r2, [r4, #16]
   84168:	f104 010c 	add.w	r1, r4, #12
   8416c:	3202      	adds	r2, #2
   8416e:	0092      	lsls	r2, r2, #2
   84170:	300c      	adds	r0, #12
   84172:	f7ff febb 	bl	83eec <memcpy>
   84176:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   84178:	6861      	ldr	r1, [r4, #4]
   8417a:	9b01      	ldr	r3, [sp, #4]
   8417c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   84180:	6020      	str	r0, [r4, #0]
   84182:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   84186:	463c      	mov	r4, r7
   84188:	e7de      	b.n	84148 <__multadd+0x40>
   8418a:	bf00      	nop

0008418c <__hi0bits>:
   8418c:	0c02      	lsrs	r2, r0, #16
   8418e:	0412      	lsls	r2, r2, #16
   84190:	4603      	mov	r3, r0
   84192:	b9b2      	cbnz	r2, 841c2 <__hi0bits+0x36>
   84194:	0403      	lsls	r3, r0, #16
   84196:	2010      	movs	r0, #16
   84198:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   8419c:	bf04      	itt	eq
   8419e:	021b      	lsleq	r3, r3, #8
   841a0:	3008      	addeq	r0, #8
   841a2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   841a6:	bf04      	itt	eq
   841a8:	011b      	lsleq	r3, r3, #4
   841aa:	3004      	addeq	r0, #4
   841ac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   841b0:	bf04      	itt	eq
   841b2:	009b      	lsleq	r3, r3, #2
   841b4:	3002      	addeq	r0, #2
   841b6:	2b00      	cmp	r3, #0
   841b8:	db02      	blt.n	841c0 <__hi0bits+0x34>
   841ba:	005b      	lsls	r3, r3, #1
   841bc:	d403      	bmi.n	841c6 <__hi0bits+0x3a>
   841be:	2020      	movs	r0, #32
   841c0:	4770      	bx	lr
   841c2:	2000      	movs	r0, #0
   841c4:	e7e8      	b.n	84198 <__hi0bits+0xc>
   841c6:	3001      	adds	r0, #1
   841c8:	4770      	bx	lr
   841ca:	bf00      	nop

000841cc <__lo0bits>:
   841cc:	6803      	ldr	r3, [r0, #0]
   841ce:	4601      	mov	r1, r0
   841d0:	f013 0207 	ands.w	r2, r3, #7
   841d4:	d007      	beq.n	841e6 <__lo0bits+0x1a>
   841d6:	07da      	lsls	r2, r3, #31
   841d8:	d421      	bmi.n	8421e <__lo0bits+0x52>
   841da:	0798      	lsls	r0, r3, #30
   841dc:	d421      	bmi.n	84222 <__lo0bits+0x56>
   841de:	089b      	lsrs	r3, r3, #2
   841e0:	600b      	str	r3, [r1, #0]
   841e2:	2002      	movs	r0, #2
   841e4:	4770      	bx	lr
   841e6:	b298      	uxth	r0, r3
   841e8:	b198      	cbz	r0, 84212 <__lo0bits+0x46>
   841ea:	4610      	mov	r0, r2
   841ec:	f013 0fff 	tst.w	r3, #255	; 0xff
   841f0:	bf04      	itt	eq
   841f2:	0a1b      	lsreq	r3, r3, #8
   841f4:	3008      	addeq	r0, #8
   841f6:	071a      	lsls	r2, r3, #28
   841f8:	bf04      	itt	eq
   841fa:	091b      	lsreq	r3, r3, #4
   841fc:	3004      	addeq	r0, #4
   841fe:	079a      	lsls	r2, r3, #30
   84200:	bf04      	itt	eq
   84202:	089b      	lsreq	r3, r3, #2
   84204:	3002      	addeq	r0, #2
   84206:	07da      	lsls	r2, r3, #31
   84208:	d407      	bmi.n	8421a <__lo0bits+0x4e>
   8420a:	085b      	lsrs	r3, r3, #1
   8420c:	d104      	bne.n	84218 <__lo0bits+0x4c>
   8420e:	2020      	movs	r0, #32
   84210:	4770      	bx	lr
   84212:	0c1b      	lsrs	r3, r3, #16
   84214:	2010      	movs	r0, #16
   84216:	e7e9      	b.n	841ec <__lo0bits+0x20>
   84218:	3001      	adds	r0, #1
   8421a:	600b      	str	r3, [r1, #0]
   8421c:	4770      	bx	lr
   8421e:	2000      	movs	r0, #0
   84220:	4770      	bx	lr
   84222:	085b      	lsrs	r3, r3, #1
   84224:	600b      	str	r3, [r1, #0]
   84226:	2001      	movs	r0, #1
   84228:	4770      	bx	lr
   8422a:	bf00      	nop

0008422c <__i2b>:
   8422c:	b510      	push	{r4, lr}
   8422e:	460c      	mov	r4, r1
   84230:	2101      	movs	r1, #1
   84232:	f7ff ff39 	bl	840a8 <_Balloc>
   84236:	2201      	movs	r2, #1
   84238:	6144      	str	r4, [r0, #20]
   8423a:	6102      	str	r2, [r0, #16]
   8423c:	bd10      	pop	{r4, pc}
   8423e:	bf00      	nop

00084240 <__multiply>:
   84240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84244:	690c      	ldr	r4, [r1, #16]
   84246:	6915      	ldr	r5, [r2, #16]
   84248:	b083      	sub	sp, #12
   8424a:	42ac      	cmp	r4, r5
   8424c:	468b      	mov	fp, r1
   8424e:	4616      	mov	r6, r2
   84250:	da04      	bge.n	8425c <__multiply+0x1c>
   84252:	4622      	mov	r2, r4
   84254:	46b3      	mov	fp, r6
   84256:	462c      	mov	r4, r5
   84258:	460e      	mov	r6, r1
   8425a:	4615      	mov	r5, r2
   8425c:	f8db 3008 	ldr.w	r3, [fp, #8]
   84260:	eb04 0805 	add.w	r8, r4, r5
   84264:	f8db 1004 	ldr.w	r1, [fp, #4]
   84268:	4598      	cmp	r8, r3
   8426a:	bfc8      	it	gt
   8426c:	3101      	addgt	r1, #1
   8426e:	f7ff ff1b 	bl	840a8 <_Balloc>
   84272:	f100 0914 	add.w	r9, r0, #20
   84276:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   8427a:	45d1      	cmp	r9, sl
   8427c:	9000      	str	r0, [sp, #0]
   8427e:	d205      	bcs.n	8428c <__multiply+0x4c>
   84280:	464b      	mov	r3, r9
   84282:	2100      	movs	r1, #0
   84284:	f843 1b04 	str.w	r1, [r3], #4
   84288:	459a      	cmp	sl, r3
   8428a:	d8fb      	bhi.n	84284 <__multiply+0x44>
   8428c:	f106 0c14 	add.w	ip, r6, #20
   84290:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   84294:	f10b 0b14 	add.w	fp, fp, #20
   84298:	459c      	cmp	ip, r3
   8429a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   8429e:	d24b      	bcs.n	84338 <__multiply+0xf8>
   842a0:	f8cd a004 	str.w	sl, [sp, #4]
   842a4:	469a      	mov	sl, r3
   842a6:	f8dc 5000 	ldr.w	r5, [ip]
   842aa:	b2af      	uxth	r7, r5
   842ac:	b1e7      	cbz	r7, 842e8 <__multiply+0xa8>
   842ae:	464d      	mov	r5, r9
   842b0:	465e      	mov	r6, fp
   842b2:	2100      	movs	r1, #0
   842b4:	f856 2b04 	ldr.w	r2, [r6], #4
   842b8:	6828      	ldr	r0, [r5, #0]
   842ba:	b293      	uxth	r3, r2
   842bc:	b284      	uxth	r4, r0
   842be:	0c12      	lsrs	r2, r2, #16
   842c0:	fb07 4303 	mla	r3, r7, r3, r4
   842c4:	0c00      	lsrs	r0, r0, #16
   842c6:	fb07 0202 	mla	r2, r7, r2, r0
   842ca:	440b      	add	r3, r1
   842cc:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   842d0:	b29b      	uxth	r3, r3
   842d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   842d6:	45b6      	cmp	lr, r6
   842d8:	f845 3b04 	str.w	r3, [r5], #4
   842dc:	ea4f 4111 	mov.w	r1, r1, lsr #16
   842e0:	d8e8      	bhi.n	842b4 <__multiply+0x74>
   842e2:	6029      	str	r1, [r5, #0]
   842e4:	f8dc 5000 	ldr.w	r5, [ip]
   842e8:	0c2d      	lsrs	r5, r5, #16
   842ea:	d01d      	beq.n	84328 <__multiply+0xe8>
   842ec:	f8d9 3000 	ldr.w	r3, [r9]
   842f0:	4648      	mov	r0, r9
   842f2:	461c      	mov	r4, r3
   842f4:	4659      	mov	r1, fp
   842f6:	2200      	movs	r2, #0
   842f8:	880e      	ldrh	r6, [r1, #0]
   842fa:	0c24      	lsrs	r4, r4, #16
   842fc:	fb05 4406 	mla	r4, r5, r6, r4
   84300:	b29b      	uxth	r3, r3
   84302:	4422      	add	r2, r4
   84304:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84308:	f840 3b04 	str.w	r3, [r0], #4
   8430c:	f851 3b04 	ldr.w	r3, [r1], #4
   84310:	6804      	ldr	r4, [r0, #0]
   84312:	0c1b      	lsrs	r3, r3, #16
   84314:	b2a6      	uxth	r6, r4
   84316:	fb05 6303 	mla	r3, r5, r3, r6
   8431a:	458e      	cmp	lr, r1
   8431c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   84320:	ea4f 4213 	mov.w	r2, r3, lsr #16
   84324:	d8e8      	bhi.n	842f8 <__multiply+0xb8>
   84326:	6003      	str	r3, [r0, #0]
   84328:	f10c 0c04 	add.w	ip, ip, #4
   8432c:	45e2      	cmp	sl, ip
   8432e:	f109 0904 	add.w	r9, r9, #4
   84332:	d8b8      	bhi.n	842a6 <__multiply+0x66>
   84334:	f8dd a004 	ldr.w	sl, [sp, #4]
   84338:	f1b8 0f00 	cmp.w	r8, #0
   8433c:	dd0b      	ble.n	84356 <__multiply+0x116>
   8433e:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   84342:	f1aa 0a04 	sub.w	sl, sl, #4
   84346:	b11b      	cbz	r3, 84350 <__multiply+0x110>
   84348:	e005      	b.n	84356 <__multiply+0x116>
   8434a:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   8434e:	b913      	cbnz	r3, 84356 <__multiply+0x116>
   84350:	f1b8 0801 	subs.w	r8, r8, #1
   84354:	d1f9      	bne.n	8434a <__multiply+0x10a>
   84356:	9800      	ldr	r0, [sp, #0]
   84358:	f8c0 8010 	str.w	r8, [r0, #16]
   8435c:	b003      	add	sp, #12
   8435e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84362:	bf00      	nop

00084364 <__pow5mult>:
   84364:	f012 0303 	ands.w	r3, r2, #3
   84368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8436c:	4614      	mov	r4, r2
   8436e:	4607      	mov	r7, r0
   84370:	d12e      	bne.n	843d0 <__pow5mult+0x6c>
   84372:	460d      	mov	r5, r1
   84374:	10a4      	asrs	r4, r4, #2
   84376:	d01c      	beq.n	843b2 <__pow5mult+0x4e>
   84378:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   8437a:	b396      	cbz	r6, 843e2 <__pow5mult+0x7e>
   8437c:	07e3      	lsls	r3, r4, #31
   8437e:	f04f 0800 	mov.w	r8, #0
   84382:	d406      	bmi.n	84392 <__pow5mult+0x2e>
   84384:	1064      	asrs	r4, r4, #1
   84386:	d014      	beq.n	843b2 <__pow5mult+0x4e>
   84388:	6830      	ldr	r0, [r6, #0]
   8438a:	b1a8      	cbz	r0, 843b8 <__pow5mult+0x54>
   8438c:	4606      	mov	r6, r0
   8438e:	07e3      	lsls	r3, r4, #31
   84390:	d5f8      	bpl.n	84384 <__pow5mult+0x20>
   84392:	4632      	mov	r2, r6
   84394:	4629      	mov	r1, r5
   84396:	4638      	mov	r0, r7
   84398:	f7ff ff52 	bl	84240 <__multiply>
   8439c:	b1b5      	cbz	r5, 843cc <__pow5mult+0x68>
   8439e:	686a      	ldr	r2, [r5, #4]
   843a0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   843a2:	1064      	asrs	r4, r4, #1
   843a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   843a8:	6029      	str	r1, [r5, #0]
   843aa:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   843ae:	4605      	mov	r5, r0
   843b0:	d1ea      	bne.n	84388 <__pow5mult+0x24>
   843b2:	4628      	mov	r0, r5
   843b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   843b8:	4632      	mov	r2, r6
   843ba:	4631      	mov	r1, r6
   843bc:	4638      	mov	r0, r7
   843be:	f7ff ff3f 	bl	84240 <__multiply>
   843c2:	6030      	str	r0, [r6, #0]
   843c4:	f8c0 8000 	str.w	r8, [r0]
   843c8:	4606      	mov	r6, r0
   843ca:	e7e0      	b.n	8438e <__pow5mult+0x2a>
   843cc:	4605      	mov	r5, r0
   843ce:	e7d9      	b.n	84384 <__pow5mult+0x20>
   843d0:	4a0b      	ldr	r2, [pc, #44]	; (84400 <__pow5mult+0x9c>)
   843d2:	3b01      	subs	r3, #1
   843d4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   843d8:	2300      	movs	r3, #0
   843da:	f7ff fe95 	bl	84108 <__multadd>
   843de:	4605      	mov	r5, r0
   843e0:	e7c8      	b.n	84374 <__pow5mult+0x10>
   843e2:	2101      	movs	r1, #1
   843e4:	4638      	mov	r0, r7
   843e6:	f7ff fe5f 	bl	840a8 <_Balloc>
   843ea:	f240 2171 	movw	r1, #625	; 0x271
   843ee:	2201      	movs	r2, #1
   843f0:	2300      	movs	r3, #0
   843f2:	6141      	str	r1, [r0, #20]
   843f4:	6102      	str	r2, [r0, #16]
   843f6:	4606      	mov	r6, r0
   843f8:	64b8      	str	r0, [r7, #72]	; 0x48
   843fa:	6003      	str	r3, [r0, #0]
   843fc:	e7be      	b.n	8437c <__pow5mult+0x18>
   843fe:	bf00      	nop
   84400:	00085a28 	.word	0x00085a28

00084404 <__lshift>:
   84404:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84408:	690b      	ldr	r3, [r1, #16]
   8440a:	1154      	asrs	r4, r2, #5
   8440c:	eb04 0803 	add.w	r8, r4, r3
   84410:	688b      	ldr	r3, [r1, #8]
   84412:	f108 0501 	add.w	r5, r8, #1
   84416:	429d      	cmp	r5, r3
   84418:	460e      	mov	r6, r1
   8441a:	4691      	mov	r9, r2
   8441c:	4607      	mov	r7, r0
   8441e:	6849      	ldr	r1, [r1, #4]
   84420:	dd04      	ble.n	8442c <__lshift+0x28>
   84422:	005b      	lsls	r3, r3, #1
   84424:	429d      	cmp	r5, r3
   84426:	f101 0101 	add.w	r1, r1, #1
   8442a:	dcfa      	bgt.n	84422 <__lshift+0x1e>
   8442c:	4638      	mov	r0, r7
   8442e:	f7ff fe3b 	bl	840a8 <_Balloc>
   84432:	2c00      	cmp	r4, #0
   84434:	f100 0314 	add.w	r3, r0, #20
   84438:	dd06      	ble.n	84448 <__lshift+0x44>
   8443a:	2100      	movs	r1, #0
   8443c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   84440:	f843 1b04 	str.w	r1, [r3], #4
   84444:	429a      	cmp	r2, r3
   84446:	d1fb      	bne.n	84440 <__lshift+0x3c>
   84448:	6934      	ldr	r4, [r6, #16]
   8444a:	f106 0114 	add.w	r1, r6, #20
   8444e:	f019 091f 	ands.w	r9, r9, #31
   84452:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   84456:	d01d      	beq.n	84494 <__lshift+0x90>
   84458:	2200      	movs	r2, #0
   8445a:	f1c9 0c20 	rsb	ip, r9, #32
   8445e:	680c      	ldr	r4, [r1, #0]
   84460:	fa04 f409 	lsl.w	r4, r4, r9
   84464:	4314      	orrs	r4, r2
   84466:	f843 4b04 	str.w	r4, [r3], #4
   8446a:	f851 2b04 	ldr.w	r2, [r1], #4
   8446e:	458e      	cmp	lr, r1
   84470:	fa22 f20c 	lsr.w	r2, r2, ip
   84474:	d8f3      	bhi.n	8445e <__lshift+0x5a>
   84476:	601a      	str	r2, [r3, #0]
   84478:	b10a      	cbz	r2, 8447e <__lshift+0x7a>
   8447a:	f108 0502 	add.w	r5, r8, #2
   8447e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84480:	6872      	ldr	r2, [r6, #4]
   84482:	3d01      	subs	r5, #1
   84484:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   84488:	6105      	str	r5, [r0, #16]
   8448a:	6031      	str	r1, [r6, #0]
   8448c:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84490:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84494:	3b04      	subs	r3, #4
   84496:	f851 2b04 	ldr.w	r2, [r1], #4
   8449a:	458e      	cmp	lr, r1
   8449c:	f843 2f04 	str.w	r2, [r3, #4]!
   844a0:	d8f9      	bhi.n	84496 <__lshift+0x92>
   844a2:	e7ec      	b.n	8447e <__lshift+0x7a>

000844a4 <__mcmp>:
   844a4:	b430      	push	{r4, r5}
   844a6:	690b      	ldr	r3, [r1, #16]
   844a8:	4605      	mov	r5, r0
   844aa:	6900      	ldr	r0, [r0, #16]
   844ac:	1ac0      	subs	r0, r0, r3
   844ae:	d10f      	bne.n	844d0 <__mcmp+0x2c>
   844b0:	009b      	lsls	r3, r3, #2
   844b2:	3514      	adds	r5, #20
   844b4:	3114      	adds	r1, #20
   844b6:	4419      	add	r1, r3
   844b8:	442b      	add	r3, r5
   844ba:	e001      	b.n	844c0 <__mcmp+0x1c>
   844bc:	429d      	cmp	r5, r3
   844be:	d207      	bcs.n	844d0 <__mcmp+0x2c>
   844c0:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   844c4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   844c8:	4294      	cmp	r4, r2
   844ca:	d0f7      	beq.n	844bc <__mcmp+0x18>
   844cc:	d302      	bcc.n	844d4 <__mcmp+0x30>
   844ce:	2001      	movs	r0, #1
   844d0:	bc30      	pop	{r4, r5}
   844d2:	4770      	bx	lr
   844d4:	f04f 30ff 	mov.w	r0, #4294967295
   844d8:	e7fa      	b.n	844d0 <__mcmp+0x2c>
   844da:	bf00      	nop

000844dc <__mdiff>:
   844dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   844e0:	690c      	ldr	r4, [r1, #16]
   844e2:	4689      	mov	r9, r1
   844e4:	6911      	ldr	r1, [r2, #16]
   844e6:	4692      	mov	sl, r2
   844e8:	1a64      	subs	r4, r4, r1
   844ea:	2c00      	cmp	r4, #0
   844ec:	d117      	bne.n	8451e <__mdiff+0x42>
   844ee:	0089      	lsls	r1, r1, #2
   844f0:	f109 0714 	add.w	r7, r9, #20
   844f4:	f102 0614 	add.w	r6, r2, #20
   844f8:	187b      	adds	r3, r7, r1
   844fa:	4431      	add	r1, r6
   844fc:	e001      	b.n	84502 <__mdiff+0x26>
   844fe:	429f      	cmp	r7, r3
   84500:	d265      	bcs.n	845ce <__mdiff+0xf2>
   84502:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   84506:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   8450a:	4295      	cmp	r5, r2
   8450c:	d0f7      	beq.n	844fe <__mdiff+0x22>
   8450e:	d267      	bcs.n	845e0 <__mdiff+0x104>
   84510:	464b      	mov	r3, r9
   84512:	46bb      	mov	fp, r7
   84514:	46d1      	mov	r9, sl
   84516:	4637      	mov	r7, r6
   84518:	469a      	mov	sl, r3
   8451a:	2401      	movs	r4, #1
   8451c:	e005      	b.n	8452a <__mdiff+0x4e>
   8451e:	db61      	blt.n	845e4 <__mdiff+0x108>
   84520:	2400      	movs	r4, #0
   84522:	f109 0714 	add.w	r7, r9, #20
   84526:	f10a 0b14 	add.w	fp, sl, #20
   8452a:	f8d9 1004 	ldr.w	r1, [r9, #4]
   8452e:	f7ff fdbb 	bl	840a8 <_Balloc>
   84532:	465d      	mov	r5, fp
   84534:	f04f 0800 	mov.w	r8, #0
   84538:	f8d9 e010 	ldr.w	lr, [r9, #16]
   8453c:	f8da 3010 	ldr.w	r3, [sl, #16]
   84540:	463e      	mov	r6, r7
   84542:	60c4      	str	r4, [r0, #12]
   84544:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   84548:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   8454c:	f100 0414 	add.w	r4, r0, #20
   84550:	f856 9b04 	ldr.w	r9, [r6], #4
   84554:	f855 2b04 	ldr.w	r2, [r5], #4
   84558:	fa1f f389 	uxth.w	r3, r9
   8455c:	4443      	add	r3, r8
   8455e:	fa1f f882 	uxth.w	r8, r2
   84562:	0c12      	lsrs	r2, r2, #16
   84564:	eba3 0308 	sub.w	r3, r3, r8
   84568:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   8456c:	eb02 4223 	add.w	r2, r2, r3, asr #16
   84570:	b29b      	uxth	r3, r3
   84572:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   84576:	45ac      	cmp	ip, r5
   84578:	f844 3b04 	str.w	r3, [r4], #4
   8457c:	ea4f 4822 	mov.w	r8, r2, asr #16
   84580:	d8e6      	bhi.n	84550 <__mdiff+0x74>
   84582:	42b7      	cmp	r7, r6
   84584:	d917      	bls.n	845b6 <__mdiff+0xda>
   84586:	46a4      	mov	ip, r4
   84588:	4635      	mov	r5, r6
   8458a:	f855 3b04 	ldr.w	r3, [r5], #4
   8458e:	b299      	uxth	r1, r3
   84590:	4441      	add	r1, r8
   84592:	140a      	asrs	r2, r1, #16
   84594:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   84598:	b289      	uxth	r1, r1
   8459a:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   8459e:	42af      	cmp	r7, r5
   845a0:	f84c 3b04 	str.w	r3, [ip], #4
   845a4:	ea4f 4822 	mov.w	r8, r2, asr #16
   845a8:	d8ef      	bhi.n	8458a <__mdiff+0xae>
   845aa:	43f6      	mvns	r6, r6
   845ac:	4437      	add	r7, r6
   845ae:	f027 0703 	bic.w	r7, r7, #3
   845b2:	3704      	adds	r7, #4
   845b4:	443c      	add	r4, r7
   845b6:	3c04      	subs	r4, #4
   845b8:	b92b      	cbnz	r3, 845c6 <__mdiff+0xea>
   845ba:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   845be:	f10e 3eff 	add.w	lr, lr, #4294967295
   845c2:	2b00      	cmp	r3, #0
   845c4:	d0f9      	beq.n	845ba <__mdiff+0xde>
   845c6:	f8c0 e010 	str.w	lr, [r0, #16]
   845ca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845ce:	2100      	movs	r1, #0
   845d0:	f7ff fd6a 	bl	840a8 <_Balloc>
   845d4:	2201      	movs	r2, #1
   845d6:	2300      	movs	r3, #0
   845d8:	6102      	str	r2, [r0, #16]
   845da:	6143      	str	r3, [r0, #20]
   845dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845e0:	46b3      	mov	fp, r6
   845e2:	e7a2      	b.n	8452a <__mdiff+0x4e>
   845e4:	464b      	mov	r3, r9
   845e6:	f109 0b14 	add.w	fp, r9, #20
   845ea:	f102 0714 	add.w	r7, r2, #20
   845ee:	4691      	mov	r9, r2
   845f0:	2401      	movs	r4, #1
   845f2:	469a      	mov	sl, r3
   845f4:	e799      	b.n	8452a <__mdiff+0x4e>
   845f6:	bf00      	nop

000845f8 <__d2b>:
   845f8:	b5f0      	push	{r4, r5, r6, r7, lr}
   845fa:	2101      	movs	r1, #1
   845fc:	b083      	sub	sp, #12
   845fe:	461c      	mov	r4, r3
   84600:	f3c3 550a 	ubfx	r5, r3, #20, #11
   84604:	4616      	mov	r6, r2
   84606:	f7ff fd4f 	bl	840a8 <_Balloc>
   8460a:	f3c4 0413 	ubfx	r4, r4, #0, #20
   8460e:	4607      	mov	r7, r0
   84610:	b10d      	cbz	r5, 84616 <__d2b+0x1e>
   84612:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   84616:	9401      	str	r4, [sp, #4]
   84618:	b306      	cbz	r6, 8465c <__d2b+0x64>
   8461a:	a802      	add	r0, sp, #8
   8461c:	f840 6d08 	str.w	r6, [r0, #-8]!
   84620:	f7ff fdd4 	bl	841cc <__lo0bits>
   84624:	2800      	cmp	r0, #0
   84626:	d130      	bne.n	8468a <__d2b+0x92>
   84628:	e89d 000c 	ldmia.w	sp, {r2, r3}
   8462c:	617a      	str	r2, [r7, #20]
   8462e:	2b00      	cmp	r3, #0
   84630:	bf0c      	ite	eq
   84632:	2101      	moveq	r1, #1
   84634:	2102      	movne	r1, #2
   84636:	61bb      	str	r3, [r7, #24]
   84638:	6139      	str	r1, [r7, #16]
   8463a:	b9d5      	cbnz	r5, 84672 <__d2b+0x7a>
   8463c:	9a08      	ldr	r2, [sp, #32]
   8463e:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   84642:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84646:	6010      	str	r0, [r2, #0]
   84648:	6918      	ldr	r0, [r3, #16]
   8464a:	f7ff fd9f 	bl	8418c <__hi0bits>
   8464e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84650:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   84654:	6018      	str	r0, [r3, #0]
   84656:	4638      	mov	r0, r7
   84658:	b003      	add	sp, #12
   8465a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8465c:	a801      	add	r0, sp, #4
   8465e:	f7ff fdb5 	bl	841cc <__lo0bits>
   84662:	2201      	movs	r2, #1
   84664:	9b01      	ldr	r3, [sp, #4]
   84666:	4611      	mov	r1, r2
   84668:	3020      	adds	r0, #32
   8466a:	613a      	str	r2, [r7, #16]
   8466c:	617b      	str	r3, [r7, #20]
   8466e:	2d00      	cmp	r5, #0
   84670:	d0e4      	beq.n	8463c <__d2b+0x44>
   84672:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   84676:	9a08      	ldr	r2, [sp, #32]
   84678:	4403      	add	r3, r0
   8467a:	6013      	str	r3, [r2, #0]
   8467c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8467e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   84682:	6018      	str	r0, [r3, #0]
   84684:	4638      	mov	r0, r7
   84686:	b003      	add	sp, #12
   84688:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8468a:	9b01      	ldr	r3, [sp, #4]
   8468c:	f1c0 0220 	rsb	r2, r0, #32
   84690:	9900      	ldr	r1, [sp, #0]
   84692:	fa03 f202 	lsl.w	r2, r3, r2
   84696:	430a      	orrs	r2, r1
   84698:	40c3      	lsrs	r3, r0
   8469a:	9301      	str	r3, [sp, #4]
   8469c:	617a      	str	r2, [r7, #20]
   8469e:	e7c6      	b.n	8462e <__d2b+0x36>

000846a0 <_realloc_r>:
   846a0:	2900      	cmp	r1, #0
   846a2:	f000 8094 	beq.w	847ce <_realloc_r+0x12e>
   846a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   846aa:	460c      	mov	r4, r1
   846ac:	4615      	mov	r5, r2
   846ae:	b083      	sub	sp, #12
   846b0:	4680      	mov	r8, r0
   846b2:	f105 060b 	add.w	r6, r5, #11
   846b6:	f7ff fcf3 	bl	840a0 <__malloc_lock>
   846ba:	f854 ec04 	ldr.w	lr, [r4, #-4]
   846be:	2e16      	cmp	r6, #22
   846c0:	f02e 0703 	bic.w	r7, lr, #3
   846c4:	f1a4 0908 	sub.w	r9, r4, #8
   846c8:	d83c      	bhi.n	84744 <_realloc_r+0xa4>
   846ca:	2210      	movs	r2, #16
   846cc:	4616      	mov	r6, r2
   846ce:	42b5      	cmp	r5, r6
   846d0:	d83d      	bhi.n	8474e <_realloc_r+0xae>
   846d2:	4297      	cmp	r7, r2
   846d4:	da43      	bge.n	8475e <_realloc_r+0xbe>
   846d6:	4bc6      	ldr	r3, [pc, #792]	; (849f0 <_realloc_r+0x350>)
   846d8:	eb09 0007 	add.w	r0, r9, r7
   846dc:	6899      	ldr	r1, [r3, #8]
   846de:	4288      	cmp	r0, r1
   846e0:	f000 80c3 	beq.w	8486a <_realloc_r+0x1ca>
   846e4:	6843      	ldr	r3, [r0, #4]
   846e6:	f023 0101 	bic.w	r1, r3, #1
   846ea:	4401      	add	r1, r0
   846ec:	6849      	ldr	r1, [r1, #4]
   846ee:	07c9      	lsls	r1, r1, #31
   846f0:	d54d      	bpl.n	8478e <_realloc_r+0xee>
   846f2:	f01e 0f01 	tst.w	lr, #1
   846f6:	f000 809b 	beq.w	84830 <_realloc_r+0x190>
   846fa:	4629      	mov	r1, r5
   846fc:	4640      	mov	r0, r8
   846fe:	f7ff f8f7 	bl	838f0 <_malloc_r>
   84702:	4605      	mov	r5, r0
   84704:	2800      	cmp	r0, #0
   84706:	d03b      	beq.n	84780 <_realloc_r+0xe0>
   84708:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8470c:	f1a0 0208 	sub.w	r2, r0, #8
   84710:	f023 0301 	bic.w	r3, r3, #1
   84714:	444b      	add	r3, r9
   84716:	429a      	cmp	r2, r3
   84718:	f000 812b 	beq.w	84972 <_realloc_r+0x2d2>
   8471c:	1f3a      	subs	r2, r7, #4
   8471e:	2a24      	cmp	r2, #36	; 0x24
   84720:	f200 8118 	bhi.w	84954 <_realloc_r+0x2b4>
   84724:	2a13      	cmp	r2, #19
   84726:	f200 80eb 	bhi.w	84900 <_realloc_r+0x260>
   8472a:	4603      	mov	r3, r0
   8472c:	4622      	mov	r2, r4
   8472e:	6811      	ldr	r1, [r2, #0]
   84730:	6019      	str	r1, [r3, #0]
   84732:	6851      	ldr	r1, [r2, #4]
   84734:	6059      	str	r1, [r3, #4]
   84736:	6892      	ldr	r2, [r2, #8]
   84738:	609a      	str	r2, [r3, #8]
   8473a:	4621      	mov	r1, r4
   8473c:	4640      	mov	r0, r8
   8473e:	f7fe ffe3 	bl	83708 <_free_r>
   84742:	e01d      	b.n	84780 <_realloc_r+0xe0>
   84744:	f026 0607 	bic.w	r6, r6, #7
   84748:	2e00      	cmp	r6, #0
   8474a:	4632      	mov	r2, r6
   8474c:	dabf      	bge.n	846ce <_realloc_r+0x2e>
   8474e:	2500      	movs	r5, #0
   84750:	230c      	movs	r3, #12
   84752:	4628      	mov	r0, r5
   84754:	f8c8 3000 	str.w	r3, [r8]
   84758:	b003      	add	sp, #12
   8475a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8475e:	4625      	mov	r5, r4
   84760:	1bbb      	subs	r3, r7, r6
   84762:	2b0f      	cmp	r3, #15
   84764:	f8d9 2004 	ldr.w	r2, [r9, #4]
   84768:	d81d      	bhi.n	847a6 <_realloc_r+0x106>
   8476a:	f002 0201 	and.w	r2, r2, #1
   8476e:	433a      	orrs	r2, r7
   84770:	eb09 0107 	add.w	r1, r9, r7
   84774:	f8c9 2004 	str.w	r2, [r9, #4]
   84778:	684b      	ldr	r3, [r1, #4]
   8477a:	f043 0301 	orr.w	r3, r3, #1
   8477e:	604b      	str	r3, [r1, #4]
   84780:	4640      	mov	r0, r8
   84782:	f7ff fc8f 	bl	840a4 <__malloc_unlock>
   84786:	4628      	mov	r0, r5
   84788:	b003      	add	sp, #12
   8478a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8478e:	f023 0303 	bic.w	r3, r3, #3
   84792:	18f9      	adds	r1, r7, r3
   84794:	4291      	cmp	r1, r2
   84796:	db1d      	blt.n	847d4 <_realloc_r+0x134>
   84798:	68c3      	ldr	r3, [r0, #12]
   8479a:	6882      	ldr	r2, [r0, #8]
   8479c:	4625      	mov	r5, r4
   8479e:	60d3      	str	r3, [r2, #12]
   847a0:	460f      	mov	r7, r1
   847a2:	609a      	str	r2, [r3, #8]
   847a4:	e7dc      	b.n	84760 <_realloc_r+0xc0>
   847a6:	f002 0201 	and.w	r2, r2, #1
   847aa:	eb09 0106 	add.w	r1, r9, r6
   847ae:	f043 0301 	orr.w	r3, r3, #1
   847b2:	4332      	orrs	r2, r6
   847b4:	f8c9 2004 	str.w	r2, [r9, #4]
   847b8:	444f      	add	r7, r9
   847ba:	604b      	str	r3, [r1, #4]
   847bc:	687b      	ldr	r3, [r7, #4]
   847be:	3108      	adds	r1, #8
   847c0:	f043 0301 	orr.w	r3, r3, #1
   847c4:	607b      	str	r3, [r7, #4]
   847c6:	4640      	mov	r0, r8
   847c8:	f7fe ff9e 	bl	83708 <_free_r>
   847cc:	e7d8      	b.n	84780 <_realloc_r+0xe0>
   847ce:	4611      	mov	r1, r2
   847d0:	f7ff b88e 	b.w	838f0 <_malloc_r>
   847d4:	f01e 0f01 	tst.w	lr, #1
   847d8:	d18f      	bne.n	846fa <_realloc_r+0x5a>
   847da:	f854 1c08 	ldr.w	r1, [r4, #-8]
   847de:	eba9 0a01 	sub.w	sl, r9, r1
   847e2:	f8da 1004 	ldr.w	r1, [sl, #4]
   847e6:	f021 0103 	bic.w	r1, r1, #3
   847ea:	440b      	add	r3, r1
   847ec:	443b      	add	r3, r7
   847ee:	4293      	cmp	r3, r2
   847f0:	db26      	blt.n	84840 <_realloc_r+0x1a0>
   847f2:	4655      	mov	r5, sl
   847f4:	68c1      	ldr	r1, [r0, #12]
   847f6:	6880      	ldr	r0, [r0, #8]
   847f8:	1f3a      	subs	r2, r7, #4
   847fa:	60c1      	str	r1, [r0, #12]
   847fc:	6088      	str	r0, [r1, #8]
   847fe:	f855 0f08 	ldr.w	r0, [r5, #8]!
   84802:	f8da 100c 	ldr.w	r1, [sl, #12]
   84806:	2a24      	cmp	r2, #36	; 0x24
   84808:	60c1      	str	r1, [r0, #12]
   8480a:	6088      	str	r0, [r1, #8]
   8480c:	d826      	bhi.n	8485c <_realloc_r+0x1bc>
   8480e:	2a13      	cmp	r2, #19
   84810:	f240 8081 	bls.w	84916 <_realloc_r+0x276>
   84814:	6821      	ldr	r1, [r4, #0]
   84816:	2a1b      	cmp	r2, #27
   84818:	f8ca 1008 	str.w	r1, [sl, #8]
   8481c:	6861      	ldr	r1, [r4, #4]
   8481e:	f8ca 100c 	str.w	r1, [sl, #12]
   84822:	f200 80ad 	bhi.w	84980 <_realloc_r+0x2e0>
   84826:	f104 0008 	add.w	r0, r4, #8
   8482a:	f10a 0210 	add.w	r2, sl, #16
   8482e:	e074      	b.n	8491a <_realloc_r+0x27a>
   84830:	f854 3c08 	ldr.w	r3, [r4, #-8]
   84834:	eba9 0a03 	sub.w	sl, r9, r3
   84838:	f8da 1004 	ldr.w	r1, [sl, #4]
   8483c:	f021 0103 	bic.w	r1, r1, #3
   84840:	187b      	adds	r3, r7, r1
   84842:	4293      	cmp	r3, r2
   84844:	f6ff af59 	blt.w	846fa <_realloc_r+0x5a>
   84848:	4655      	mov	r5, sl
   8484a:	f8da 100c 	ldr.w	r1, [sl, #12]
   8484e:	f855 0f08 	ldr.w	r0, [r5, #8]!
   84852:	1f3a      	subs	r2, r7, #4
   84854:	2a24      	cmp	r2, #36	; 0x24
   84856:	60c1      	str	r1, [r0, #12]
   84858:	6088      	str	r0, [r1, #8]
   8485a:	d9d8      	bls.n	8480e <_realloc_r+0x16e>
   8485c:	4621      	mov	r1, r4
   8485e:	4628      	mov	r0, r5
   84860:	461f      	mov	r7, r3
   84862:	46d1      	mov	r9, sl
   84864:	f7ff fbb8 	bl	83fd8 <memmove>
   84868:	e77a      	b.n	84760 <_realloc_r+0xc0>
   8486a:	6841      	ldr	r1, [r0, #4]
   8486c:	f106 0010 	add.w	r0, r6, #16
   84870:	f021 0b03 	bic.w	fp, r1, #3
   84874:	44bb      	add	fp, r7
   84876:	4583      	cmp	fp, r0
   84878:	da58      	bge.n	8492c <_realloc_r+0x28c>
   8487a:	f01e 0f01 	tst.w	lr, #1
   8487e:	f47f af3c 	bne.w	846fa <_realloc_r+0x5a>
   84882:	f854 1c08 	ldr.w	r1, [r4, #-8]
   84886:	eba9 0a01 	sub.w	sl, r9, r1
   8488a:	f8da 1004 	ldr.w	r1, [sl, #4]
   8488e:	f021 0103 	bic.w	r1, r1, #3
   84892:	448b      	add	fp, r1
   84894:	4558      	cmp	r0, fp
   84896:	dcd3      	bgt.n	84840 <_realloc_r+0x1a0>
   84898:	4655      	mov	r5, sl
   8489a:	f8da 100c 	ldr.w	r1, [sl, #12]
   8489e:	f855 0f08 	ldr.w	r0, [r5, #8]!
   848a2:	1f3a      	subs	r2, r7, #4
   848a4:	2a24      	cmp	r2, #36	; 0x24
   848a6:	60c1      	str	r1, [r0, #12]
   848a8:	6088      	str	r0, [r1, #8]
   848aa:	f200 808d 	bhi.w	849c8 <_realloc_r+0x328>
   848ae:	2a13      	cmp	r2, #19
   848b0:	f240 8087 	bls.w	849c2 <_realloc_r+0x322>
   848b4:	6821      	ldr	r1, [r4, #0]
   848b6:	2a1b      	cmp	r2, #27
   848b8:	f8ca 1008 	str.w	r1, [sl, #8]
   848bc:	6861      	ldr	r1, [r4, #4]
   848be:	f8ca 100c 	str.w	r1, [sl, #12]
   848c2:	f200 8088 	bhi.w	849d6 <_realloc_r+0x336>
   848c6:	f104 0108 	add.w	r1, r4, #8
   848ca:	f10a 0210 	add.w	r2, sl, #16
   848ce:	6808      	ldr	r0, [r1, #0]
   848d0:	6010      	str	r0, [r2, #0]
   848d2:	6848      	ldr	r0, [r1, #4]
   848d4:	6050      	str	r0, [r2, #4]
   848d6:	6889      	ldr	r1, [r1, #8]
   848d8:	6091      	str	r1, [r2, #8]
   848da:	ebab 0206 	sub.w	r2, fp, r6
   848de:	eb0a 0106 	add.w	r1, sl, r6
   848e2:	f042 0201 	orr.w	r2, r2, #1
   848e6:	6099      	str	r1, [r3, #8]
   848e8:	604a      	str	r2, [r1, #4]
   848ea:	f8da 3004 	ldr.w	r3, [sl, #4]
   848ee:	4640      	mov	r0, r8
   848f0:	f003 0301 	and.w	r3, r3, #1
   848f4:	431e      	orrs	r6, r3
   848f6:	f8ca 6004 	str.w	r6, [sl, #4]
   848fa:	f7ff fbd3 	bl	840a4 <__malloc_unlock>
   848fe:	e742      	b.n	84786 <_realloc_r+0xe6>
   84900:	6823      	ldr	r3, [r4, #0]
   84902:	2a1b      	cmp	r2, #27
   84904:	6003      	str	r3, [r0, #0]
   84906:	6863      	ldr	r3, [r4, #4]
   84908:	6043      	str	r3, [r0, #4]
   8490a:	d827      	bhi.n	8495c <_realloc_r+0x2bc>
   8490c:	f100 0308 	add.w	r3, r0, #8
   84910:	f104 0208 	add.w	r2, r4, #8
   84914:	e70b      	b.n	8472e <_realloc_r+0x8e>
   84916:	4620      	mov	r0, r4
   84918:	462a      	mov	r2, r5
   8491a:	6801      	ldr	r1, [r0, #0]
   8491c:	461f      	mov	r7, r3
   8491e:	6011      	str	r1, [r2, #0]
   84920:	6841      	ldr	r1, [r0, #4]
   84922:	46d1      	mov	r9, sl
   84924:	6051      	str	r1, [r2, #4]
   84926:	6883      	ldr	r3, [r0, #8]
   84928:	6093      	str	r3, [r2, #8]
   8492a:	e719      	b.n	84760 <_realloc_r+0xc0>
   8492c:	ebab 0b06 	sub.w	fp, fp, r6
   84930:	eb09 0106 	add.w	r1, r9, r6
   84934:	f04b 0201 	orr.w	r2, fp, #1
   84938:	6099      	str	r1, [r3, #8]
   8493a:	604a      	str	r2, [r1, #4]
   8493c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   84940:	4640      	mov	r0, r8
   84942:	f003 0301 	and.w	r3, r3, #1
   84946:	431e      	orrs	r6, r3
   84948:	f844 6c04 	str.w	r6, [r4, #-4]
   8494c:	f7ff fbaa 	bl	840a4 <__malloc_unlock>
   84950:	4625      	mov	r5, r4
   84952:	e718      	b.n	84786 <_realloc_r+0xe6>
   84954:	4621      	mov	r1, r4
   84956:	f7ff fb3f 	bl	83fd8 <memmove>
   8495a:	e6ee      	b.n	8473a <_realloc_r+0x9a>
   8495c:	68a3      	ldr	r3, [r4, #8]
   8495e:	2a24      	cmp	r2, #36	; 0x24
   84960:	6083      	str	r3, [r0, #8]
   84962:	68e3      	ldr	r3, [r4, #12]
   84964:	60c3      	str	r3, [r0, #12]
   84966:	d018      	beq.n	8499a <_realloc_r+0x2fa>
   84968:	f100 0310 	add.w	r3, r0, #16
   8496c:	f104 0210 	add.w	r2, r4, #16
   84970:	e6dd      	b.n	8472e <_realloc_r+0x8e>
   84972:	f850 3c04 	ldr.w	r3, [r0, #-4]
   84976:	4625      	mov	r5, r4
   84978:	f023 0303 	bic.w	r3, r3, #3
   8497c:	441f      	add	r7, r3
   8497e:	e6ef      	b.n	84760 <_realloc_r+0xc0>
   84980:	68a1      	ldr	r1, [r4, #8]
   84982:	2a24      	cmp	r2, #36	; 0x24
   84984:	f8ca 1010 	str.w	r1, [sl, #16]
   84988:	68e1      	ldr	r1, [r4, #12]
   8498a:	f8ca 1014 	str.w	r1, [sl, #20]
   8498e:	d00d      	beq.n	849ac <_realloc_r+0x30c>
   84990:	f104 0010 	add.w	r0, r4, #16
   84994:	f10a 0218 	add.w	r2, sl, #24
   84998:	e7bf      	b.n	8491a <_realloc_r+0x27a>
   8499a:	6922      	ldr	r2, [r4, #16]
   8499c:	f100 0318 	add.w	r3, r0, #24
   849a0:	6102      	str	r2, [r0, #16]
   849a2:	6961      	ldr	r1, [r4, #20]
   849a4:	f104 0218 	add.w	r2, r4, #24
   849a8:	6141      	str	r1, [r0, #20]
   849aa:	e6c0      	b.n	8472e <_realloc_r+0x8e>
   849ac:	6922      	ldr	r2, [r4, #16]
   849ae:	f104 0018 	add.w	r0, r4, #24
   849b2:	f8ca 2018 	str.w	r2, [sl, #24]
   849b6:	6961      	ldr	r1, [r4, #20]
   849b8:	f10a 0220 	add.w	r2, sl, #32
   849bc:	f8ca 101c 	str.w	r1, [sl, #28]
   849c0:	e7ab      	b.n	8491a <_realloc_r+0x27a>
   849c2:	4621      	mov	r1, r4
   849c4:	462a      	mov	r2, r5
   849c6:	e782      	b.n	848ce <_realloc_r+0x22e>
   849c8:	4621      	mov	r1, r4
   849ca:	4628      	mov	r0, r5
   849cc:	9301      	str	r3, [sp, #4]
   849ce:	f7ff fb03 	bl	83fd8 <memmove>
   849d2:	9b01      	ldr	r3, [sp, #4]
   849d4:	e781      	b.n	848da <_realloc_r+0x23a>
   849d6:	68a1      	ldr	r1, [r4, #8]
   849d8:	2a24      	cmp	r2, #36	; 0x24
   849da:	f8ca 1010 	str.w	r1, [sl, #16]
   849de:	68e1      	ldr	r1, [r4, #12]
   849e0:	f8ca 1014 	str.w	r1, [sl, #20]
   849e4:	d006      	beq.n	849f4 <_realloc_r+0x354>
   849e6:	f104 0110 	add.w	r1, r4, #16
   849ea:	f10a 0218 	add.w	r2, sl, #24
   849ee:	e76e      	b.n	848ce <_realloc_r+0x22e>
   849f0:	2007070c 	.word	0x2007070c
   849f4:	6922      	ldr	r2, [r4, #16]
   849f6:	f104 0118 	add.w	r1, r4, #24
   849fa:	f8ca 2018 	str.w	r2, [sl, #24]
   849fe:	6960      	ldr	r0, [r4, #20]
   84a00:	f10a 0220 	add.w	r2, sl, #32
   84a04:	f8ca 001c 	str.w	r0, [sl, #28]
   84a08:	e761      	b.n	848ce <_realloc_r+0x22e>
   84a0a:	bf00      	nop

00084a0c <_sbrk_r>:
   84a0c:	b538      	push	{r3, r4, r5, lr}
   84a0e:	2300      	movs	r3, #0
   84a10:	4c06      	ldr	r4, [pc, #24]	; (84a2c <_sbrk_r+0x20>)
   84a12:	4605      	mov	r5, r0
   84a14:	4608      	mov	r0, r1
   84a16:	6023      	str	r3, [r4, #0]
   84a18:	f7fc fac0 	bl	80f9c <_sbrk>
   84a1c:	1c43      	adds	r3, r0, #1
   84a1e:	d000      	beq.n	84a22 <_sbrk_r+0x16>
   84a20:	bd38      	pop	{r3, r4, r5, pc}
   84a22:	6823      	ldr	r3, [r4, #0]
   84a24:	2b00      	cmp	r3, #0
   84a26:	d0fb      	beq.n	84a20 <_sbrk_r+0x14>
   84a28:	602b      	str	r3, [r5, #0]
   84a2a:	bd38      	pop	{r3, r4, r5, pc}
   84a2c:	20070c08 	.word	0x20070c08

00084a30 <__ssprint_r>:
   84a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84a34:	6893      	ldr	r3, [r2, #8]
   84a36:	b083      	sub	sp, #12
   84a38:	4690      	mov	r8, r2
   84a3a:	2b00      	cmp	r3, #0
   84a3c:	d070      	beq.n	84b20 <__ssprint_r+0xf0>
   84a3e:	4682      	mov	sl, r0
   84a40:	460c      	mov	r4, r1
   84a42:	6817      	ldr	r7, [r2, #0]
   84a44:	688d      	ldr	r5, [r1, #8]
   84a46:	6808      	ldr	r0, [r1, #0]
   84a48:	e042      	b.n	84ad0 <__ssprint_r+0xa0>
   84a4a:	89a3      	ldrh	r3, [r4, #12]
   84a4c:	f413 6f90 	tst.w	r3, #1152	; 0x480
   84a50:	d02e      	beq.n	84ab0 <__ssprint_r+0x80>
   84a52:	6965      	ldr	r5, [r4, #20]
   84a54:	6921      	ldr	r1, [r4, #16]
   84a56:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   84a5a:	eba0 0b01 	sub.w	fp, r0, r1
   84a5e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   84a62:	f10b 0001 	add.w	r0, fp, #1
   84a66:	106d      	asrs	r5, r5, #1
   84a68:	4430      	add	r0, r6
   84a6a:	42a8      	cmp	r0, r5
   84a6c:	462a      	mov	r2, r5
   84a6e:	bf84      	itt	hi
   84a70:	4605      	movhi	r5, r0
   84a72:	462a      	movhi	r2, r5
   84a74:	055b      	lsls	r3, r3, #21
   84a76:	d538      	bpl.n	84aea <__ssprint_r+0xba>
   84a78:	4611      	mov	r1, r2
   84a7a:	4650      	mov	r0, sl
   84a7c:	f7fe ff38 	bl	838f0 <_malloc_r>
   84a80:	2800      	cmp	r0, #0
   84a82:	d03c      	beq.n	84afe <__ssprint_r+0xce>
   84a84:	465a      	mov	r2, fp
   84a86:	6921      	ldr	r1, [r4, #16]
   84a88:	9001      	str	r0, [sp, #4]
   84a8a:	f7ff fa2f 	bl	83eec <memcpy>
   84a8e:	89a2      	ldrh	r2, [r4, #12]
   84a90:	9b01      	ldr	r3, [sp, #4]
   84a92:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   84a96:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   84a9a:	81a2      	strh	r2, [r4, #12]
   84a9c:	eba5 020b 	sub.w	r2, r5, fp
   84aa0:	eb03 000b 	add.w	r0, r3, fp
   84aa4:	6165      	str	r5, [r4, #20]
   84aa6:	46b3      	mov	fp, r6
   84aa8:	4635      	mov	r5, r6
   84aaa:	6123      	str	r3, [r4, #16]
   84aac:	6020      	str	r0, [r4, #0]
   84aae:	60a2      	str	r2, [r4, #8]
   84ab0:	465a      	mov	r2, fp
   84ab2:	4649      	mov	r1, r9
   84ab4:	f7ff fa90 	bl	83fd8 <memmove>
   84ab8:	f8d8 3008 	ldr.w	r3, [r8, #8]
   84abc:	68a2      	ldr	r2, [r4, #8]
   84abe:	6820      	ldr	r0, [r4, #0]
   84ac0:	1b55      	subs	r5, r2, r5
   84ac2:	4458      	add	r0, fp
   84ac4:	1b9e      	subs	r6, r3, r6
   84ac6:	60a5      	str	r5, [r4, #8]
   84ac8:	6020      	str	r0, [r4, #0]
   84aca:	f8c8 6008 	str.w	r6, [r8, #8]
   84ace:	b33e      	cbz	r6, 84b20 <__ssprint_r+0xf0>
   84ad0:	687e      	ldr	r6, [r7, #4]
   84ad2:	463b      	mov	r3, r7
   84ad4:	3708      	adds	r7, #8
   84ad6:	2e00      	cmp	r6, #0
   84ad8:	d0fa      	beq.n	84ad0 <__ssprint_r+0xa0>
   84ada:	42ae      	cmp	r6, r5
   84adc:	f8d3 9000 	ldr.w	r9, [r3]
   84ae0:	46ab      	mov	fp, r5
   84ae2:	d2b2      	bcs.n	84a4a <__ssprint_r+0x1a>
   84ae4:	4635      	mov	r5, r6
   84ae6:	46b3      	mov	fp, r6
   84ae8:	e7e2      	b.n	84ab0 <__ssprint_r+0x80>
   84aea:	4650      	mov	r0, sl
   84aec:	f7ff fdd8 	bl	846a0 <_realloc_r>
   84af0:	4603      	mov	r3, r0
   84af2:	2800      	cmp	r0, #0
   84af4:	d1d2      	bne.n	84a9c <__ssprint_r+0x6c>
   84af6:	6921      	ldr	r1, [r4, #16]
   84af8:	4650      	mov	r0, sl
   84afa:	f7fe fe05 	bl	83708 <_free_r>
   84afe:	230c      	movs	r3, #12
   84b00:	2200      	movs	r2, #0
   84b02:	f04f 30ff 	mov.w	r0, #4294967295
   84b06:	f8ca 3000 	str.w	r3, [sl]
   84b0a:	89a3      	ldrh	r3, [r4, #12]
   84b0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   84b10:	81a3      	strh	r3, [r4, #12]
   84b12:	f8c8 2008 	str.w	r2, [r8, #8]
   84b16:	f8c8 2004 	str.w	r2, [r8, #4]
   84b1a:	b003      	add	sp, #12
   84b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84b20:	2000      	movs	r0, #0
   84b22:	f8c8 0004 	str.w	r0, [r8, #4]
   84b26:	b003      	add	sp, #12
   84b28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084b2c <__ascii_wctomb>:
   84b2c:	b119      	cbz	r1, 84b36 <__ascii_wctomb+0xa>
   84b2e:	2aff      	cmp	r2, #255	; 0xff
   84b30:	d803      	bhi.n	84b3a <__ascii_wctomb+0xe>
   84b32:	700a      	strb	r2, [r1, #0]
   84b34:	2101      	movs	r1, #1
   84b36:	4608      	mov	r0, r1
   84b38:	4770      	bx	lr
   84b3a:	238a      	movs	r3, #138	; 0x8a
   84b3c:	f04f 31ff 	mov.w	r1, #4294967295
   84b40:	6003      	str	r3, [r0, #0]
   84b42:	e7f8      	b.n	84b36 <__ascii_wctomb+0xa>

00084b44 <__register_exitproc>:
   84b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   84b48:	4c27      	ldr	r4, [pc, #156]	; (84be8 <__register_exitproc+0xa4>)
   84b4a:	4607      	mov	r7, r0
   84b4c:	6826      	ldr	r6, [r4, #0]
   84b4e:	4688      	mov	r8, r1
   84b50:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   84b54:	4692      	mov	sl, r2
   84b56:	4699      	mov	r9, r3
   84b58:	2c00      	cmp	r4, #0
   84b5a:	d03c      	beq.n	84bd6 <__register_exitproc+0x92>
   84b5c:	6865      	ldr	r5, [r4, #4]
   84b5e:	2d1f      	cmp	r5, #31
   84b60:	dc1a      	bgt.n	84b98 <__register_exitproc+0x54>
   84b62:	f105 0e01 	add.w	lr, r5, #1
   84b66:	b17f      	cbz	r7, 84b88 <__register_exitproc+0x44>
   84b68:	2001      	movs	r0, #1
   84b6a:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   84b6e:	f8c3 a088 	str.w	sl, [r3, #136]	; 0x88
   84b72:	f8d4 1188 	ldr.w	r1, [r4, #392]	; 0x188
   84b76:	fa00 f205 	lsl.w	r2, r0, r5
   84b7a:	4311      	orrs	r1, r2
   84b7c:	2f02      	cmp	r7, #2
   84b7e:	f8c4 1188 	str.w	r1, [r4, #392]	; 0x188
   84b82:	f8c3 9108 	str.w	r9, [r3, #264]	; 0x108
   84b86:	d020      	beq.n	84bca <__register_exitproc+0x86>
   84b88:	3502      	adds	r5, #2
   84b8a:	f8c4 e004 	str.w	lr, [r4, #4]
   84b8e:	2000      	movs	r0, #0
   84b90:	f844 8025 	str.w	r8, [r4, r5, lsl #2]
   84b94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84b98:	4b14      	ldr	r3, [pc, #80]	; (84bec <__register_exitproc+0xa8>)
   84b9a:	b30b      	cbz	r3, 84be0 <__register_exitproc+0x9c>
   84b9c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84ba0:	f3af 8000 	nop.w
   84ba4:	4604      	mov	r4, r0
   84ba6:	b1d8      	cbz	r0, 84be0 <__register_exitproc+0x9c>
   84ba8:	2000      	movs	r0, #0
   84baa:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
   84bae:	f04f 0e01 	mov.w	lr, #1
   84bb2:	6060      	str	r0, [r4, #4]
   84bb4:	6023      	str	r3, [r4, #0]
   84bb6:	4605      	mov	r5, r0
   84bb8:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84bbc:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84bc0:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84bc4:	2f00      	cmp	r7, #0
   84bc6:	d0df      	beq.n	84b88 <__register_exitproc+0x44>
   84bc8:	e7ce      	b.n	84b68 <__register_exitproc+0x24>
   84bca:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84bce:	431a      	orrs	r2, r3
   84bd0:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   84bd4:	e7d8      	b.n	84b88 <__register_exitproc+0x44>
   84bd6:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84bda:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84bde:	e7bd      	b.n	84b5c <__register_exitproc+0x18>
   84be0:	f04f 30ff 	mov.w	r0, #4294967295
   84be4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84be8:	000858b0 	.word	0x000858b0
   84bec:	00000000 	.word	0x00000000

00084bf0 <_calloc_r>:
   84bf0:	b510      	push	{r4, lr}
   84bf2:	fb02 f101 	mul.w	r1, r2, r1
   84bf6:	f7fe fe7b 	bl	838f0 <_malloc_r>
   84bfa:	4604      	mov	r4, r0
   84bfc:	b1d8      	cbz	r0, 84c36 <_calloc_r+0x46>
   84bfe:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84c02:	f022 0203 	bic.w	r2, r2, #3
   84c06:	3a04      	subs	r2, #4
   84c08:	2a24      	cmp	r2, #36	; 0x24
   84c0a:	d818      	bhi.n	84c3e <_calloc_r+0x4e>
   84c0c:	2a13      	cmp	r2, #19
   84c0e:	d914      	bls.n	84c3a <_calloc_r+0x4a>
   84c10:	2300      	movs	r3, #0
   84c12:	2a1b      	cmp	r2, #27
   84c14:	6003      	str	r3, [r0, #0]
   84c16:	6043      	str	r3, [r0, #4]
   84c18:	d916      	bls.n	84c48 <_calloc_r+0x58>
   84c1a:	2a24      	cmp	r2, #36	; 0x24
   84c1c:	6083      	str	r3, [r0, #8]
   84c1e:	60c3      	str	r3, [r0, #12]
   84c20:	bf11      	iteee	ne
   84c22:	f100 0210 	addne.w	r2, r0, #16
   84c26:	6103      	streq	r3, [r0, #16]
   84c28:	6143      	streq	r3, [r0, #20]
   84c2a:	f100 0218 	addeq.w	r2, r0, #24
   84c2e:	2300      	movs	r3, #0
   84c30:	6013      	str	r3, [r2, #0]
   84c32:	6053      	str	r3, [r2, #4]
   84c34:	6093      	str	r3, [r2, #8]
   84c36:	4620      	mov	r0, r4
   84c38:	bd10      	pop	{r4, pc}
   84c3a:	4602      	mov	r2, r0
   84c3c:	e7f7      	b.n	84c2e <_calloc_r+0x3e>
   84c3e:	2100      	movs	r1, #0
   84c40:	f7fc fa12 	bl	81068 <memset>
   84c44:	4620      	mov	r0, r4
   84c46:	bd10      	pop	{r4, pc}
   84c48:	f100 0208 	add.w	r2, r0, #8
   84c4c:	e7ef      	b.n	84c2e <_calloc_r+0x3e>
   84c4e:	bf00      	nop

00084c50 <__aeabi_drsub>:
   84c50:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84c54:	e002      	b.n	84c5c <__adddf3>
   84c56:	bf00      	nop

00084c58 <__aeabi_dsub>:
   84c58:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084c5c <__adddf3>:
   84c5c:	b530      	push	{r4, r5, lr}
   84c5e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84c62:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84c66:	ea94 0f05 	teq	r4, r5
   84c6a:	bf08      	it	eq
   84c6c:	ea90 0f02 	teqeq	r0, r2
   84c70:	bf1f      	itttt	ne
   84c72:	ea54 0c00 	orrsne.w	ip, r4, r0
   84c76:	ea55 0c02 	orrsne.w	ip, r5, r2
   84c7a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84c7e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84c82:	f000 80e2 	beq.w	84e4a <__adddf3+0x1ee>
   84c86:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84c8a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84c8e:	bfb8      	it	lt
   84c90:	426d      	neglt	r5, r5
   84c92:	dd0c      	ble.n	84cae <__adddf3+0x52>
   84c94:	442c      	add	r4, r5
   84c96:	ea80 0202 	eor.w	r2, r0, r2
   84c9a:	ea81 0303 	eor.w	r3, r1, r3
   84c9e:	ea82 0000 	eor.w	r0, r2, r0
   84ca2:	ea83 0101 	eor.w	r1, r3, r1
   84ca6:	ea80 0202 	eor.w	r2, r0, r2
   84caa:	ea81 0303 	eor.w	r3, r1, r3
   84cae:	2d36      	cmp	r5, #54	; 0x36
   84cb0:	bf88      	it	hi
   84cb2:	bd30      	pophi	{r4, r5, pc}
   84cb4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84cb8:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84cbc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84cc0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84cc4:	d002      	beq.n	84ccc <__adddf3+0x70>
   84cc6:	4240      	negs	r0, r0
   84cc8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84ccc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84cd0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84cd4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84cd8:	d002      	beq.n	84ce0 <__adddf3+0x84>
   84cda:	4252      	negs	r2, r2
   84cdc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84ce0:	ea94 0f05 	teq	r4, r5
   84ce4:	f000 80a7 	beq.w	84e36 <__adddf3+0x1da>
   84ce8:	f1a4 0401 	sub.w	r4, r4, #1
   84cec:	f1d5 0e20 	rsbs	lr, r5, #32
   84cf0:	db0d      	blt.n	84d0e <__adddf3+0xb2>
   84cf2:	fa02 fc0e 	lsl.w	ip, r2, lr
   84cf6:	fa22 f205 	lsr.w	r2, r2, r5
   84cfa:	1880      	adds	r0, r0, r2
   84cfc:	f141 0100 	adc.w	r1, r1, #0
   84d00:	fa03 f20e 	lsl.w	r2, r3, lr
   84d04:	1880      	adds	r0, r0, r2
   84d06:	fa43 f305 	asr.w	r3, r3, r5
   84d0a:	4159      	adcs	r1, r3
   84d0c:	e00e      	b.n	84d2c <__adddf3+0xd0>
   84d0e:	f1a5 0520 	sub.w	r5, r5, #32
   84d12:	f10e 0e20 	add.w	lr, lr, #32
   84d16:	2a01      	cmp	r2, #1
   84d18:	fa03 fc0e 	lsl.w	ip, r3, lr
   84d1c:	bf28      	it	cs
   84d1e:	f04c 0c02 	orrcs.w	ip, ip, #2
   84d22:	fa43 f305 	asr.w	r3, r3, r5
   84d26:	18c0      	adds	r0, r0, r3
   84d28:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84d2c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84d30:	d507      	bpl.n	84d42 <__adddf3+0xe6>
   84d32:	f04f 0e00 	mov.w	lr, #0
   84d36:	f1dc 0c00 	rsbs	ip, ip, #0
   84d3a:	eb7e 0000 	sbcs.w	r0, lr, r0
   84d3e:	eb6e 0101 	sbc.w	r1, lr, r1
   84d42:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84d46:	d31b      	bcc.n	84d80 <__adddf3+0x124>
   84d48:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84d4c:	d30c      	bcc.n	84d68 <__adddf3+0x10c>
   84d4e:	0849      	lsrs	r1, r1, #1
   84d50:	ea5f 0030 	movs.w	r0, r0, rrx
   84d54:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84d58:	f104 0401 	add.w	r4, r4, #1
   84d5c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84d60:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84d64:	f080 809a 	bcs.w	84e9c <__adddf3+0x240>
   84d68:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84d6c:	bf08      	it	eq
   84d6e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84d72:	f150 0000 	adcs.w	r0, r0, #0
   84d76:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84d7a:	ea41 0105 	orr.w	r1, r1, r5
   84d7e:	bd30      	pop	{r4, r5, pc}
   84d80:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84d84:	4140      	adcs	r0, r0
   84d86:	eb41 0101 	adc.w	r1, r1, r1
   84d8a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84d8e:	f1a4 0401 	sub.w	r4, r4, #1
   84d92:	d1e9      	bne.n	84d68 <__adddf3+0x10c>
   84d94:	f091 0f00 	teq	r1, #0
   84d98:	bf04      	itt	eq
   84d9a:	4601      	moveq	r1, r0
   84d9c:	2000      	moveq	r0, #0
   84d9e:	fab1 f381 	clz	r3, r1
   84da2:	bf08      	it	eq
   84da4:	3320      	addeq	r3, #32
   84da6:	f1a3 030b 	sub.w	r3, r3, #11
   84daa:	f1b3 0220 	subs.w	r2, r3, #32
   84dae:	da0c      	bge.n	84dca <__adddf3+0x16e>
   84db0:	320c      	adds	r2, #12
   84db2:	dd08      	ble.n	84dc6 <__adddf3+0x16a>
   84db4:	f102 0c14 	add.w	ip, r2, #20
   84db8:	f1c2 020c 	rsb	r2, r2, #12
   84dbc:	fa01 f00c 	lsl.w	r0, r1, ip
   84dc0:	fa21 f102 	lsr.w	r1, r1, r2
   84dc4:	e00c      	b.n	84de0 <__adddf3+0x184>
   84dc6:	f102 0214 	add.w	r2, r2, #20
   84dca:	bfd8      	it	le
   84dcc:	f1c2 0c20 	rsble	ip, r2, #32
   84dd0:	fa01 f102 	lsl.w	r1, r1, r2
   84dd4:	fa20 fc0c 	lsr.w	ip, r0, ip
   84dd8:	bfdc      	itt	le
   84dda:	ea41 010c 	orrle.w	r1, r1, ip
   84dde:	4090      	lslle	r0, r2
   84de0:	1ae4      	subs	r4, r4, r3
   84de2:	bfa2      	ittt	ge
   84de4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84de8:	4329      	orrge	r1, r5
   84dea:	bd30      	popge	{r4, r5, pc}
   84dec:	ea6f 0404 	mvn.w	r4, r4
   84df0:	3c1f      	subs	r4, #31
   84df2:	da1c      	bge.n	84e2e <__adddf3+0x1d2>
   84df4:	340c      	adds	r4, #12
   84df6:	dc0e      	bgt.n	84e16 <__adddf3+0x1ba>
   84df8:	f104 0414 	add.w	r4, r4, #20
   84dfc:	f1c4 0220 	rsb	r2, r4, #32
   84e00:	fa20 f004 	lsr.w	r0, r0, r4
   84e04:	fa01 f302 	lsl.w	r3, r1, r2
   84e08:	ea40 0003 	orr.w	r0, r0, r3
   84e0c:	fa21 f304 	lsr.w	r3, r1, r4
   84e10:	ea45 0103 	orr.w	r1, r5, r3
   84e14:	bd30      	pop	{r4, r5, pc}
   84e16:	f1c4 040c 	rsb	r4, r4, #12
   84e1a:	f1c4 0220 	rsb	r2, r4, #32
   84e1e:	fa20 f002 	lsr.w	r0, r0, r2
   84e22:	fa01 f304 	lsl.w	r3, r1, r4
   84e26:	ea40 0003 	orr.w	r0, r0, r3
   84e2a:	4629      	mov	r1, r5
   84e2c:	bd30      	pop	{r4, r5, pc}
   84e2e:	fa21 f004 	lsr.w	r0, r1, r4
   84e32:	4629      	mov	r1, r5
   84e34:	bd30      	pop	{r4, r5, pc}
   84e36:	f094 0f00 	teq	r4, #0
   84e3a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84e3e:	bf06      	itte	eq
   84e40:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84e44:	3401      	addeq	r4, #1
   84e46:	3d01      	subne	r5, #1
   84e48:	e74e      	b.n	84ce8 <__adddf3+0x8c>
   84e4a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84e4e:	bf18      	it	ne
   84e50:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84e54:	d029      	beq.n	84eaa <__adddf3+0x24e>
   84e56:	ea94 0f05 	teq	r4, r5
   84e5a:	bf08      	it	eq
   84e5c:	ea90 0f02 	teqeq	r0, r2
   84e60:	d005      	beq.n	84e6e <__adddf3+0x212>
   84e62:	ea54 0c00 	orrs.w	ip, r4, r0
   84e66:	bf04      	itt	eq
   84e68:	4619      	moveq	r1, r3
   84e6a:	4610      	moveq	r0, r2
   84e6c:	bd30      	pop	{r4, r5, pc}
   84e6e:	ea91 0f03 	teq	r1, r3
   84e72:	bf1e      	ittt	ne
   84e74:	2100      	movne	r1, #0
   84e76:	2000      	movne	r0, #0
   84e78:	bd30      	popne	{r4, r5, pc}
   84e7a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84e7e:	d105      	bne.n	84e8c <__adddf3+0x230>
   84e80:	0040      	lsls	r0, r0, #1
   84e82:	4149      	adcs	r1, r1
   84e84:	bf28      	it	cs
   84e86:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84e8a:	bd30      	pop	{r4, r5, pc}
   84e8c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84e90:	bf3c      	itt	cc
   84e92:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84e96:	bd30      	popcc	{r4, r5, pc}
   84e98:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84e9c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84ea0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84ea4:	f04f 0000 	mov.w	r0, #0
   84ea8:	bd30      	pop	{r4, r5, pc}
   84eaa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84eae:	bf1a      	itte	ne
   84eb0:	4619      	movne	r1, r3
   84eb2:	4610      	movne	r0, r2
   84eb4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84eb8:	bf1c      	itt	ne
   84eba:	460b      	movne	r3, r1
   84ebc:	4602      	movne	r2, r0
   84ebe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84ec2:	bf06      	itte	eq
   84ec4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84ec8:	ea91 0f03 	teqeq	r1, r3
   84ecc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84ed0:	bd30      	pop	{r4, r5, pc}
   84ed2:	bf00      	nop

00084ed4 <__aeabi_ui2d>:
   84ed4:	f090 0f00 	teq	r0, #0
   84ed8:	bf04      	itt	eq
   84eda:	2100      	moveq	r1, #0
   84edc:	4770      	bxeq	lr
   84ede:	b530      	push	{r4, r5, lr}
   84ee0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84ee4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84ee8:	f04f 0500 	mov.w	r5, #0
   84eec:	f04f 0100 	mov.w	r1, #0
   84ef0:	e750      	b.n	84d94 <__adddf3+0x138>
   84ef2:	bf00      	nop

00084ef4 <__aeabi_i2d>:
   84ef4:	f090 0f00 	teq	r0, #0
   84ef8:	bf04      	itt	eq
   84efa:	2100      	moveq	r1, #0
   84efc:	4770      	bxeq	lr
   84efe:	b530      	push	{r4, r5, lr}
   84f00:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f04:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f08:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84f0c:	bf48      	it	mi
   84f0e:	4240      	negmi	r0, r0
   84f10:	f04f 0100 	mov.w	r1, #0
   84f14:	e73e      	b.n	84d94 <__adddf3+0x138>
   84f16:	bf00      	nop

00084f18 <__aeabi_f2d>:
   84f18:	0042      	lsls	r2, r0, #1
   84f1a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84f1e:	ea4f 0131 	mov.w	r1, r1, rrx
   84f22:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84f26:	bf1f      	itttt	ne
   84f28:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84f2c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84f30:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84f34:	4770      	bxne	lr
   84f36:	f092 0f00 	teq	r2, #0
   84f3a:	bf14      	ite	ne
   84f3c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84f40:	4770      	bxeq	lr
   84f42:	b530      	push	{r4, r5, lr}
   84f44:	f44f 7460 	mov.w	r4, #896	; 0x380
   84f48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84f4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84f50:	e720      	b.n	84d94 <__adddf3+0x138>
   84f52:	bf00      	nop

00084f54 <__aeabi_ul2d>:
   84f54:	ea50 0201 	orrs.w	r2, r0, r1
   84f58:	bf08      	it	eq
   84f5a:	4770      	bxeq	lr
   84f5c:	b530      	push	{r4, r5, lr}
   84f5e:	f04f 0500 	mov.w	r5, #0
   84f62:	e00a      	b.n	84f7a <__aeabi_l2d+0x16>

00084f64 <__aeabi_l2d>:
   84f64:	ea50 0201 	orrs.w	r2, r0, r1
   84f68:	bf08      	it	eq
   84f6a:	4770      	bxeq	lr
   84f6c:	b530      	push	{r4, r5, lr}
   84f6e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84f72:	d502      	bpl.n	84f7a <__aeabi_l2d+0x16>
   84f74:	4240      	negs	r0, r0
   84f76:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84f7a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84f7e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84f82:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84f86:	f43f aedc 	beq.w	84d42 <__adddf3+0xe6>
   84f8a:	f04f 0203 	mov.w	r2, #3
   84f8e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84f92:	bf18      	it	ne
   84f94:	3203      	addne	r2, #3
   84f96:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84f9a:	bf18      	it	ne
   84f9c:	3203      	addne	r2, #3
   84f9e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84fa2:	f1c2 0320 	rsb	r3, r2, #32
   84fa6:	fa00 fc03 	lsl.w	ip, r0, r3
   84faa:	fa20 f002 	lsr.w	r0, r0, r2
   84fae:	fa01 fe03 	lsl.w	lr, r1, r3
   84fb2:	ea40 000e 	orr.w	r0, r0, lr
   84fb6:	fa21 f102 	lsr.w	r1, r1, r2
   84fba:	4414      	add	r4, r2
   84fbc:	e6c1      	b.n	84d42 <__adddf3+0xe6>
   84fbe:	bf00      	nop

00084fc0 <__aeabi_dmul>:
   84fc0:	b570      	push	{r4, r5, r6, lr}
   84fc2:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84fc6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84fca:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84fce:	bf1d      	ittte	ne
   84fd0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84fd4:	ea94 0f0c 	teqne	r4, ip
   84fd8:	ea95 0f0c 	teqne	r5, ip
   84fdc:	f000 f8de 	bleq	8519c <__aeabi_dmul+0x1dc>
   84fe0:	442c      	add	r4, r5
   84fe2:	ea81 0603 	eor.w	r6, r1, r3
   84fe6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84fea:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84fee:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84ff2:	bf18      	it	ne
   84ff4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84ff8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84ffc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   85000:	d038      	beq.n	85074 <__aeabi_dmul+0xb4>
   85002:	fba0 ce02 	umull	ip, lr, r0, r2
   85006:	f04f 0500 	mov.w	r5, #0
   8500a:	fbe1 e502 	umlal	lr, r5, r1, r2
   8500e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   85012:	fbe0 e503 	umlal	lr, r5, r0, r3
   85016:	f04f 0600 	mov.w	r6, #0
   8501a:	fbe1 5603 	umlal	r5, r6, r1, r3
   8501e:	f09c 0f00 	teq	ip, #0
   85022:	bf18      	it	ne
   85024:	f04e 0e01 	orrne.w	lr, lr, #1
   85028:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   8502c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   85030:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   85034:	d204      	bcs.n	85040 <__aeabi_dmul+0x80>
   85036:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   8503a:	416d      	adcs	r5, r5
   8503c:	eb46 0606 	adc.w	r6, r6, r6
   85040:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   85044:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   85048:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   8504c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   85050:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   85054:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85058:	bf88      	it	hi
   8505a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8505e:	d81e      	bhi.n	8509e <__aeabi_dmul+0xde>
   85060:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   85064:	bf08      	it	eq
   85066:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   8506a:	f150 0000 	adcs.w	r0, r0, #0
   8506e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85072:	bd70      	pop	{r4, r5, r6, pc}
   85074:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   85078:	ea46 0101 	orr.w	r1, r6, r1
   8507c:	ea40 0002 	orr.w	r0, r0, r2
   85080:	ea81 0103 	eor.w	r1, r1, r3
   85084:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   85088:	bfc2      	ittt	gt
   8508a:	ebd4 050c 	rsbsgt	r5, r4, ip
   8508e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85092:	bd70      	popgt	{r4, r5, r6, pc}
   85094:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85098:	f04f 0e00 	mov.w	lr, #0
   8509c:	3c01      	subs	r4, #1
   8509e:	f300 80ab 	bgt.w	851f8 <__aeabi_dmul+0x238>
   850a2:	f114 0f36 	cmn.w	r4, #54	; 0x36
   850a6:	bfde      	ittt	le
   850a8:	2000      	movle	r0, #0
   850aa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   850ae:	bd70      	pople	{r4, r5, r6, pc}
   850b0:	f1c4 0400 	rsb	r4, r4, #0
   850b4:	3c20      	subs	r4, #32
   850b6:	da35      	bge.n	85124 <__aeabi_dmul+0x164>
   850b8:	340c      	adds	r4, #12
   850ba:	dc1b      	bgt.n	850f4 <__aeabi_dmul+0x134>
   850bc:	f104 0414 	add.w	r4, r4, #20
   850c0:	f1c4 0520 	rsb	r5, r4, #32
   850c4:	fa00 f305 	lsl.w	r3, r0, r5
   850c8:	fa20 f004 	lsr.w	r0, r0, r4
   850cc:	fa01 f205 	lsl.w	r2, r1, r5
   850d0:	ea40 0002 	orr.w	r0, r0, r2
   850d4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   850d8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   850dc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   850e0:	fa21 f604 	lsr.w	r6, r1, r4
   850e4:	eb42 0106 	adc.w	r1, r2, r6
   850e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   850ec:	bf08      	it	eq
   850ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   850f2:	bd70      	pop	{r4, r5, r6, pc}
   850f4:	f1c4 040c 	rsb	r4, r4, #12
   850f8:	f1c4 0520 	rsb	r5, r4, #32
   850fc:	fa00 f304 	lsl.w	r3, r0, r4
   85100:	fa20 f005 	lsr.w	r0, r0, r5
   85104:	fa01 f204 	lsl.w	r2, r1, r4
   85108:	ea40 0002 	orr.w	r0, r0, r2
   8510c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85110:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   85114:	f141 0100 	adc.w	r1, r1, #0
   85118:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8511c:	bf08      	it	eq
   8511e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85122:	bd70      	pop	{r4, r5, r6, pc}
   85124:	f1c4 0520 	rsb	r5, r4, #32
   85128:	fa00 f205 	lsl.w	r2, r0, r5
   8512c:	ea4e 0e02 	orr.w	lr, lr, r2
   85130:	fa20 f304 	lsr.w	r3, r0, r4
   85134:	fa01 f205 	lsl.w	r2, r1, r5
   85138:	ea43 0302 	orr.w	r3, r3, r2
   8513c:	fa21 f004 	lsr.w	r0, r1, r4
   85140:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   85144:	fa21 f204 	lsr.w	r2, r1, r4
   85148:	ea20 0002 	bic.w	r0, r0, r2
   8514c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85150:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85154:	bf08      	it	eq
   85156:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8515a:	bd70      	pop	{r4, r5, r6, pc}
   8515c:	f094 0f00 	teq	r4, #0
   85160:	d10f      	bne.n	85182 <__aeabi_dmul+0x1c2>
   85162:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   85166:	0040      	lsls	r0, r0, #1
   85168:	eb41 0101 	adc.w	r1, r1, r1
   8516c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85170:	bf08      	it	eq
   85172:	3c01      	subeq	r4, #1
   85174:	d0f7      	beq.n	85166 <__aeabi_dmul+0x1a6>
   85176:	ea41 0106 	orr.w	r1, r1, r6
   8517a:	f095 0f00 	teq	r5, #0
   8517e:	bf18      	it	ne
   85180:	4770      	bxne	lr
   85182:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   85186:	0052      	lsls	r2, r2, #1
   85188:	eb43 0303 	adc.w	r3, r3, r3
   8518c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85190:	bf08      	it	eq
   85192:	3d01      	subeq	r5, #1
   85194:	d0f7      	beq.n	85186 <__aeabi_dmul+0x1c6>
   85196:	ea43 0306 	orr.w	r3, r3, r6
   8519a:	4770      	bx	lr
   8519c:	ea94 0f0c 	teq	r4, ip
   851a0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   851a4:	bf18      	it	ne
   851a6:	ea95 0f0c 	teqne	r5, ip
   851aa:	d00c      	beq.n	851c6 <__aeabi_dmul+0x206>
   851ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   851b0:	bf18      	it	ne
   851b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   851b6:	d1d1      	bne.n	8515c <__aeabi_dmul+0x19c>
   851b8:	ea81 0103 	eor.w	r1, r1, r3
   851bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   851c0:	f04f 0000 	mov.w	r0, #0
   851c4:	bd70      	pop	{r4, r5, r6, pc}
   851c6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   851ca:	bf06      	itte	eq
   851cc:	4610      	moveq	r0, r2
   851ce:	4619      	moveq	r1, r3
   851d0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   851d4:	d019      	beq.n	8520a <__aeabi_dmul+0x24a>
   851d6:	ea94 0f0c 	teq	r4, ip
   851da:	d102      	bne.n	851e2 <__aeabi_dmul+0x222>
   851dc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   851e0:	d113      	bne.n	8520a <__aeabi_dmul+0x24a>
   851e2:	ea95 0f0c 	teq	r5, ip
   851e6:	d105      	bne.n	851f4 <__aeabi_dmul+0x234>
   851e8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   851ec:	bf1c      	itt	ne
   851ee:	4610      	movne	r0, r2
   851f0:	4619      	movne	r1, r3
   851f2:	d10a      	bne.n	8520a <__aeabi_dmul+0x24a>
   851f4:	ea81 0103 	eor.w	r1, r1, r3
   851f8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   851fc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   85200:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   85204:	f04f 0000 	mov.w	r0, #0
   85208:	bd70      	pop	{r4, r5, r6, pc}
   8520a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8520e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   85212:	bd70      	pop	{r4, r5, r6, pc}

00085214 <__aeabi_ddiv>:
   85214:	b570      	push	{r4, r5, r6, lr}
   85216:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8521a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8521e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   85222:	bf1d      	ittte	ne
   85224:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85228:	ea94 0f0c 	teqne	r4, ip
   8522c:	ea95 0f0c 	teqne	r5, ip
   85230:	f000 f8a7 	bleq	85382 <__aeabi_ddiv+0x16e>
   85234:	eba4 0405 	sub.w	r4, r4, r5
   85238:	ea81 0e03 	eor.w	lr, r1, r3
   8523c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85240:	ea4f 3101 	mov.w	r1, r1, lsl #12
   85244:	f000 8088 	beq.w	85358 <__aeabi_ddiv+0x144>
   85248:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8524c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85250:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   85254:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85258:	ea4f 2202 	mov.w	r2, r2, lsl #8
   8525c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85260:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   85264:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85268:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   8526c:	429d      	cmp	r5, r3
   8526e:	bf08      	it	eq
   85270:	4296      	cmpeq	r6, r2
   85272:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85276:	f504 7440 	add.w	r4, r4, #768	; 0x300
   8527a:	d202      	bcs.n	85282 <__aeabi_ddiv+0x6e>
   8527c:	085b      	lsrs	r3, r3, #1
   8527e:	ea4f 0232 	mov.w	r2, r2, rrx
   85282:	1ab6      	subs	r6, r6, r2
   85284:	eb65 0503 	sbc.w	r5, r5, r3
   85288:	085b      	lsrs	r3, r3, #1
   8528a:	ea4f 0232 	mov.w	r2, r2, rrx
   8528e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85292:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85296:	ebb6 0e02 	subs.w	lr, r6, r2
   8529a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8529e:	bf22      	ittt	cs
   852a0:	1ab6      	subcs	r6, r6, r2
   852a2:	4675      	movcs	r5, lr
   852a4:	ea40 000c 	orrcs.w	r0, r0, ip
   852a8:	085b      	lsrs	r3, r3, #1
   852aa:	ea4f 0232 	mov.w	r2, r2, rrx
   852ae:	ebb6 0e02 	subs.w	lr, r6, r2
   852b2:	eb75 0e03 	sbcs.w	lr, r5, r3
   852b6:	bf22      	ittt	cs
   852b8:	1ab6      	subcs	r6, r6, r2
   852ba:	4675      	movcs	r5, lr
   852bc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   852c0:	085b      	lsrs	r3, r3, #1
   852c2:	ea4f 0232 	mov.w	r2, r2, rrx
   852c6:	ebb6 0e02 	subs.w	lr, r6, r2
   852ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   852ce:	bf22      	ittt	cs
   852d0:	1ab6      	subcs	r6, r6, r2
   852d2:	4675      	movcs	r5, lr
   852d4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   852d8:	085b      	lsrs	r3, r3, #1
   852da:	ea4f 0232 	mov.w	r2, r2, rrx
   852de:	ebb6 0e02 	subs.w	lr, r6, r2
   852e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   852e6:	bf22      	ittt	cs
   852e8:	1ab6      	subcs	r6, r6, r2
   852ea:	4675      	movcs	r5, lr
   852ec:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   852f0:	ea55 0e06 	orrs.w	lr, r5, r6
   852f4:	d018      	beq.n	85328 <__aeabi_ddiv+0x114>
   852f6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   852fa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   852fe:	ea4f 1606 	mov.w	r6, r6, lsl #4
   85302:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   85306:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8530a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8530e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   85312:	d1c0      	bne.n	85296 <__aeabi_ddiv+0x82>
   85314:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85318:	d10b      	bne.n	85332 <__aeabi_ddiv+0x11e>
   8531a:	ea41 0100 	orr.w	r1, r1, r0
   8531e:	f04f 0000 	mov.w	r0, #0
   85322:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   85326:	e7b6      	b.n	85296 <__aeabi_ddiv+0x82>
   85328:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8532c:	bf04      	itt	eq
   8532e:	4301      	orreq	r1, r0
   85330:	2000      	moveq	r0, #0
   85332:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   85336:	bf88      	it	hi
   85338:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8533c:	f63f aeaf 	bhi.w	8509e <__aeabi_dmul+0xde>
   85340:	ebb5 0c03 	subs.w	ip, r5, r3
   85344:	bf04      	itt	eq
   85346:	ebb6 0c02 	subseq.w	ip, r6, r2
   8534a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8534e:	f150 0000 	adcs.w	r0, r0, #0
   85352:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85356:	bd70      	pop	{r4, r5, r6, pc}
   85358:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8535c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85360:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85364:	bfc2      	ittt	gt
   85366:	ebd4 050c 	rsbsgt	r5, r4, ip
   8536a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8536e:	bd70      	popgt	{r4, r5, r6, pc}
   85370:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85374:	f04f 0e00 	mov.w	lr, #0
   85378:	3c01      	subs	r4, #1
   8537a:	e690      	b.n	8509e <__aeabi_dmul+0xde>
   8537c:	ea45 0e06 	orr.w	lr, r5, r6
   85380:	e68d      	b.n	8509e <__aeabi_dmul+0xde>
   85382:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85386:	ea94 0f0c 	teq	r4, ip
   8538a:	bf08      	it	eq
   8538c:	ea95 0f0c 	teqeq	r5, ip
   85390:	f43f af3b 	beq.w	8520a <__aeabi_dmul+0x24a>
   85394:	ea94 0f0c 	teq	r4, ip
   85398:	d10a      	bne.n	853b0 <__aeabi_ddiv+0x19c>
   8539a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8539e:	f47f af34 	bne.w	8520a <__aeabi_dmul+0x24a>
   853a2:	ea95 0f0c 	teq	r5, ip
   853a6:	f47f af25 	bne.w	851f4 <__aeabi_dmul+0x234>
   853aa:	4610      	mov	r0, r2
   853ac:	4619      	mov	r1, r3
   853ae:	e72c      	b.n	8520a <__aeabi_dmul+0x24a>
   853b0:	ea95 0f0c 	teq	r5, ip
   853b4:	d106      	bne.n	853c4 <__aeabi_ddiv+0x1b0>
   853b6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   853ba:	f43f aefd 	beq.w	851b8 <__aeabi_dmul+0x1f8>
   853be:	4610      	mov	r0, r2
   853c0:	4619      	mov	r1, r3
   853c2:	e722      	b.n	8520a <__aeabi_dmul+0x24a>
   853c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   853c8:	bf18      	it	ne
   853ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   853ce:	f47f aec5 	bne.w	8515c <__aeabi_dmul+0x19c>
   853d2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   853d6:	f47f af0d 	bne.w	851f4 <__aeabi_dmul+0x234>
   853da:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   853de:	f47f aeeb 	bne.w	851b8 <__aeabi_dmul+0x1f8>
   853e2:	e712      	b.n	8520a <__aeabi_dmul+0x24a>

000853e4 <__gedf2>:
   853e4:	f04f 3cff 	mov.w	ip, #4294967295
   853e8:	e006      	b.n	853f8 <__cmpdf2+0x4>
   853ea:	bf00      	nop

000853ec <__ledf2>:
   853ec:	f04f 0c01 	mov.w	ip, #1
   853f0:	e002      	b.n	853f8 <__cmpdf2+0x4>
   853f2:	bf00      	nop

000853f4 <__cmpdf2>:
   853f4:	f04f 0c01 	mov.w	ip, #1
   853f8:	f84d cd04 	str.w	ip, [sp, #-4]!
   853fc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85400:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85404:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85408:	bf18      	it	ne
   8540a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8540e:	d01b      	beq.n	85448 <__cmpdf2+0x54>
   85410:	b001      	add	sp, #4
   85412:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   85416:	bf0c      	ite	eq
   85418:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8541c:	ea91 0f03 	teqne	r1, r3
   85420:	bf02      	ittt	eq
   85422:	ea90 0f02 	teqeq	r0, r2
   85426:	2000      	moveq	r0, #0
   85428:	4770      	bxeq	lr
   8542a:	f110 0f00 	cmn.w	r0, #0
   8542e:	ea91 0f03 	teq	r1, r3
   85432:	bf58      	it	pl
   85434:	4299      	cmppl	r1, r3
   85436:	bf08      	it	eq
   85438:	4290      	cmpeq	r0, r2
   8543a:	bf2c      	ite	cs
   8543c:	17d8      	asrcs	r0, r3, #31
   8543e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   85442:	f040 0001 	orr.w	r0, r0, #1
   85446:	4770      	bx	lr
   85448:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8544c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85450:	d102      	bne.n	85458 <__cmpdf2+0x64>
   85452:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85456:	d107      	bne.n	85468 <__cmpdf2+0x74>
   85458:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8545c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85460:	d1d6      	bne.n	85410 <__cmpdf2+0x1c>
   85462:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85466:	d0d3      	beq.n	85410 <__cmpdf2+0x1c>
   85468:	f85d 0b04 	ldr.w	r0, [sp], #4
   8546c:	4770      	bx	lr
   8546e:	bf00      	nop

00085470 <__aeabi_cdrcmple>:
   85470:	4684      	mov	ip, r0
   85472:	4610      	mov	r0, r2
   85474:	4662      	mov	r2, ip
   85476:	468c      	mov	ip, r1
   85478:	4619      	mov	r1, r3
   8547a:	4663      	mov	r3, ip
   8547c:	e000      	b.n	85480 <__aeabi_cdcmpeq>
   8547e:	bf00      	nop

00085480 <__aeabi_cdcmpeq>:
   85480:	b501      	push	{r0, lr}
   85482:	f7ff ffb7 	bl	853f4 <__cmpdf2>
   85486:	2800      	cmp	r0, #0
   85488:	bf48      	it	mi
   8548a:	f110 0f00 	cmnmi.w	r0, #0
   8548e:	bd01      	pop	{r0, pc}

00085490 <__aeabi_dcmpeq>:
   85490:	f84d ed08 	str.w	lr, [sp, #-8]!
   85494:	f7ff fff4 	bl	85480 <__aeabi_cdcmpeq>
   85498:	bf0c      	ite	eq
   8549a:	2001      	moveq	r0, #1
   8549c:	2000      	movne	r0, #0
   8549e:	f85d fb08 	ldr.w	pc, [sp], #8
   854a2:	bf00      	nop

000854a4 <__aeabi_dcmplt>:
   854a4:	f84d ed08 	str.w	lr, [sp, #-8]!
   854a8:	f7ff ffea 	bl	85480 <__aeabi_cdcmpeq>
   854ac:	bf34      	ite	cc
   854ae:	2001      	movcc	r0, #1
   854b0:	2000      	movcs	r0, #0
   854b2:	f85d fb08 	ldr.w	pc, [sp], #8
   854b6:	bf00      	nop

000854b8 <__aeabi_dcmple>:
   854b8:	f84d ed08 	str.w	lr, [sp, #-8]!
   854bc:	f7ff ffe0 	bl	85480 <__aeabi_cdcmpeq>
   854c0:	bf94      	ite	ls
   854c2:	2001      	movls	r0, #1
   854c4:	2000      	movhi	r0, #0
   854c6:	f85d fb08 	ldr.w	pc, [sp], #8
   854ca:	bf00      	nop

000854cc <__aeabi_dcmpge>:
   854cc:	f84d ed08 	str.w	lr, [sp, #-8]!
   854d0:	f7ff ffce 	bl	85470 <__aeabi_cdrcmple>
   854d4:	bf94      	ite	ls
   854d6:	2001      	movls	r0, #1
   854d8:	2000      	movhi	r0, #0
   854da:	f85d fb08 	ldr.w	pc, [sp], #8
   854de:	bf00      	nop

000854e0 <__aeabi_dcmpgt>:
   854e0:	f84d ed08 	str.w	lr, [sp, #-8]!
   854e4:	f7ff ffc4 	bl	85470 <__aeabi_cdrcmple>
   854e8:	bf34      	ite	cc
   854ea:	2001      	movcc	r0, #1
   854ec:	2000      	movcs	r0, #0
   854ee:	f85d fb08 	ldr.w	pc, [sp], #8
   854f2:	bf00      	nop

000854f4 <__aeabi_dcmpun>:
   854f4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   854f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   854fc:	d102      	bne.n	85504 <__aeabi_dcmpun+0x10>
   854fe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85502:	d10a      	bne.n	8551a <__aeabi_dcmpun+0x26>
   85504:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85508:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8550c:	d102      	bne.n	85514 <__aeabi_dcmpun+0x20>
   8550e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85512:	d102      	bne.n	8551a <__aeabi_dcmpun+0x26>
   85514:	f04f 0000 	mov.w	r0, #0
   85518:	4770      	bx	lr
   8551a:	f04f 0001 	mov.w	r0, #1
   8551e:	4770      	bx	lr

00085520 <__aeabi_d2iz>:
   85520:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85524:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   85528:	d215      	bcs.n	85556 <__aeabi_d2iz+0x36>
   8552a:	d511      	bpl.n	85550 <__aeabi_d2iz+0x30>
   8552c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85530:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85534:	d912      	bls.n	8555c <__aeabi_d2iz+0x3c>
   85536:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8553a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8553e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   85542:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85546:	fa23 f002 	lsr.w	r0, r3, r2
   8554a:	bf18      	it	ne
   8554c:	4240      	negne	r0, r0
   8554e:	4770      	bx	lr
   85550:	f04f 0000 	mov.w	r0, #0
   85554:	4770      	bx	lr
   85556:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8555a:	d105      	bne.n	85568 <__aeabi_d2iz+0x48>
   8555c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   85560:	bf08      	it	eq
   85562:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85566:	4770      	bx	lr
   85568:	f04f 0000 	mov.w	r0, #0
   8556c:	4770      	bx	lr
   8556e:	bf00      	nop

00085570 <__aeabi_uldivmod>:
   85570:	b953      	cbnz	r3, 85588 <__aeabi_uldivmod+0x18>
   85572:	b94a      	cbnz	r2, 85588 <__aeabi_uldivmod+0x18>
   85574:	2900      	cmp	r1, #0
   85576:	bf08      	it	eq
   85578:	2800      	cmpeq	r0, #0
   8557a:	bf1c      	itt	ne
   8557c:	f04f 31ff 	movne.w	r1, #4294967295
   85580:	f04f 30ff 	movne.w	r0, #4294967295
   85584:	f000 b97a 	b.w	8587c <__aeabi_idiv0>
   85588:	f1ad 0c08 	sub.w	ip, sp, #8
   8558c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   85590:	f000 f806 	bl	855a0 <__udivmoddi4>
   85594:	f8dd e004 	ldr.w	lr, [sp, #4]
   85598:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8559c:	b004      	add	sp, #16
   8559e:	4770      	bx	lr

000855a0 <__udivmoddi4>:
   855a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   855a4:	468c      	mov	ip, r1
   855a6:	460e      	mov	r6, r1
   855a8:	4604      	mov	r4, r0
   855aa:	9d08      	ldr	r5, [sp, #32]
   855ac:	2b00      	cmp	r3, #0
   855ae:	d150      	bne.n	85652 <__udivmoddi4+0xb2>
   855b0:	428a      	cmp	r2, r1
   855b2:	4617      	mov	r7, r2
   855b4:	d96c      	bls.n	85690 <__udivmoddi4+0xf0>
   855b6:	fab2 fe82 	clz	lr, r2
   855ba:	f1be 0f00 	cmp.w	lr, #0
   855be:	d00b      	beq.n	855d8 <__udivmoddi4+0x38>
   855c0:	f1ce 0c20 	rsb	ip, lr, #32
   855c4:	fa01 f60e 	lsl.w	r6, r1, lr
   855c8:	fa20 fc0c 	lsr.w	ip, r0, ip
   855cc:	fa02 f70e 	lsl.w	r7, r2, lr
   855d0:	ea4c 0c06 	orr.w	ip, ip, r6
   855d4:	fa00 f40e 	lsl.w	r4, r0, lr
   855d8:	0c3a      	lsrs	r2, r7, #16
   855da:	fbbc f9f2 	udiv	r9, ip, r2
   855de:	b2bb      	uxth	r3, r7
   855e0:	fb02 cc19 	mls	ip, r2, r9, ip
   855e4:	fb09 fa03 	mul.w	sl, r9, r3
   855e8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   855ec:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   855f0:	45b2      	cmp	sl, r6
   855f2:	d90a      	bls.n	8560a <__udivmoddi4+0x6a>
   855f4:	19f6      	adds	r6, r6, r7
   855f6:	f109 31ff 	add.w	r1, r9, #4294967295
   855fa:	f080 8125 	bcs.w	85848 <__udivmoddi4+0x2a8>
   855fe:	45b2      	cmp	sl, r6
   85600:	f240 8122 	bls.w	85848 <__udivmoddi4+0x2a8>
   85604:	f1a9 0902 	sub.w	r9, r9, #2
   85608:	443e      	add	r6, r7
   8560a:	eba6 060a 	sub.w	r6, r6, sl
   8560e:	fbb6 f0f2 	udiv	r0, r6, r2
   85612:	fb02 6610 	mls	r6, r2, r0, r6
   85616:	fb00 f303 	mul.w	r3, r0, r3
   8561a:	b2a4      	uxth	r4, r4
   8561c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   85620:	42a3      	cmp	r3, r4
   85622:	d909      	bls.n	85638 <__udivmoddi4+0x98>
   85624:	19e4      	adds	r4, r4, r7
   85626:	f100 32ff 	add.w	r2, r0, #4294967295
   8562a:	f080 810b 	bcs.w	85844 <__udivmoddi4+0x2a4>
   8562e:	42a3      	cmp	r3, r4
   85630:	f240 8108 	bls.w	85844 <__udivmoddi4+0x2a4>
   85634:	3802      	subs	r0, #2
   85636:	443c      	add	r4, r7
   85638:	2100      	movs	r1, #0
   8563a:	1ae4      	subs	r4, r4, r3
   8563c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85640:	2d00      	cmp	r5, #0
   85642:	d062      	beq.n	8570a <__udivmoddi4+0x16a>
   85644:	2300      	movs	r3, #0
   85646:	fa24 f40e 	lsr.w	r4, r4, lr
   8564a:	602c      	str	r4, [r5, #0]
   8564c:	606b      	str	r3, [r5, #4]
   8564e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85652:	428b      	cmp	r3, r1
   85654:	d907      	bls.n	85666 <__udivmoddi4+0xc6>
   85656:	2d00      	cmp	r5, #0
   85658:	d055      	beq.n	85706 <__udivmoddi4+0x166>
   8565a:	2100      	movs	r1, #0
   8565c:	e885 0041 	stmia.w	r5, {r0, r6}
   85660:	4608      	mov	r0, r1
   85662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85666:	fab3 f183 	clz	r1, r3
   8566a:	2900      	cmp	r1, #0
   8566c:	f040 808f 	bne.w	8578e <__udivmoddi4+0x1ee>
   85670:	42b3      	cmp	r3, r6
   85672:	d302      	bcc.n	8567a <__udivmoddi4+0xda>
   85674:	4282      	cmp	r2, r0
   85676:	f200 80fc 	bhi.w	85872 <__udivmoddi4+0x2d2>
   8567a:	1a84      	subs	r4, r0, r2
   8567c:	eb66 0603 	sbc.w	r6, r6, r3
   85680:	2001      	movs	r0, #1
   85682:	46b4      	mov	ip, r6
   85684:	2d00      	cmp	r5, #0
   85686:	d040      	beq.n	8570a <__udivmoddi4+0x16a>
   85688:	e885 1010 	stmia.w	r5, {r4, ip}
   8568c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85690:	b912      	cbnz	r2, 85698 <__udivmoddi4+0xf8>
   85692:	2701      	movs	r7, #1
   85694:	fbb7 f7f2 	udiv	r7, r7, r2
   85698:	fab7 fe87 	clz	lr, r7
   8569c:	f1be 0f00 	cmp.w	lr, #0
   856a0:	d135      	bne.n	8570e <__udivmoddi4+0x16e>
   856a2:	2101      	movs	r1, #1
   856a4:	1bf6      	subs	r6, r6, r7
   856a6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   856aa:	fa1f f887 	uxth.w	r8, r7
   856ae:	fbb6 f2fc 	udiv	r2, r6, ip
   856b2:	fb0c 6612 	mls	r6, ip, r2, r6
   856b6:	fb08 f002 	mul.w	r0, r8, r2
   856ba:	0c23      	lsrs	r3, r4, #16
   856bc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   856c0:	42b0      	cmp	r0, r6
   856c2:	d907      	bls.n	856d4 <__udivmoddi4+0x134>
   856c4:	19f6      	adds	r6, r6, r7
   856c6:	f102 33ff 	add.w	r3, r2, #4294967295
   856ca:	d202      	bcs.n	856d2 <__udivmoddi4+0x132>
   856cc:	42b0      	cmp	r0, r6
   856ce:	f200 80d2 	bhi.w	85876 <__udivmoddi4+0x2d6>
   856d2:	461a      	mov	r2, r3
   856d4:	1a36      	subs	r6, r6, r0
   856d6:	fbb6 f0fc 	udiv	r0, r6, ip
   856da:	fb0c 6610 	mls	r6, ip, r0, r6
   856de:	fb08 f800 	mul.w	r8, r8, r0
   856e2:	b2a3      	uxth	r3, r4
   856e4:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   856e8:	45a0      	cmp	r8, r4
   856ea:	d907      	bls.n	856fc <__udivmoddi4+0x15c>
   856ec:	19e4      	adds	r4, r4, r7
   856ee:	f100 33ff 	add.w	r3, r0, #4294967295
   856f2:	d202      	bcs.n	856fa <__udivmoddi4+0x15a>
   856f4:	45a0      	cmp	r8, r4
   856f6:	f200 80b9 	bhi.w	8586c <__udivmoddi4+0x2cc>
   856fa:	4618      	mov	r0, r3
   856fc:	eba4 0408 	sub.w	r4, r4, r8
   85700:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   85704:	e79c      	b.n	85640 <__udivmoddi4+0xa0>
   85706:	4629      	mov	r1, r5
   85708:	4628      	mov	r0, r5
   8570a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8570e:	fa07 f70e 	lsl.w	r7, r7, lr
   85712:	f1ce 0320 	rsb	r3, lr, #32
   85716:	fa26 f203 	lsr.w	r2, r6, r3
   8571a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   8571e:	fbb2 f1fc 	udiv	r1, r2, ip
   85722:	fa1f f887 	uxth.w	r8, r7
   85726:	fb0c 2211 	mls	r2, ip, r1, r2
   8572a:	fa06 f60e 	lsl.w	r6, r6, lr
   8572e:	fa20 f303 	lsr.w	r3, r0, r3
   85732:	fb01 f908 	mul.w	r9, r1, r8
   85736:	4333      	orrs	r3, r6
   85738:	0c1e      	lsrs	r6, r3, #16
   8573a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   8573e:	45b1      	cmp	r9, r6
   85740:	fa00 f40e 	lsl.w	r4, r0, lr
   85744:	d909      	bls.n	8575a <__udivmoddi4+0x1ba>
   85746:	19f6      	adds	r6, r6, r7
   85748:	f101 32ff 	add.w	r2, r1, #4294967295
   8574c:	f080 808c 	bcs.w	85868 <__udivmoddi4+0x2c8>
   85750:	45b1      	cmp	r9, r6
   85752:	f240 8089 	bls.w	85868 <__udivmoddi4+0x2c8>
   85756:	3902      	subs	r1, #2
   85758:	443e      	add	r6, r7
   8575a:	eba6 0609 	sub.w	r6, r6, r9
   8575e:	fbb6 f0fc 	udiv	r0, r6, ip
   85762:	fb0c 6210 	mls	r2, ip, r0, r6
   85766:	fb00 f908 	mul.w	r9, r0, r8
   8576a:	b29e      	uxth	r6, r3
   8576c:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   85770:	45b1      	cmp	r9, r6
   85772:	d907      	bls.n	85784 <__udivmoddi4+0x1e4>
   85774:	19f6      	adds	r6, r6, r7
   85776:	f100 33ff 	add.w	r3, r0, #4294967295
   8577a:	d271      	bcs.n	85860 <__udivmoddi4+0x2c0>
   8577c:	45b1      	cmp	r9, r6
   8577e:	d96f      	bls.n	85860 <__udivmoddi4+0x2c0>
   85780:	3802      	subs	r0, #2
   85782:	443e      	add	r6, r7
   85784:	eba6 0609 	sub.w	r6, r6, r9
   85788:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   8578c:	e78f      	b.n	856ae <__udivmoddi4+0x10e>
   8578e:	f1c1 0720 	rsb	r7, r1, #32
   85792:	fa22 f807 	lsr.w	r8, r2, r7
   85796:	408b      	lsls	r3, r1
   85798:	ea48 0303 	orr.w	r3, r8, r3
   8579c:	fa26 f407 	lsr.w	r4, r6, r7
   857a0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   857a4:	fbb4 f9fe 	udiv	r9, r4, lr
   857a8:	fa1f fc83 	uxth.w	ip, r3
   857ac:	fb0e 4419 	mls	r4, lr, r9, r4
   857b0:	408e      	lsls	r6, r1
   857b2:	fa20 f807 	lsr.w	r8, r0, r7
   857b6:	fb09 fa0c 	mul.w	sl, r9, ip
   857ba:	ea48 0806 	orr.w	r8, r8, r6
   857be:	ea4f 4618 	mov.w	r6, r8, lsr #16
   857c2:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   857c6:	45a2      	cmp	sl, r4
   857c8:	fa02 f201 	lsl.w	r2, r2, r1
   857cc:	fa00 f601 	lsl.w	r6, r0, r1
   857d0:	d908      	bls.n	857e4 <__udivmoddi4+0x244>
   857d2:	18e4      	adds	r4, r4, r3
   857d4:	f109 30ff 	add.w	r0, r9, #4294967295
   857d8:	d244      	bcs.n	85864 <__udivmoddi4+0x2c4>
   857da:	45a2      	cmp	sl, r4
   857dc:	d942      	bls.n	85864 <__udivmoddi4+0x2c4>
   857de:	f1a9 0902 	sub.w	r9, r9, #2
   857e2:	441c      	add	r4, r3
   857e4:	eba4 040a 	sub.w	r4, r4, sl
   857e8:	fbb4 f0fe 	udiv	r0, r4, lr
   857ec:	fb0e 4410 	mls	r4, lr, r0, r4
   857f0:	fb00 fc0c 	mul.w	ip, r0, ip
   857f4:	fa1f f888 	uxth.w	r8, r8
   857f8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   857fc:	45a4      	cmp	ip, r4
   857fe:	d907      	bls.n	85810 <__udivmoddi4+0x270>
   85800:	18e4      	adds	r4, r4, r3
   85802:	f100 3eff 	add.w	lr, r0, #4294967295
   85806:	d229      	bcs.n	8585c <__udivmoddi4+0x2bc>
   85808:	45a4      	cmp	ip, r4
   8580a:	d927      	bls.n	8585c <__udivmoddi4+0x2bc>
   8580c:	3802      	subs	r0, #2
   8580e:	441c      	add	r4, r3
   85810:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85814:	fba0 8902 	umull	r8, r9, r0, r2
   85818:	eba4 0c0c 	sub.w	ip, r4, ip
   8581c:	45cc      	cmp	ip, r9
   8581e:	46c2      	mov	sl, r8
   85820:	46ce      	mov	lr, r9
   85822:	d315      	bcc.n	85850 <__udivmoddi4+0x2b0>
   85824:	d012      	beq.n	8584c <__udivmoddi4+0x2ac>
   85826:	b155      	cbz	r5, 8583e <__udivmoddi4+0x29e>
   85828:	ebb6 030a 	subs.w	r3, r6, sl
   8582c:	eb6c 060e 	sbc.w	r6, ip, lr
   85830:	fa06 f707 	lsl.w	r7, r6, r7
   85834:	40cb      	lsrs	r3, r1
   85836:	431f      	orrs	r7, r3
   85838:	40ce      	lsrs	r6, r1
   8583a:	602f      	str	r7, [r5, #0]
   8583c:	606e      	str	r6, [r5, #4]
   8583e:	2100      	movs	r1, #0
   85840:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85844:	4610      	mov	r0, r2
   85846:	e6f7      	b.n	85638 <__udivmoddi4+0x98>
   85848:	4689      	mov	r9, r1
   8584a:	e6de      	b.n	8560a <__udivmoddi4+0x6a>
   8584c:	4546      	cmp	r6, r8
   8584e:	d2ea      	bcs.n	85826 <__udivmoddi4+0x286>
   85850:	ebb8 0a02 	subs.w	sl, r8, r2
   85854:	eb69 0e03 	sbc.w	lr, r9, r3
   85858:	3801      	subs	r0, #1
   8585a:	e7e4      	b.n	85826 <__udivmoddi4+0x286>
   8585c:	4670      	mov	r0, lr
   8585e:	e7d7      	b.n	85810 <__udivmoddi4+0x270>
   85860:	4618      	mov	r0, r3
   85862:	e78f      	b.n	85784 <__udivmoddi4+0x1e4>
   85864:	4681      	mov	r9, r0
   85866:	e7bd      	b.n	857e4 <__udivmoddi4+0x244>
   85868:	4611      	mov	r1, r2
   8586a:	e776      	b.n	8575a <__udivmoddi4+0x1ba>
   8586c:	3802      	subs	r0, #2
   8586e:	443c      	add	r4, r7
   85870:	e744      	b.n	856fc <__udivmoddi4+0x15c>
   85872:	4608      	mov	r0, r1
   85874:	e706      	b.n	85684 <__udivmoddi4+0xe4>
   85876:	3a02      	subs	r2, #2
   85878:	443e      	add	r6, r7
   8587a:	e72b      	b.n	856d4 <__udivmoddi4+0x134>

0008587c <__aeabi_idiv0>:
   8587c:	4770      	bx	lr
   8587e:	bf00      	nop
   85880:	00006425 	.word	0x00006425
   85884:	00000001 	.word	0x00000001
   85888:	00000002 	.word	0x00000002
   8588c:	00000004 	.word	0x00000004
   85890:	00000008 	.word	0x00000008
   85894:	00000010 	.word	0x00000010
   85898:	00000020 	.word	0x00000020
   8589c:	00000040 	.word	0x00000040
   858a0:	00000080 	.word	0x00000080
   858a4:	00000100 	.word	0x00000100
   858a8:	00000200 	.word	0x00000200
   858ac:	00000400 	.word	0x00000400

000858b0 <_global_impure_ptr>:
   858b0:	20070178 00464e49 00666e69 004e414e     x.. INF.inf.NAN.
   858c0:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   858d0:	46454443 00000000 33323130 37363534     CDEF....01234567
   858e0:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   858f0:	0000296c 00000030                       l)..0...

000858f8 <blanks.7208>:
   858f8:	20202020 20202020 20202020 20202020                     

00085908 <zeroes.7209>:
   85908:	30303030 30303030 30303030 30303030     0000000000000000
   85918:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   85928:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00085938 <__mprec_bigtens>:
   85938:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85948:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85958:	7f73bf3c 75154fdd                       <.s..O.u

00085960 <__mprec_tens>:
   85960:	00000000 3ff00000 00000000 40240000     .......?......$@
   85970:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85980:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85990:	00000000 412e8480 00000000 416312d0     .......A......cA
   859a0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   859b0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   859c0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   859d0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   859e0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   859f0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85a00:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85a10:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85a20:	79d99db4 44ea7843                       ...yCx.D

00085a28 <p05.6040>:
   85a28:	00000005 00000019 0000007d              ........}...

00085a34 <_ctype_>:
   85a34:	20202000 20202020 28282020 20282828     .         ((((( 
   85a44:	20202020 20202020 20202020 20202020                     
   85a54:	10108820 10101010 10101010 10101010      ...............
   85a64:	04040410 04040404 10040404 10101010     ................
   85a74:	41411010 41414141 01010101 01010101     ..AAAAAA........
   85a84:	01010101 01010101 01010101 10101010     ................
   85a94:	42421010 42424242 02020202 02020202     ..BBBBBB........
   85aa4:	02020202 02020202 02020202 10101010     ................
   85ab4:	00000020 00000000 00000000 00000000      ...............
	...

00085b38 <_init>:
   85b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85b3a:	bf00      	nop
   85b3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85b3e:	bc08      	pop	{r3}
   85b40:	469e      	mov	lr, r3
   85b42:	4770      	bx	lr

00085b44 <__init_array_start>:
   85b44:	000826a5 	.word	0x000826a5

00085b48 <__frame_dummy_init_array_entry>:
   85b48:	00080119                                ....

00085b4c <_fini>:
   85b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85b4e:	bf00      	nop
   85b50:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85b52:	bc08      	pop	{r3}
   85b54:	469e      	mov	lr, r3
   85b56:	4770      	bx	lr

00085b58 <__fini_array_start>:
   85b58:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4a14      	ldr	r2, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b13      	ldr	r3, [r2, #48]	; 0x30
2007003c:	f023 0303 	bic.w	r3, r3, #3
20070040:	f043 0301 	orr.w	r3, r3, #1
20070044:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070048:	f013 0f08 	tst.w	r3, #8
2007004c:	d0fb      	beq.n	20070046 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007004e:	4a12      	ldr	r2, [pc, #72]	; (20070098 <SystemInit+0x98>)
20070050:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070052:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070054:	461a      	mov	r2, r3
20070056:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070058:	f013 0f02 	tst.w	r3, #2
2007005c:	d0fb      	beq.n	20070056 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007005e:	2211      	movs	r2, #17
20070060:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070062:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070064:	461a      	mov	r2, r3
20070066:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070068:	f013 0f08 	tst.w	r3, #8
2007006c:	d0fb      	beq.n	20070066 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007006e:	2212      	movs	r2, #18
20070070:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070072:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070074:	461a      	mov	r2, r3
20070076:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070078:	f013 0f08 	tst.w	r3, #8
2007007c:	d0fb      	beq.n	20070076 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007007e:	4a07      	ldr	r2, [pc, #28]	; (2007009c <SystemInit+0x9c>)
20070080:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070082:	601a      	str	r2, [r3, #0]
20070084:	4770      	bx	lr
20070086:	bf00      	nop
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070170 	.word	0x20070170

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d915      	bls.n	200700d6 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700aa:	4b1b      	ldr	r3, [pc, #108]	; (20070118 <system_init_flash+0x74>)
200700ac:	4298      	cmp	r0, r3
200700ae:	d919      	bls.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700b0:	4b1a      	ldr	r3, [pc, #104]	; (2007011c <system_init_flash+0x78>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d91e      	bls.n	200700f4 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700b6:	4b1a      	ldr	r3, [pc, #104]	; (20070120 <system_init_flash+0x7c>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d923      	bls.n	20070104 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700bc:	4b19      	ldr	r3, [pc, #100]	; (20070124 <system_init_flash+0x80>)
200700be:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700c0:	bf94      	ite	ls
200700c2:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700c6:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700ca:	4a17      	ldr	r2, [pc, #92]	; (20070128 <system_init_flash+0x84>)
200700cc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700ce:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700d2:	6013      	str	r3, [r2, #0]
200700d4:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700d6:	2300      	movs	r3, #0
200700d8:	4a13      	ldr	r2, [pc, #76]	; (20070128 <system_init_flash+0x84>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700e4:	f44f 7380 	mov.w	r3, #256	; 0x100
200700e8:	4a0f      	ldr	r2, [pc, #60]	; (20070128 <system_init_flash+0x84>)
200700ea:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700ec:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f0:	6013      	str	r3, [r2, #0]
200700f2:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700f4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700f8:	4a0b      	ldr	r2, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fa:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700fc:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070100:	6013      	str	r3, [r2, #0]
20070102:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070104:	f44f 7340 	mov.w	r3, #768	; 0x300
20070108:	4a07      	ldr	r2, [pc, #28]	; (20070128 <system_init_flash+0x84>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	02faf07f 	.word	0x02faf07f
2007011c:	03d08fff 	.word	0x03d08fff
20070120:	04c4b3ff 	.word	0x04c4b3ff
20070124:	055d4a7f 	.word	0x055d4a7f
20070128:	400e0a00 	.word	0x400e0a00

2007012c <pin_table>:
2007012c:	5c390908 5758591d 675d5556 00003b68     ..9\.YXWVU]gh;..
2007013c:	00000000 0e3a0000 6261600f 07696663     ......:..`abcfi.
2007014c:	4342416a 47464544 14134948 50515253     jABCDEFGHI..SRQP
2007015c:	4c4d4e4f 18102e35 04061617 32310203     ONML5.........12
2007016c:	00003433                                34..

20070170 <SystemCoreClock>:
20070170:	003d0900                                ..=.

20070174 <_impure_ptr>:
20070174:	20070178                                x.. 

20070178 <impure_data>:
20070178:	00000000 20070464 200704cc 20070534     ....d.. ... 4.. 
	...
20070220:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070230:	0005deec 0000000b 00000000 00000000     ................
	...

200705a0 <__global_locale>:
200705a0:	00000043 00000000 00000000 00000000     C...............
	...
200705c0:	00000043 00000000 00000000 00000000     C...............
	...
200705e0:	00000043 00000000 00000000 00000000     C...............
	...
20070600:	00000043 00000000 00000000 00000000     C...............
	...
20070620:	00000043 00000000 00000000 00000000     C...............
	...
20070640:	00000043 00000000 00000000 00000000     C...............
	...
20070660:	00000043 00000000 00000000 00000000     C...............
	...
20070680:	00084b2d 00083e35 00000000 00085a34     -K..5>......4Z..
20070690:	00085934 000858d4 000858d4 000858d4     4Y...X...X...X..
200706a0:	000858d4 000858d4 000858d4 000858d4     .X...X...X...X..
200706b0:	000858d4 000858d4 ffffffff ffffffff     .X...X..........
200706c0:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706e8:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

2007070c <__malloc_av_>:
	...
20070714:	2007070c 2007070c 20070714 20070714     ... ... ... ... 
20070724:	2007071c 2007071c 20070724 20070724     ... ... $.. $.. 
20070734:	2007072c 2007072c 20070734 20070734     ,.. ,.. 4.. 4.. 
20070744:	2007073c 2007073c 20070744 20070744     <.. <.. D.. D.. 
20070754:	2007074c 2007074c 20070754 20070754     L.. L.. T.. T.. 
20070764:	2007075c 2007075c 20070764 20070764     \.. \.. d.. d.. 
20070774:	2007076c 2007076c 20070774 20070774     l.. l.. t.. t.. 
20070784:	2007077c 2007077c 20070784 20070784     |.. |.. ... ... 
20070794:	2007078c 2007078c 20070794 20070794     ... ... ... ... 
200707a4:	2007079c 2007079c 200707a4 200707a4     ... ... ... ... 
200707b4:	200707ac 200707ac 200707b4 200707b4     ... ... ... ... 
200707c4:	200707bc 200707bc 200707c4 200707c4     ... ... ... ... 
200707d4:	200707cc 200707cc 200707d4 200707d4     ... ... ... ... 
200707e4:	200707dc 200707dc 200707e4 200707e4     ... ... ... ... 
200707f4:	200707ec 200707ec 200707f4 200707f4     ... ... ... ... 
20070804:	200707fc 200707fc 20070804 20070804     ... ... ... ... 
20070814:	2007080c 2007080c 20070814 20070814     ... ... ... ... 
20070824:	2007081c 2007081c 20070824 20070824     ... ... $.. $.. 
20070834:	2007082c 2007082c 20070834 20070834     ,.. ,.. 4.. 4.. 
20070844:	2007083c 2007083c 20070844 20070844     <.. <.. D.. D.. 
20070854:	2007084c 2007084c 20070854 20070854     L.. L.. T.. T.. 
20070864:	2007085c 2007085c 20070864 20070864     \.. \.. d.. d.. 
20070874:	2007086c 2007086c 20070874 20070874     l.. l.. t.. t.. 
20070884:	2007087c 2007087c 20070884 20070884     |.. |.. ... ... 
20070894:	2007088c 2007088c 20070894 20070894     ... ... ... ... 
200708a4:	2007089c 2007089c 200708a4 200708a4     ... ... ... ... 
200708b4:	200708ac 200708ac 200708b4 200708b4     ... ... ... ... 
200708c4:	200708bc 200708bc 200708c4 200708c4     ... ... ... ... 
200708d4:	200708cc 200708cc 200708d4 200708d4     ... ... ... ... 
200708e4:	200708dc 200708dc 200708e4 200708e4     ... ... ... ... 
200708f4:	200708ec 200708ec 200708f4 200708f4     ... ... ... ... 
20070904:	200708fc 200708fc 20070904 20070904     ... ... ... ... 
20070914:	2007090c 2007090c 20070914 20070914     ... ... ... ... 
20070924:	2007091c 2007091c 20070924 20070924     ... ... $.. $.. 
20070934:	2007092c 2007092c 20070934 20070934     ,.. ,.. 4.. 4.. 
20070944:	2007093c 2007093c 20070944 20070944     <.. <.. D.. D.. 
20070954:	2007094c 2007094c 20070954 20070954     L.. L.. T.. T.. 
20070964:	2007095c 2007095c 20070964 20070964     \.. \.. d.. d.. 
20070974:	2007096c 2007096c 20070974 20070974     l.. l.. t.. t.. 
20070984:	2007097c 2007097c 20070984 20070984     |.. |.. ... ... 
20070994:	2007098c 2007098c 20070994 20070994     ... ... ... ... 
200709a4:	2007099c 2007099c 200709a4 200709a4     ... ... ... ... 
200709b4:	200709ac 200709ac 200709b4 200709b4     ... ... ... ... 
200709c4:	200709bc 200709bc 200709c4 200709c4     ... ... ... ... 
200709d4:	200709cc 200709cc 200709d4 200709d4     ... ... ... ... 
200709e4:	200709dc 200709dc 200709e4 200709e4     ... ... ... ... 
200709f4:	200709ec 200709ec 200709f4 200709f4     ... ... ... ... 
20070a04:	200709fc 200709fc 20070a04 20070a04     ... ... ... ... 
20070a14:	20070a0c 20070a0c 20070a14 20070a14     ... ... ... ... 
20070a24:	20070a1c 20070a1c 20070a24 20070a24     ... ... $.. $.. 
20070a34:	20070a2c 20070a2c 20070a34 20070a34     ,.. ,.. 4.. 4.. 
20070a44:	20070a3c 20070a3c 20070a44 20070a44     <.. <.. D.. D.. 
20070a54:	20070a4c 20070a4c 20070a54 20070a54     L.. L.. T.. T.. 
20070a64:	20070a5c 20070a5c 20070a64 20070a64     \.. \.. d.. d.. 
20070a74:	20070a6c 20070a6c 20070a74 20070a74     l.. l.. t.. t.. 
20070a84:	20070a7c 20070a7c 20070a84 20070a84     |.. |.. ... ... 
20070a94:	20070a8c 20070a8c 20070a94 20070a94     ... ... ... ... 
20070aa4:	20070a9c 20070a9c 20070aa4 20070aa4     ... ... ... ... 
20070ab4:	20070aac 20070aac 20070ab4 20070ab4     ... ... ... ... 
20070ac4:	20070abc 20070abc 20070ac4 20070ac4     ... ... ... ... 
20070ad4:	20070acc 20070acc 20070ad4 20070ad4     ... ... ... ... 
20070ae4:	20070adc 20070adc 20070ae4 20070ae4     ... ... ... ... 
20070af4:	20070aec 20070aec 20070af4 20070af4     ... ... ... ... 
20070b04:	20070afc 20070afc 20070b04 20070b04     ... ... ... ... 

20070b14 <__malloc_sbrk_base>:
20070b14:	ffffffff                                ....

20070b18 <__malloc_trim_threshold>:
20070b18:	00020000                                ....
